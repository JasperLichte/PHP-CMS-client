{"version":3,"sources":["util/api/ApiResponse.ts","config.ts","util/api/Api.ts","util/models/Setting.ts","util/models/User.ts","util/api/responses/PreflightResponse.ts","util/models/Markdown.ts","util/models/Page.ts","util/api/responses/pages/GetPageResponse.ts","util/api/responses/GetConfigResponse.ts","util/api/responses/auth/LoginResponse.ts","util/api/responses/NoDataResponse.ts","util/api/responses/auth/RegisterResponse.ts","util/models/Statistics.ts","util/api/responses/admin/GetStatisticsResponse.ts","util/models/PageGroup.tsx","util/api/responses/pages/GetPageGroupResponse.ts","util/api/responses/GetJsonFromStoreResponse.ts","util/api/RequestFactory.ts","actions/ActionType.ts","util/errors/ErrorType.ts","selectors/selectors.ts","components/settings/SettingsApplyer.tsx","components/error/Error.tsx","components/pages/auth/login/LoginForm.tsx","util/UserServices.ts","components/pages/auth/AuthPage.tsx","components/pages/auth/login/LoginPage.tsx","components/pages/auth/logout/LogoutPage.tsx","components/pages/auth/register/RegisterForm.tsx","components/pages/auth/register/RegisterPage.tsx","components/routes/AuthRouter.tsx","components/pages/home/svg_scene/grass/Blade.tsx","components/pages/home/svg_scene/grass/Grass.tsx","components/pages/home/svg_scene/sun/SunShine.tsx","components/pages/home/svg_scene/sun/Sun.tsx","components/pages/home/svg_scene/cloud/Cloud.tsx","components/pages/home/svg_scene/SvgScene.tsx","components/pages/home/HomePage.tsx","util/themes/themes.ts","components/pages/admin/dashboard/DashboardPage.tsx","components/placeholder/loading/LoadingSpinner.tsx","components/pages/admin/statistics/StatisticsPage.tsx","hooks/useMarkdownPage.tsx","components/md_page/MarkDownToJsx.tsx","components/md_page/edit/EditMarkdownPage.tsx","hooks/useMarkdownPageGroup.tsx","components/pages/admin/page_parts/EditSubPagePartsPage.tsx","components/pages/admin/page_parts/EditPagePartPage.tsx","components/routes/admin/AdminSubPagePartsRouter.tsx","hooks/useColorTheme.ts","components/pages/admin/colors/inputs/ColorThemeInputs.tsx","components/pages/admin/colors/ColorsPage.tsx","components/routes/admin/AdminRouter.tsx","components/pages/page/nav/Nav.tsx","components/pages/page/Page.tsx","components/pages/page/footer/Footer.tsx","components/pages/page/content/PageContent.tsx","components/pages/page/parts_page/PartsPage.tsx","components/md_page/MarkdownPage.tsx","components/routes/PagesRouter.tsx","components/pages/admin/AdminPage.tsx","components/routes/Routes.tsx","components/app/App.tsx","util/models/State.ts","reducers/reducer.ts","index.tsx","license.ts"],"names":["ApiResponse","data","status","success","message","this","input","parseInt","Api","path","license","Promise","resolve","a","url","URL","baseUrl","searchParams","delete","append","fetch","href","headers","credentials","res","json","deserialize","body","method","JSON","stringify","obj","get","RequestFactory","then","post","config","Setting","key","value","defaultValue","cssProperty","User","id","email","isAdmin","PreflightResponse","settings","user","allowMultiRequests","map","s","Markdown","content","htmlContent","description","Page","slug","title","markdown","GetPageResponse","page","GetConfigResponse","baseApiUrl","LoginResponse","NoDataResponse","RegisterResponse","Statistics","totalRequests","requestsByPath","Object","keys","forEach","p","GetStatisticsResponse","statistics","Pagegroup","pages","filter","GetPageGroupResponse","group","PageGroup","GetJsonFromStoreResponse","makeGetRequest","makePostRequest","password","ActionType","ErrorType","userSelector","state","settingsSelector","errorSelector","error","themeSelector","theme","SettingsApplyer","css","join","errorTypeByHttpStatusCode","statusCode","NOT_FOUND","SERVER_ERROR","Error","errorType","component","INVALID_LICENSE","LoginForm","onSubmit","useState","setEmail","setPassword","className","type","onChange","e","target","onClick","UserServices","doLogin","register","doLogout","AuthPage","children","LoginPage","setUser","dispatch","useDispatch","history","useHistory","useEffect","SET_USER","login","push","to","LogoutPage","loading","setLoading","logout","RegisterForm","RegisterPage","AuthRouter","props","useRouteMatch","Blade","x","width","height","points","y","animationDuration","Math","floor","random","darkness","fill","style","animationDelay","Grass","i","window","innerWidth","round","SunShine","p1","p2","rest","x1","y1","x2","y2","Sun","radius","shines","shineLengthLong","shineLengthShort","numberOfShines","setNumberOfShines","setFilter","slice","PI","shineProps","r","angle","cos","sin","onAnimationEnd","operator","in","result","stdDeviation","floodColor","in2","cx","cy","l","Cloud","text","pos","scale","setScale","baseAnimationDuration","min","max","ceil","calculateRandomAnimationDuration","colorShiftDuration","transform","onMouseEnter","onMouseLeave","animationDurationString","dominantBaseline","textAnchor","duration","d2","SvgScene","links","innerHeight","calculateScaleByWindowSize","calculateCloudXPos","calculateCloudYPos","HomePage","document","classList","add","remove","defaultTheme","nav","bg","font","footer","sections","colors","DashboardPage","backgroundColor","color","LoadingSpinner","delayMs","fullScreen","isLoading","setIsLoading","timeOut","setTimeout","clearTimeout","undefined","data-active","size","StatisticsPage","setStatistics","getStatistics","useMarkdownPage","setPage","setError","getPage","MarkDownToJsx","md","rootRef","useRef","ref","EditMarkdownPage","onSave","_title","groupId","setMd","setTitle","createPage","editPage","placeholder","create","edit","disabled","useMarkdownPageGroup","setPages","getPageGroup","all","responses","EditSubPagePartsPage","useSelector","length","deletePage","location","reload","EditPagePartPage","useParams","AdminSubPagePartsRouter","exact","Date","now","useColorTheme","setTheme","getJsonFromStore","object","parse","ColorThemeInputs","oldTheme","setSections","newSections","splice","_theme","saveJsonInStore","ColorsPage","AdminRouter","Nav","isOpen","setIsOpen","data-visible","activeClassName","Footer","getFullYear","pageVariants","initial","opacity","out","pageTransition","ease","PageContent","SET_THEME","div","animate","exit","variants","transition","PartsPage","pagesAreLoading","themeIsLoading","zIndex","MarkdownPage","PagesRouter","useLocation","exitBeforeEnter","pathname","AdminPage","Routes","App","getConfig","SET_ERROR","preflight","SET_SETTINGS","SET_ALLOW_MULTIREQUESTS","handlePreflightResponse","State","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e6f7f777.chunk.js","sourcesContent":["import Serializable from \"../interfaces/Serializable\";\r\n\r\nclass ApiResponse<T> implements Serializable {\r\n\r\n    public status = 200;\r\n    public success = false;\r\n    public data: T;\r\n    public message = '';\r\n\r\n    constructor(data: T) {\r\n        // @ts-ignore\r\n        this.data = data;\r\n    }\r\n\r\n    deserialize(input: {}): ApiResponse<T> {\r\n        // @ts-ignore\r\n        this.status = parseInt(input['status']);\r\n\r\n        // @ts-ignore\r\n        this.success = !!input['success'];\r\n\r\n        // @ts-ignore\r\n        input['message'] && (this.message = `${input['message']}`);\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default ApiResponse;\r\n","export default {\r\n    PRODUCTION: true,\r\n    BASE_PROD_API_URL: 'https://jaspress.lichte.info/api',\r\n    BASE_DEV_API_URL: 'http://localhost/github/jaspress-api/api',\r\n};\r\n","import ApiResponse from \"./ApiResponse\";\r\nimport RequestFactory from \"./RequestFactory\";\r\nimport config from \"../../config\";\r\nimport RequestBody from \"./requests/RequestBody\";\r\n\r\nclass Api {\r\n\r\n    public static baseUrl = (config.PRODUCTION ? config.BASE_PROD_API_URL : config.BASE_DEV_API_URL);\r\n\r\n    private static headers = () => ({\r\n\r\n    });\r\n\r\n    private static get(path: string, license: string): Promise<ApiResponse<any>> {\r\n        return new Promise(async resolve => {\r\n            const url = new URL(`${Api.baseUrl}${path}`);\r\n            url.searchParams.delete('license');\r\n            url.searchParams.append('license', license);\r\n\r\n            const res = await fetch(url.href, {\r\n                headers: Api.headers(),\r\n                credentials: 'include',\r\n            });\r\n            const json = await res.json();\r\n            resolve((new ApiResponse(json)).deserialize(json));\r\n        });\r\n    }\r\n\r\n    private static post(path: string, license: string) {\r\n        return (body: RequestBody) => {\r\n            return new Promise(async (resolve) => {\r\n                const json = await (await fetch(\r\n                    `${Api.baseUrl}${path}`,\r\n                    {\r\n                        method: 'POST',\r\n                        body: JSON.stringify({...body, license}),\r\n                        headers: Api.headers(),\r\n                        credentials: 'include',\r\n                    }\r\n                )).json();\r\n                resolve((new ApiResponse(json)).deserialize(json));\r\n            });\r\n        }\r\n    }\r\n\r\n    public static async makeGetRequest<T>(obj: T, url: string): Promise<ApiResponse<T>> {\r\n        return new Promise<ApiResponse<T>>(resolve => {\r\n            Api.get(url, RequestFactory.license).then(res => {\r\n                // @ts-ignore\r\n                resolve((new ApiResponse(obj.deserialize(res.data.data))).deserialize(res));\r\n            });\r\n        });\r\n    }\r\n\r\n    public static async makePostRequest<T>(obj: T, url: string, body: RequestBody): Promise<ApiResponse<T>> {\r\n        return new Promise<ApiResponse<T>>((resolve) => {\r\n            Api.post(url, RequestFactory.license)(body).then(res => {\r\n                // @ts-ignore\r\n                resolve((new ApiResponse(obj.deserialize(res.data.data))).deserialize(res));\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default Api;\r\n","import Serializable from \"../interfaces/Serializable\";\r\n\r\nexport default class Setting implements Serializable {\r\n\r\n    key: string = '';\r\n    value: string = '';\r\n    defaultValue: string = '';\r\n    cssProperty: string|null = null;\r\n\r\n    deserialize(input: {}): Setting {\r\n        // @ts-ignore\r\n        this.key = input['key'];\r\n        // @ts-ignore\r\n        this.value = input['value'];\r\n        // @ts-ignore\r\n        this.defaultValue = input['defaultValue'];\r\n        // @ts-ignore\r\n        input['cssProperty'] && (this.cssProperty = input['cssProperty']);\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n","import Serializable from \"../interfaces/Serializable\";\r\n\r\nexport default class User implements Serializable {\r\n\r\n    id: number = 0;\r\n    email: string = '';\r\n    isAdmin: boolean = false;\r\n\r\n    deserialize(input: {}): User {\r\n        if (!input) {\r\n            return this;\r\n        }\r\n\r\n        // @ts-ignore\r\n        input['id'] && (this.id = parseInt(input['id']));\r\n        // @ts-ignore\r\n        input['email'] && (this.email = `${input['email']}`);\r\n        // @ts-ignore\r\n        input['isAdmin'] && (this.isAdmin = !!input['isAdmin']);\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n","import ResponseData from \"./ResponseData\";\r\nimport Setting from \"../../models/Setting\";\r\nimport User from \"../../models/User\";\r\n\r\nclass PreflightResponse implements ResponseData{\r\n\r\n    public settings: Setting[] = [];\r\n    public user: User|null = null;\r\n    public allowMultiRequests: boolean = false;\r\n\r\n    deserialize(input: {}): PreflightResponse {\r\n        if (!input) {\r\n            return this;\r\n        }\r\n\r\n        // @ts-ignore\r\n        input['settings'] && (this.settings = input['settings'].map(s => (new Setting()).deserialize(s)));\r\n        // @ts-ignore\r\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\r\n        // @ts-ignore\r\n        (this.allowMultiRequests = !!input['allowMultiRequests']);\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default PreflightResponse;\r\n","import Serializable from \"../interfaces/Serializable\";\r\n\r\nexport default class Markdown implements Serializable {\r\n\r\n    content = '';\r\n    htmlContent = '';\r\n    description = '';\r\n\r\n    deserialize(input: {}): Markdown {\r\n        // @ts-ignore\r\n        input['content'] && (this.content = input['content']);\r\n        // @ts-ignore\r\n        input['htmlContent'] && (this.htmlContent = input['htmlContent']);\r\n        // @ts-ignore\r\n        input['description'] && (this.description = input['description']);\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n","import Serializable from \"../interfaces/Serializable\";\r\nimport Markdown from \"./Markdown\";\r\n\r\nexport default class Page implements Serializable {\r\n\r\n    slug: string = '';\r\n    title: string = '';\r\n    markdown: Markdown|null = null;\r\n    \r\n    deserialize(input: {}): Page {\r\n        // @ts-ignore\r\n        this.slug = input['slug'];\r\n        // @ts-ignore\r\n        this.title = input['title'];\r\n\r\n        // @ts-ignore\r\n        this.markdown = (new Markdown()).deserialize(input['markdown']);\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n","import ResponseData from \"../ResponseData\";\r\nimport Page from \"../../../models/Page\";\r\n\r\nexport default class GetPageResponse implements ResponseData {\r\n\r\n    page: Page|null = null;\r\n\r\n    deserialize(input: {}): GetPageResponse {\r\n        if (!input) {\r\n            return this;\r\n        }\r\n\r\n        // @ts-ignore\r\n        input['page'] && (this.page = (new Page()).deserialize(input['page']));\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n","import ResponseData from \"./ResponseData\";\r\n\r\nclass GetConfigResponse implements ResponseData {\r\n\r\n    public baseApiUrl: string = '';\r\n\r\n    deserialize(input: {}): GetConfigResponse {\r\n        if (!input) {\r\n            return this;\r\n        }\r\n\r\n        // @ts-ignore\r\n        this.baseApiUrl = `${input['base_api_url']}`;\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default GetConfigResponse;\r\n","import ResponseData from \"../ResponseData\";\r\nimport User from \"../../../models/User\";\r\n\r\nclass LoginResponse implements ResponseData {\r\n\r\n    public user: User|null = null;\r\n\r\n    deserialize(input: {}): LoginResponse {\r\n        if (!input) {\r\n            return this;\r\n        }\r\n\r\n        // @ts-ignore\r\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default LoginResponse;\r\n","import ResponseData from \"./ResponseData\";\r\n\r\nclass NoDataResponse implements ResponseData {\r\n\r\n    deserialize(input: {}): NoDataResponse {\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default NoDataResponse;\r\n","import ResponseData from \"../ResponseData\";\r\nimport User from \"../../../models/User\";\r\n\r\nclass RegisterResponse implements ResponseData {\r\n\r\n    public user: User|null = null;\r\n\r\n    deserialize(input: {}): RegisterResponse {\r\n        if (!input) {\r\n            return this;\r\n        }\r\n\r\n        // @ts-ignore\r\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default RegisterResponse;\r\n","import Serializable from \"../interfaces/Serializable\";\r\n\r\nexport default class Statistics implements Serializable {\r\n\r\n    totalRequests: number = 0;\r\n    requestsByPath: {[key: string]: number} = {};\r\n\r\n    deserialize(input: {}): Statistics {\r\n        if (!input) return this;\r\n\r\n        // @ts-ignore\r\n        this.totalRequests = parseInt(input['totalRequests']);\r\n\r\n        // @ts-ignore\r\n        Object.keys(input['requestsByPath']).forEach(p => this.requestsByPath[p] = parseInt(input['requestsByPath'][p]));\r\n\r\n        return this;\r\n    }\r\n}\r\n","import ResponseData from \"../ResponseData\";\r\nimport Statistics from \"../../../models/Statistics\";\r\n\r\nclass GetStatisticsResponse implements ResponseData {\r\n\r\n    statistics: Statistics = new Statistics();\r\n\r\n    deserialize(input: {}): GetStatisticsResponse {\r\n        if (!input) {\r\n            return this;\r\n        }\r\n\r\n        // @ts-ignore\r\n        this.statistics = (new Statistics()).deserialize(input['statistics']);\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default GetStatisticsResponse;\r\n","import Serializable from \"../interfaces/Serializable\";\r\n\r\nexport default class Pagegroup implements Serializable {\r\n\r\n    slug: string = '';\r\n    pages: string[] = [];\r\n\r\n    deserialize(input: {}): Pagegroup {\r\n        // @ts-ignore\r\n        if (!input) {\r\n            return this;\r\n        }\r\n\r\n        // @ts-ignore\r\n        input['slug'] && (this.slug = `${input['slug']}`);\r\n\r\n        // @ts-ignore\r\n        input['pages'] && (this.pages = input['pages'].filter(p => !!p).map(p => `${p}`));\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n","import ResponseData from \"../ResponseData\";\r\nimport PageGroup from \"../../../models/PageGroup\";\r\n\r\nexport default class GetPageGroupResponse implements ResponseData {\r\n\r\n    group: PageGroup = new PageGroup();\r\n\r\n    deserialize(input: {}): GetPageGroupResponse {\r\n        if (!input) {\r\n            return this;\r\n        }\r\n\r\n        // @ts-ignore\r\n        input['group'] && (this.group = (new PageGroup()).deserialize(input['group']));\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n","import ResponseData from \"./ResponseData\";\r\n\r\nclass GetJsonFromStoreResponse implements ResponseData{\r\n\r\n    public json: string = '';\r\n\r\n    deserialize(input: {}): GetJsonFromStoreResponse {\r\n        if (!input) {\r\n            return this;\r\n        }\r\n\r\n        // @ts-ignore\r\n        input['json'] && (this.json = input['json']);\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport default GetJsonFromStoreResponse;\r\n","import Api from \"./Api\";\r\nimport PreflightResponse from \"./responses/PreflightResponse\";\r\nimport GetPageResponse from \"./responses/pages/GetPageResponse\";\r\nimport GetConfigResponse from \"./responses/GetConfigResponse\";\r\nimport LoginResponse from \"./responses/auth/LoginResponse\";\r\nimport NoDataResponse from \"./responses/NoDataResponse\";\r\nimport RegisterResponse from \"./responses/auth/RegisterResponse\";\r\nimport GetStatisticsResponse from \"./responses/admin/GetStatisticsResponse\";\r\nimport CreateMdPageRequestBody from \"./requests/CreateMdPageRequestBody\";\r\nimport EditMdPageRequestBody from \"./requests/EditMdPageRequestBody\";\r\nimport GetPageGroupResponse from \"./responses/pages/GetPageGroupResponse\";\r\nimport GetJsonFromStoreResponse from \"./responses/GetJsonFromStoreResponse\";\r\n\r\nexport default class RequestFactory {\r\n\r\n    public static license: string = '';\r\n\r\n    public static async getConfig() {\r\n        return Api.makeGetRequest<GetConfigResponse>(\r\n            new GetConfigResponse(),\r\n            `/config/get.php`\r\n        );\r\n    }\r\n\r\n    public static async preflight(license: string) {\r\n        RequestFactory.license = license;\r\n        return Api.makeGetRequest<PreflightResponse>(\r\n            new PreflightResponse(),\r\n            `/preflight.php`\r\n        );\r\n    }\r\n\r\n    public static async getPage(slug: string) {\r\n        return Api.makeGetRequest<GetPageResponse>(\r\n            new GetPageResponse(),\r\n            `/page/get.php?p=${slug}`\r\n        );\r\n    }\r\n\r\n    public static async createPage(body: CreateMdPageRequestBody) {\r\n        return Api.makePostRequest<NoDataResponse>(\r\n            new NoDataResponse(),\r\n            `/admin/page/new.php`,\r\n            body\r\n        );\r\n    }\r\n\r\n    public static async editPage(body: EditMdPageRequestBody) {\r\n        return Api.makePostRequest<NoDataResponse>(\r\n            new NoDataResponse(),\r\n            `/admin/page/edit.php`,\r\n            body\r\n        );\r\n    }\r\n\r\n    public static async deletePage(slug: string) {\r\n        return Api.makeGetRequest<NoDataResponse>(\r\n            new NoDataResponse(),\r\n            `/admin/page/delete.php?p=${slug}`,\r\n        );\r\n    }\r\n\r\n    public static async getPageGroup(slug: string) {\r\n        return Api.makeGetRequest<GetPageGroupResponse>(\r\n            new GetPageGroupResponse(),\r\n            `/page/group/get.php?group=${slug}`,\r\n        );\r\n    }\r\n\r\n    public static async doLogin(email: string, password: string) {\r\n        return Api.makePostRequest<LoginResponse>(\r\n            new LoginResponse(),\r\n            `/auth/login.php`,\r\n            {email, password}\r\n        );\r\n    }\r\n\r\n    public static async register(email: string, password: string) {\r\n        return Api.makePostRequest<RegisterResponse>(\r\n            new RegisterResponse(),\r\n            `/auth/register.php`,\r\n            {email, password}\r\n        );\r\n    }\r\n\r\n    public static async doLogout() {\r\n        return Api.makeGetRequest<NoDataResponse>(\r\n            new NoDataResponse(),\r\n            `/auth/logout.php`,\r\n        );\r\n    }\r\n\r\n    public static async getStatistics() {\r\n        return Api.makeGetRequest<GetStatisticsResponse>(\r\n            new GetStatisticsResponse(),\r\n            '/admin/statistics/get.php'\r\n        );\r\n    }\r\n\r\n    public static async getJsonFromStore(id: string) {\r\n        return Api.makeGetRequest<GetJsonFromStoreResponse>(\r\n            new GetJsonFromStoreResponse(),\r\n            `/store/get.php?id=${id}`\r\n        );\r\n    }\r\n\r\n    public static async saveJsonInStore(id: string, json: string) {\r\n        return Api.makePostRequest<NoDataResponse>(\r\n            new NoDataResponse(),\r\n            `/admin/store/save.php?id=${id}`,\r\n            {json}\r\n        );\r\n    }\r\n\r\n}\r\n","enum ActionType {\r\n    SET_USER = 0,\r\n    SET_SETTINGS = 1,\r\n    SET_ERROR = 2,\r\n    SET_THEME = 3,\r\n    SET_ALLOW_MULTIREQUESTS = 4,\r\n}\r\n\r\nexport default ActionType;\r\n","enum ErrorType {\r\n    INVALID_LICENSE = 1,\r\n    SERVER_ERROR = 2,\r\n    NOT_FOUND = 3,\r\n}\r\n\r\nexport default ErrorType;\r\nexport function errorTypeByHttpStatusCode(statusCode: number): ErrorType|null {\r\n    switch (statusCode) {\r\n        case 200: return null;\r\n        case 404: return ErrorType.NOT_FOUND;\r\n        case 500: return ErrorType.SERVER_ERROR;\r\n    }\r\n    return ErrorType.SERVER_ERROR;\r\n}\r\n","import State from \"../util/models/State\";\r\nimport Setting from \"../util/models/Setting\";\r\nimport ErrorType from \"../util/errors/ErrorType\";\r\nimport User from \"../util/models/User\";\r\nimport {Theme} from \"../util/themes/themes\";\r\n\r\ntype Selector<T> = (state: State) => T;\r\n\r\nexport const stateSelector: Selector<State> = state => state;\r\nexport const userSelector: Selector<User|null> = state => state.user;\r\nexport const settingsSelector: Selector<Setting[]|null> = state => state.settings;\r\nexport const errorSelector: Selector<ErrorType|null> = state => state.error;\r\nexport const themeSelector: Selector<Theme> = state => state.theme;\r\n","import React from \"react\";\r\nimport Setting from \"../../util/models/Setting\";\r\n\r\ninterface IProps {\r\n    settings: Setting[],\r\n}\r\n\r\nexport default function SettingsApplyer({settings}: IProps) {\r\n    const css = `html {\r\n        ${\r\n            settings\r\n            .filter(s => s.cssProperty != null)\r\n            .map(s => `${s.cssProperty}: ${s.value};`)\r\n            .join('')\r\n        }\r\n    }`;\r\n\r\n    return (\r\n        <style>{css}</style>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ErrorType from \"../../util/errors/ErrorType\";\r\n\r\ninterface IProps {\r\n    errorType: ErrorType,\r\n    message?: string,\r\n}\r\n\r\nexport default function Error({errorType, message}: IProps) {\r\n    const component = ((errorType: ErrorType) => {\r\n        switch (errorType) {\r\n            case ErrorType.INVALID_LICENSE:\r\n                return (<p>{message || 'Invalid License!'}</p>);\r\n            case ErrorType.SERVER_ERROR:\r\n                return (<p>{message || 'Unexpected Server error'}</p>);\r\n            case ErrorType.NOT_FOUND:\r\n                return (<p>{message || 'Not found'}</p>);\r\n        }\r\n        return <p>An error occurred</p>;\r\n    })(errorType);\r\n\r\n    return (<section>{component}</section>);\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\ninterface IProps {\r\n    onSubmit: (email: string, password: string) => any,\r\n}\r\n\r\nexport default function LoginForm({onSubmit}: IProps) {\r\n    const [ email, setEmail ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n\r\n    return (<div className=\"auth-form\">\r\n        <h2>E-Mail</h2>\r\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        <h2>Passwort</h2>\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        <button onClick={() => onSubmit(email, password)}>Anmelden</button>\r\n    </div>);\r\n}\r\n","import User from \"./models/User\";\r\nimport RequestFactory from \"./api/RequestFactory\";\r\n\r\nexport default class UserServices {\r\n\r\n    public static async login(email: string, password: string): Promise<User|null> {\r\n        const res = await RequestFactory.doLogin(email, password);\r\n        return res.data.user;\r\n    }\r\n\r\n    public static async register(email: string, password: string): Promise<User|null> {\r\n        const res = await RequestFactory.register(email, password);\r\n        return res.data.user;\r\n    }\r\n\r\n    public static async logout(): Promise<boolean> {\r\n        const res = await RequestFactory.doLogout();\r\n        return (res.status === 200);\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport './AuthPage.scss';\r\n\r\nconst AuthPage: React.FC = ({children}) => {\r\n    return (\r\n        <div className=\"auth-page\">\r\n            <div className=\"wrapper\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthPage;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport User from \"../../../../util/models/User\";\r\nimport UserServices from \"../../../../util/UserServices\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ActionType from \"../../../../actions/ActionType\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport AuthPage from \"../AuthPage\";\r\n\r\nexport default function LoginPage() {\r\n    const [user, setUser] = useState<User|null>(null);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: ActionType.SET_USER,\r\n            user: user,\r\n        });\r\n    }, [user, dispatch]);\r\n\r\n    return (<AuthPage>\r\n        <h1>Anmelden</h1>\r\n        <LoginForm onSubmit={(email, password) => {\r\n            if (!email || !password) {\r\n                return;\r\n            }\r\n\r\n            UserServices.login(email, password).then(user => {\r\n                setUser(user);\r\n                if (user?.isAdmin) {\r\n                    history.push('/admin');\r\n                } else {\r\n                    history.push('/');\r\n                }\r\n            });\r\n        }} />\r\n        <Link to=\"/auth/register\">Neuen Account erstellen</Link>\r\n    </AuthPage>);\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport UserServices from \"../../../../util/UserServices\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ActionType from \"../../../../actions/ActionType\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport default function LogoutPage() {\r\n    const [loading, setLoading] = useState(true);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        UserServices.logout().then(success => {\r\n            if (success) {\r\n                dispatch({\r\n                    type: ActionType.SET_USER,\r\n                    user: null,\r\n                });\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [dispatch]);\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n    return <Redirect to=\"/\" />\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\ninterface IProps {\r\n    onSubmit: (email: string, password: string) => any,\r\n}\r\n\r\nexport default function RegisterForm({onSubmit}: IProps) {\r\n    const [ email, setEmail ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n\r\n    return (<div className=\"auth-form\">\r\n        <h2>E-Mail</h2>\r\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        <h2>Passwort</h2>\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        <button onClick={() => onSubmit(email, password)}>Erstellen</button>\r\n    </div>);\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport RegisterForm from \"./RegisterForm\";\r\nimport User from \"../../../../util/models/User\";\r\nimport UserServices from \"../../../../util/UserServices\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ActionType from \"../../../../actions/ActionType\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport AuthPage from \"../AuthPage\";\r\n\r\nexport default function RegisterPage() {\r\n    const [user, setUser] = useState<User|null>(null);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: ActionType.SET_USER,\r\n            user: user,\r\n        });\r\n    }, [user, dispatch]);\r\n\r\n    return (<AuthPage>\r\n        <h1>Registrieren</h1>\r\n        <RegisterForm onSubmit={(email, password) => {\r\n            UserServices.register(email, password).then(user => {\r\n                if (email && password) {\r\n                    setUser(user);\r\n                    history.push('/');\r\n                }\r\n            });\r\n        }} />\r\n        <Link to=\"/auth/login\">Mit bestehendem Account anmelden</Link>\r\n    </AuthPage>);\r\n}\r\n","import React from 'react'\r\nimport {Route, Switch, useRouteMatch} from 'react-router-dom';\r\nimport LoginPage from \"../pages/auth/login/LoginPage\";\r\nimport Error from \"../error/Error\";\r\nimport ErrorType from \"../../util/errors/ErrorType\";\r\nimport LogoutPage from \"../pages/auth/logout/LogoutPage\";\r\nimport RegisterPage from \"../pages/auth/register/RegisterPage\";\r\nimport {IRouterProps} from \"./Routes\";\r\n\r\nconst AuthRouter = (props: IRouterProps) => {\r\n    const {path, } = useRouteMatch();\r\n\r\n    return (<Switch>\r\n        <Route path={`${path}/login`}>\r\n            <LoginPage/>\r\n        </Route>\r\n        <Route path={`${path}/register`}>\r\n            <RegisterPage/>\r\n        </Route>\r\n        <Route path={`${path}/logout`}>\r\n            <LogoutPage/>\r\n        </Route>\r\n        <Route path={`${path}/*`}>\r\n            <Error errorType={ErrorType.NOT_FOUND}/>\r\n        </Route>\r\n    </Switch>);\r\n};\r\n\r\nexport default AuthRouter;\r\n","import React from \"react\";\r\n\r\nexport interface IBladeProps {\r\n    x: number,\r\n    width: number,\r\n    height: number,\r\n}\r\n\r\nexport default function Blade({x, width, height}: IBladeProps) {\r\n    const points = [\r\n        {x: x + (width / 2), y: 0},\r\n        {x: x, y: height},\r\n        {x: x + width, y: height},\r\n    ];\r\n\r\n    const animationDuration = (Math.floor(Math.random() * 3000 - 500)) + 500;\r\n    const darkness = Math.floor(Math.random() * (101)) + 15;\r\n    return <polygon\r\n        className=\"blade\"\r\n        points={points.map(p => ({...p, y: p.y + (120 - height)})).map(p => `${p.x} ${p.y}`).join(', ')}\r\n        fill={`rgb(${darkness}, 140, ${darkness})`}\r\n        style={{\r\n            animationDuration: `${animationDuration}ms, 2s`,\r\n            animationDelay: `0s, ${animationDuration}ms`\r\n        }}\r\n    />;\r\n}\r\n","import React from \"react\";\r\nimport Blade, {IBladeProps} from \"./Blade\";\r\n\r\nexport default function Grass() {\r\n    const props: IBladeProps[] = [];\r\n    for (let i = 0; i < (window.innerWidth / 8); i++) {\r\n        const height = Math.floor(Math.random() * (101)) + 60;\r\n        props.push({\r\n            x: i * 8,\r\n            width: Math.round(height / 12),\r\n            height: height,\r\n        });\r\n    }\r\n\r\n    return (\r\n<g className=\"grass\">\r\n    {props.map(p => <Blade {...p} key={p.x} />)}\r\n</g>);\r\n}\r\n","import React from \"react\";\r\n\r\nexport interface ISunshineProps {\r\n    p1: {x: number, y: number},\r\n    p2: {x: number, y: number},\r\n    filter: string,\r\n}\r\n\r\nconst SunShine: React.FC<ISunshineProps> = ({\r\n    p1,\r\n    p2,\r\n    filter,\r\n    ...rest\r\n}: ISunshineProps) => {\r\n    return <line\r\n        className=\"sun-shine\"\r\n        filter={filter}\r\n        {...rest}\r\n        x1={p1.x}\r\n        y1={p1.y}\r\n        x2={p2.x}\r\n        y2={p2.y}\r\n    />;\r\n};\r\n\r\nexport default SunShine;\r\n","import React, {useState} from \"react\";\r\nimport SunShine, {ISunshineProps} from \"./SunShine\";\r\n\r\ninterface IProps {\r\n    radius: number,\r\n    shines: number,\r\n    shineLengthLong: number,\r\n    shineLengthShort: number\r\n}\r\n\r\nexport default function Sun({radius, shines, shineLengthLong, shineLengthShort}: IProps) {\r\n    const [numberOfShines, setNumberOfShines] = useState(0);\r\n    const [filter, setFilter] = useState('');\r\n\r\n    const cx = -140;\r\n    const cy = 300;\r\n\r\n    const slice = 2 * Math.PI / numberOfShines;\r\n    const shineProps: ISunshineProps[] = [];\r\n    for (let i = 0; i < numberOfShines; i++) {\r\n        const r = radius + (i % 2 === 0 ? shineLengthLong : shineLengthShort);\r\n        const angle = slice * i;\r\n        shineProps.push({\r\n            p1: {\r\n                x: cx + (radius + 10) * Math.cos(angle),\r\n                y: cy + (radius + 10) * Math.sin(angle),\r\n            },\r\n            p2: {\r\n                x: cx + r * Math.cos(angle),\r\n                y: cy + r * Math.sin(angle),\r\n            },\r\n            filter: '',\r\n        });\r\n    }\r\n\r\n    return (\r\n    <g className=\"sun\" onAnimationEnd={() => {\r\n        setNumberOfShines(shines);\r\n        setFilter('url(#softGlow)');\r\n    }}>\r\n        <defs>\r\n            <filter id=\"softGlow\" height=\"300%\" width=\"300%\" x=\"-75%\" y=\"-75%\">\r\n                <feMorphology operator=\"dilate\" radius=\"4\" in=\"SourceAlpha\" result=\"thicken\" />\r\n                <feGaussianBlur in=\"thicken\" stdDeviation=\"40\" result=\"blurred\" />\r\n                <feFlood floodColor=\"#f3f35c\" result=\"glowColor\" />\r\n                <feComposite in=\"glowColor\" in2=\"blurred\" operator=\"in\" result=\"softGlow_colored\" />\r\n                <feMerge>\r\n                    <feMergeNode in=\"softGlow_colored\"/>\r\n                    <feMergeNode in=\"SourceGraphic\"/>\r\n                </feMerge>\r\n            </filter>\r\n        </defs>\r\n        <circle cx={cx} cy={cy} r={radius} filter={filter} />\r\n        {shineProps.map((l, i) => (\r\n            <SunShine\r\n                key={`${l.p1.x},${l.p1.y}`}\r\n                {...l}\r\n            />\r\n        ))}\r\n    </g>);\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\ninterface IProps {\r\n    onClick: () => any,\r\n    text: string,\r\n    pos: {x: number, y: number,}\r\n    scale: number,\r\n    animationDelay: number,\r\n}\r\n\r\nconst Cloud: React.FC<IProps> = ({onClick, text, pos, scale, animationDelay}) => {\r\n    const [s, setScale] = useState(scale);\r\n    const baseAnimationDuration = calculateRandomAnimationDuration();\r\n\r\n    const colorShiftDuration = Math.floor(Math.random() * (18000 - 4000 + 1)) + 4000;\r\n\r\n    return <g className=\"cloud\" style={{animationDelay: `${animationDelay}ms, 0ms`}}>\r\n        <g\r\n            transform={`translate(${pos.x}, ${pos.y})`}\r\n            onClick={onClick}\r\n            onMouseEnter={() => setScale(scale)}\r\n            onMouseLeave={() => setScale(scale)}\r\n        >\r\n            <circle cx={0} cy={0} r={30 * s} className=\"base\" style={{\r\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\r\n            }} />\r\n            <circle cx={120 * s} cy={0} r={30 * s} className=\"base\" style={{\r\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\r\n            }} />\r\n            <rect width={120 * s} height={60 * s} x={0} y={-30 * s} className=\"base\" style={{\r\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\r\n            }} />\r\n            <circle cx={80 * s} cy={-30 * s} r={50 * s} className=\"big\" style={{\r\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\r\n            }} />\r\n            <circle cx={25 * s} cy={-30 * s} r={30 * s} className=\"small\" style={{\r\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\r\n            }} />\r\n            <text x={60 * s} y={-5 * s} dominantBaseline=\"middle\" textAnchor=\"middle\" style={{\r\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\r\n            }}>{text}</text>\r\n        </g>\r\n    </g>\r\n};\r\n\r\nexport default Cloud;\r\n\r\nconst animationDurationString = (duration: number, d2: number) => `${duration}ms, ${d2}ms`;\r\n\r\nfunction calculateRandomAnimationDuration(): number {\r\n    return getRandomInt(2000, 5000);\r\n}\r\n\r\nfunction getRandomInt(min: number, max: number) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import React from \"react\";\r\nimport './SvgScene.scss';\r\nimport Grass from \"./grass/Grass\";\r\nimport Sun from \"./sun/Sun\";\r\nimport Cloud from \"./cloud/Cloud\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n    links: {target: string, title: string}[]\r\n}\r\nexport default function SvgScene({links}: IProps) {\r\n    const history = useHistory();\r\n    const scale = calculateScaleByWindowSize();\r\n\r\n    return (<div className=\"svg-scene\">\r\n        <svg>\r\n            <Sun radius={80} shineLengthLong={70} shineLengthShort={50} shines={16} />\r\n            <Grass/>\r\n            {links.map((l, i) => (<Cloud\r\n                key={l.target}\r\n                text={l.title}\r\n                onClick={() => history.push(l.target)}\r\n                pos={{x: calculateCloudXPos(), y: calculateCloudYPos(i)}}\r\n                scale={scale}\r\n                animationDelay={3000 + (600 * i)}\r\n            />))}\r\n        </svg>\r\n        <div className=\"ground\" />\r\n    </div>);\r\n}\r\n\r\nfunction calculateCloudXPos(): number {\r\n    let min = (window.innerWidth <= 600 ? 120 : 40);\r\n    let max = window.innerWidth - 160;\r\n\r\n    if (window.innerWidth > 1080) {\r\n        min = ((window.innerWidth - 1000) / 2);\r\n        max = window.innerWidth - ((window.innerWidth - 1000) / 2);\r\n    }\r\n\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction calculateCloudYPos(i: number): number {\r\n    if (window.innerWidth > 600) {\r\n        return (i + 2) * (window.innerHeight > 900 ? 120 : 82);\r\n    }\r\n    return (i + 1) * 94 - 30;\r\n}\r\n\r\nfunction calculateScaleByWindowSize(): number {\r\n    if (window.innerHeight < 600) {\r\n        return 0.7;\r\n    }\r\n    if (window.innerHeight < 700) {\r\n        return 0.75;\r\n    }\r\n    if (window.innerHeight < 800) {\r\n        return 0.85;\r\n    }\r\n    return 1;\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport './HomePage.scss';\r\nimport SvgScene from \"./svg_scene/SvgScene\";\r\n\r\nexport default function HomePage() {\r\n    useEffect(() => {\r\n        document.body.classList.add('home');\r\n\r\n        return () => document.body.classList.remove('home')\r\n    }, []);\r\n\r\n    return (<div className=\"home-page\">\r\n        <SvgScene links={[\r\n            {target: '/-/team', title: 'Team'},\r\n            {target: '/-/raeume', title: 'Räume'},\r\n            {target: '/-/about', title: 'Über uns'},\r\n            {target: '/-/kontakt', title: 'Kontakt'},\r\n            {target: '/-/partner', title: 'Partner'},\r\n            {target: '/-/angebote', title: 'Angebote'},\r\n            {target: '/-/impressum', title: 'Impressum'},\r\n        ]}/>\r\n        <h1>Kinderstube<span>Sethweg e.V.</span></h1>\r\n    </div>);\r\n}\r\n","export type Theme = {\r\n    nav: NavTheme,\r\n    footer: FooterTheme,\r\n    sections: SectionsTheme,\r\n};\r\n\r\ntype NavTheme = {\r\n    bg: string,\r\n    font: string,\r\n}\r\n\r\ntype FooterTheme = {\r\n    bg: string,\r\n    font: string,\r\n}\r\n\r\ntype SectionsTheme = {\r\n    colors: {bg: string, font: string,}[],\r\n}\r\n\r\nexport const defaultTheme: Theme = {\r\n    nav: {\r\n        bg: '#748076',\r\n        font: '#ffffff',\r\n    },\r\n    footer: {\r\n        bg: '#748076',\r\n        font: '#ffffff',\r\n    },\r\n    sections: {\r\n        colors: [\r\n            {bg: '#748076', font: '#ffffff'},\r\n            {bg: '#F7F7F7', font: '#222222'},\r\n            {bg: '#D2C2B1', font: '#222222'},\r\n            {bg: '#E9E3DD', font: '#222222'},\r\n            {bg: '#F3EDE2', font: '#222222'},\r\n        ]\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './DashboardPage.scss';\r\nimport {defaultTheme} from \"../../../../util/themes/themes\";\r\n\r\nexport default function DashboardPage() {\r\n    const links = [\r\n        {target: '/admin/team', title: 'Team'},\r\n        {target: '/admin/raeume', title: 'Räume'},\r\n        {target: '/admin/about', title: 'Über uns'},\r\n        {target: '/admin/kontakt', title: 'Kontakt'},\r\n        {target: '/admin/partner', title: 'Partner'},\r\n        {target: '/admin/angebote', title: 'Angebote'},\r\n        {target: '/admin/impressum', title: 'Impressum'},\r\n        {target: '/admin/colors', title: 'Farben'},\r\n        {target: '/admin/statistics', title: 'Statistiken'},\r\n        {target: '/auth/logout', title: 'Abmelden'},\r\n    ];\r\n\r\n    return (<div className=\"dashboard-page\">\r\n        <ul>\r\n            {\r\n                links.map(l => <Link to={l.target} key={l.target}>\r\n                    <li\r\n                        style={{\r\n                            backgroundColor: defaultTheme.nav.bg,\r\n                            color: defaultTheme.nav.font,\r\n                        }}\r\n                    >{l.title}</li>\r\n                </Link>)\r\n            }\r\n        </ul>\r\n    </div>);\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Loader from \"react-spinners/PropagateLoader\";\r\nimport './LoadingSpinner.scss';\r\n\r\ninterface IProps {\r\n    color: string,\r\n    loading: boolean,\r\n    delayMs?: number,\r\n    fullScreen?: boolean,\r\n}\r\n\r\nexport default function LoadingSpinner({color, loading, delayMs, fullScreen}: IProps) {\r\n    const [ isLoading, setIsLoading ] = useState(loading);\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            const timeOut = setTimeout(() => setIsLoading(false), delayMs || 0);\r\n\r\n            return () => clearTimeout(timeOut);\r\n        }\r\n    }, [loading, delayMs]);\r\n\r\n    if (fullScreen === undefined) {\r\n        fullScreen = false;\r\n    }\r\n\r\n    return (<div className={`loading ${fullScreen && ' loading-fs'}`} data-active={(isLoading ? 'yes' : 'no')}>\r\n        <Loader\r\n            color={color}\r\n            loading={true}\r\n            size={25}\r\n        />\r\n    </div>);\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Statistics from \"../../../../util/models/Statistics\";\r\nimport RequestFactory from \"../../../../util/api/RequestFactory\";\r\nimport LoadingSpinner from \"../../../placeholder/loading/LoadingSpinner\";\r\nimport './StatisticsPage.scss';\r\n\r\nexport default function StatisticsPage() {\r\n    const [statistics, setStatistics] = useState<Statistics|null>(null);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        RequestFactory.getStatistics().then(res => {\r\n            if (res.status === 200) {\r\n                setStatistics(res.data.statistics);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [setStatistics]);\r\n\r\n    return (<>\r\n        <LoadingSpinner color=\"#0a0\" loading={loading} />\r\n        {statistics != null && <div className=\"statistics-page\">\r\n            <h1><span>{statistics?.totalRequests}</span> Aufrufe gesamt</h1>\r\n            <table>\r\n                <thead>\r\n                    <tr><th>Url</th><th>Aufrufe</th></tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        Object.keys(statistics?.requestsByPath).map(p => <tr key={p}>\r\n                            <td>{p}</td><td>{statistics?.requestsByPath[p]}</td>\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>}\r\n    </>);\r\n}\r\n","import {useEffect, useState} from \"react\";\r\nimport Page from \"../util/models/Page\";\r\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../util/errors/ErrorType\";\r\nimport RequestFactory from \"../util/api/RequestFactory\";\r\n\r\nexport default function useMarkdownPage(slug: string) {\r\n    const [loading, setLoading] = useState(true);\r\n    const [page, setPage] = useState<Page|null>(null);\r\n    const [error, setError] = useState<ErrorType|null>(null);\r\n\r\n    useEffect(() => {\r\n        RequestFactory.getPage(slug).then(res => {\r\n            setLoading(false);\r\n            if (res.status === 200) {\r\n                setPage(res.data.page);\r\n            } else {\r\n                setError(errorTypeByHttpStatusCode(res.status));\r\n            }\r\n        });\r\n    }, [slug]);\r\n\r\n    return {page, loading, error};\r\n}\r\n","import React, { useRef } from 'react'\r\nimport Markdown from 'markdown-to-jsx'\r\nimport './Markdown.scss';\r\n\r\ninterface Props {\r\n    md: string;\r\n}\r\n\r\nconst MarkDownToJsx = ({md, }: Props) => {\r\n    const rootRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n    return (\r\n        <div className=\"markdown-to-jsx\" ref={rootRef}>\r\n            <Markdown>{md}</Markdown>\r\n        </div>);\r\n};\r\n\r\nexport default MarkDownToJsx\r\n","import React, {useEffect, useState} from \"react\";\r\nimport useMarkdownPage from \"../../../hooks/useMarkdownPage\";\r\nimport LoadingSpinner from \"../../placeholder/loading/LoadingSpinner\";\r\nimport Error from \"../../error/Error\";\r\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../../../util/errors/ErrorType\";\r\nimport MarkDownToJsx from \"../MarkDownToJsx\";\r\nimport './EditMarkdownPage.scss';\r\nimport RequestFactory from \"../../../util/api/RequestFactory\";\r\n\r\ninterface IProps {\r\n    slug: string,\r\n    title?: string,\r\n    groupId?: string,\r\n    onSave: (error: ErrorType|null) => any,\r\n}\r\n\r\nexport default function EditMarkdownPage({slug, onSave, title: _title, groupId}: IProps) {\r\n    const {page, error, loading} = useMarkdownPage(slug);\r\n    const [md, setMd] = useState('');\r\n    const [title, setTitle] = useState(_title || '');\r\n\r\n    useEffect(() => {\r\n        if (page != null) {\r\n            setMd(page?.markdown?.content || '');\r\n            setTitle(page?.title || '');\r\n        }\r\n    }, [page]);\r\n\r\n    async function create(): Promise<ErrorType|null> {\r\n        const res = await RequestFactory.createPage({\r\n            p: slug,\r\n            content: md,\r\n            title: title,\r\n            group: groupId || '',\r\n        });\r\n        return errorTypeByHttpStatusCode(res.status);\r\n    }\r\n\r\n    async function edit(): Promise<ErrorType|null> {\r\n        const res = await RequestFactory.editPage({\r\n            p: slug,\r\n            content: md,\r\n            title: title,\r\n            group: groupId || '',\r\n        });\r\n        return errorTypeByHttpStatusCode(res.status);\r\n    }\r\n\r\n    return (<div className=\"edit-markdown-page\">\r\n        <LoadingSpinner color=\"#0a0\" loading={loading} />\r\n        {error && error !== ErrorType.NOT_FOUND && <Error errorType={error} />}\r\n        {!loading && (<>\r\n            <div className=\"left\">\r\n                {error === ErrorType.NOT_FOUND && !_title && (\r\n                    <input\r\n                        value={title}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                        placeholder=\"Titel\"\r\n                    />)\r\n                }\r\n                <textarea\r\n                    value={md}\r\n                    onChange={(e) => setMd(e.target.value)}\r\n                    placeholder=\"Markdown\"\r\n                />\r\n            </div>\r\n            <MarkDownToJsx md={md}/>\r\n            <button\r\n                className=\"save-btn\"\r\n                onClick={() => {\r\n                    if (error === ErrorType.NOT_FOUND) {\r\n                        create().then(onSave);\r\n                    } else {\r\n                        edit().then(onSave);\r\n                    }\r\n                }}\r\n                disabled={slug === '' || md === '' || title === ''}\r\n            >Speichern</button>\r\n        </>)}\r\n    </div>);\r\n}\r\n","import {useEffect, useState} from \"react\";\r\nimport Page from \"../util/models/Page\";\r\nimport RequestFactory from \"../util/api/RequestFactory\";\r\nimport ApiResponse from \"../util/api/ApiResponse\";\r\nimport GetPageResponse from \"../util/api/responses/pages/GetPageResponse\";\r\n\r\nexport default function useMarkdownPageGroup(slug: string, allowMultiRequests: boolean = false) {\r\n    const [pages, setPages] = useState<(Page|null)[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (allowMultiRequests) {\r\n            RequestFactory.getPageGroup(slug)\r\n            .then(res => Promise.all(res.data.group.pages.map(slug => RequestFactory.getPage(slug))))\r\n            .then((res) => {\r\n                setPages(res.map(r => r.data.page).filter(p => p != null));\r\n                setIsLoading(false);\r\n            });\r\n        } else {\r\n            RequestFactory.getPageGroup(slug)\r\n            .then(async res => {\r\n                const responses: ApiResponse<GetPageResponse>[] = [];\r\n                for (const slug of res.data.group.pages) {\r\n                    responses.push(await RequestFactory.getPage(slug));\r\n                }\r\n                setPages(responses.map(r => r.data.page).filter(p => p != null));\r\n                setIsLoading(false);\r\n            })\r\n        }\r\n    }, [slug, allowMultiRequests]);\r\n\r\n    return {\r\n        pages,\r\n        isLoading,\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport useMarkdownPageGroup from \"../../../../hooks/useMarkdownPageGroup\";\r\nimport LoadingSpinner from \"../../../placeholder/loading/LoadingSpinner\";\r\nimport RequestFactory from \"../../../../util/api/RequestFactory\";\r\nimport './EditSubPagePartsPage.scss';\r\nimport {useSelector} from \"react-redux\";\r\nimport State from \"../../../../util/models/State\";\r\n\r\ninterface IProps {\r\n    slug: string,\r\n}\r\n\r\nexport default function EditSubPagePartsPage({slug}: IProps) {\r\n    const allowMultiRequests = useSelector((state: State) => state.allowMultiRequests);\r\n    const {pages, isLoading} = useMarkdownPageGroup(slug, allowMultiRequests);\r\n\r\n    return (<div className=\"about-admin-page\">\r\n        <LoadingSpinner color=\"#0a0\" loading={isLoading} />\r\n        <Link to={`/-/${slug}`}>Zur Seite</Link>\r\n        <h2>Textparts:</h2>\r\n        <table>\r\n            { !isLoading && (<tbody>\r\n                {pages.length > 0\r\n                    ? pages.map(p => p != null && (\r\n                        <tr key={p?.slug}>\r\n                            <td>{p?.title}</td>\r\n                            <td><Link to={`/admin/${slug}/edit/${p?.slug}`}>Bearbeiten</Link></td>\r\n                            <td><button\r\n                                    onClick={() => RequestFactory.deletePage(p?.slug).then(() => window.location.reload())}\r\n                                >Löschen</button>\r\n                            </td>\r\n                        </tr>))\r\n                    : <tr><td>Es gibt noch keine Parts</td></tr>\r\n                }\r\n            </tbody>)}\r\n        </table>\r\n        <Link to={`/admin/${slug}/new`} className=\"create-link\">Neu</Link>\r\n    </div>);\r\n}\r\n","import React from \"react\";\r\nimport EditMarkdownPage from \"../../../md_page/edit/EditMarkdownPage\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n    group: string,\r\n}\r\n\r\nexport default function EditPagePartPage({group}: IProps) {\r\n    const history = useHistory();\r\n    const { slug } = useParams();\r\n\r\n    if (!slug) {\r\n        return <></>\r\n    }\r\n\r\n    return <EditMarkdownPage slug={slug} groupId={group} onSave={() => history.push(`/admin/${group}`)} />\r\n}\r\n","import React from 'react'\r\nimport {Route, Switch, useHistory, useRouteMatch} from 'react-router-dom';\r\nimport {IRouterProps} from \"../Routes\";\r\nimport EditSubPagePartsPage from \"../../pages/admin/page_parts/EditSubPagePartsPage\";\r\nimport EditPagePartPage from \"../../pages/admin/page_parts/EditPagePartPage\";\r\nimport EditMarkdownPage from \"../../md_page/edit/EditMarkdownPage\";\r\n\r\ninterface IProps extends IRouterProps {\r\n    slug: string,\r\n}\r\n\r\nconst AdminSubPagePartsRouter = ({slug}: IProps) => {\r\n    const {path, } = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n    return (<Switch>\r\n            <Route exact path={`${path}/new`}>\r\n                <EditMarkdownPage\r\n                    slug={`${slug}_${Date.now()}`}\r\n                    groupId={slug}\r\n                    onSave={() => history.push(`/admin/${slug}`)}\r\n                />\r\n            </Route>\r\n            <Route exact path={`${path}/edit/:slug`}>\r\n                <EditPagePartPage group={slug} />\r\n            </Route>\r\n            <Route exact path={`${path}/`}>\r\n                <EditSubPagePartsPage slug={slug} />\r\n            </Route>\r\n    </Switch>);\r\n};\r\n\r\nexport default AdminSubPagePartsRouter;\r\n","import {defaultTheme, Theme} from \"../util/themes/themes\";\r\nimport RequestFactory from \"../util/api/RequestFactory\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport default function useColorTheme (slug: string): {theme: Theme, isLoading: boolean} {\r\n    const [theme, setTheme] = useState(defaultTheme);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        RequestFactory.getJsonFromStore(`color-theme-${slug}`).then(res => {\r\n            if (res.status === 200 && res.data.json) {\r\n                try {\r\n                    const object = JSON.parse(res.data.json);\r\n                    setTheme(object);\r\n                } catch(e) {}\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [slug]);\r\n\r\n    return {theme, isLoading: loading};\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport LoadingSpinner from \"../../../../placeholder/loading/LoadingSpinner\";\r\nimport useColorTheme from \"../../../../../hooks/useColorTheme\";\r\nimport \"./ColorThemeInputs.scss\";\r\nimport RequestFactory from \"../../../../../util/api/RequestFactory\";\r\nimport {defaultTheme} from \"../../../../../util/themes/themes\";\r\n\r\ninterface IProps {\r\n    slug: string,\r\n    title: string,\r\n}\r\n\r\nexport default function ColorThemeInputs({slug, title}: IProps) {\r\n    const {theme: oldTheme, isLoading} = useColorTheme(slug);\r\n    const [theme, setTheme] = useState(oldTheme);\r\n    const [sections, setSections] = useState(oldTheme.sections.colors);\r\n\r\n    useEffect(() => {\r\n        setTheme(oldTheme);\r\n        setSections(oldTheme.sections.colors);\r\n    }, [oldTheme]);\r\n\r\n    return (<div className=\"color-theme-inputs\">\r\n        <LoadingSpinner color=\"#0a0\" loading={isLoading} />\r\n        <h2>{title}</h2>\r\n        <div className=\"row\">\r\n            <p>Navigation Hintergrund</p>\r\n            <input\r\n                type=\"color\"\r\n                value={theme.nav.bg}\r\n                onChange={e => setTheme({...theme, nav: {...theme.nav, bg: e.target.value}})}\r\n            />\r\n            <button\r\n                onClick={e => setTheme({...theme, nav: {...theme.nav, bg: defaultTheme.nav.bg}})}\r\n            >Zurücksetzen</button>\r\n        </div>\r\n        <div className=\"row\">\r\n            <p>Navigation Schrift</p>\r\n            <input\r\n                type=\"color\"\r\n                value={theme.nav.font}\r\n                onChange={e => setTheme({...theme, nav: {...theme.nav, font: e.target.value}})}\r\n            />\r\n            <button\r\n                onClick={e => setTheme({...theme, nav: {...theme.nav, font: defaultTheme.nav.font}})}\r\n            >Zurücksetzen</button>\r\n        </div>\r\n        <div className=\"row\">\r\n            <p>Footer Hintergrund</p>\r\n            <input\r\n                type=\"color\"\r\n                value={theme.footer.bg}\r\n                onChange={e => setTheme({...theme, footer: {...theme.footer, bg: e.target.value}})}\r\n            />\r\n            <button\r\n                onClick={e => setTheme({...theme, footer: {...theme.footer, bg: defaultTheme.footer.bg}})}\r\n            >Zurücksetzen</button>\r\n        </div>\r\n        <div className=\"row\">\r\n            <p>Footer Schrift</p>\r\n            <input\r\n                type=\"color\"\r\n                value={theme.footer.font}\r\n                onChange={e => setTheme({...theme, footer: {...theme.footer, font: e.target.value}})}\r\n            />\r\n            <button\r\n                onClick={e => setTheme({...theme, footer: {...theme.footer, font: defaultTheme.footer.font}})}\r\n            >Zurücksetzen</button>\r\n        </div>\r\n        {sections.map((s, i) => <div className=\"row section\" key={`section-row-${i}`}>\r\n            <p>Abschnitt {i + 1}</p>\r\n            <input\r\n                type=\"color\"\r\n                title=\"Hintergrund\"\r\n                value={s.bg}\r\n                onChange={e => {\r\n                    const newSections = [...sections];\r\n                    newSections[i].bg = e.target.value;\r\n                    setSections(newSections);\r\n                }}\r\n            />\r\n            <input\r\n                type=\"color\"\r\n                value={s.font}\r\n                title=\"Schrift\"\r\n                onChange={e => {\r\n                    const newSections = [...sections];\r\n                    newSections[i].font = e.target.value;\r\n                    setSections(newSections);\r\n                }}\r\n            />\r\n            <button\r\n                onClick={() => {\r\n                    const newSections = [...sections];\r\n                    newSections.splice(i, 1);\r\n                    setSections(newSections);\r\n                }}\r\n            >Entfernen</button>\r\n        </div>)}\r\n        <button\r\n            onClick={() => setSections([...sections, {bg: '#ffffff', font: '#000000'}])}\r\n        >Farbe hinzufügen</button>\r\n        <button\r\n            onClick={() => {\r\n                const _theme = {...theme};\r\n                _theme.sections.colors = sections;\r\n                RequestFactory.saveJsonInStore(`color-theme-${slug}`, JSON.stringify(_theme)).then(res => {\r\n                    if (res.status === 200) {\r\n                        window.location.reload();\r\n                    }\r\n                });\r\n            }}\r\n        >Speichern</button>\r\n    </div>);\r\n}\r\n","import React from \"react\";\r\nimport ColorThemeInputs from \"./inputs/ColorThemeInputs\";\r\n\r\nexport default function ColorsPage() {\r\n\r\n    return (<>\r\n        <ColorThemeInputs slug=\"team\" title=\"Team\" />\r\n        <ColorThemeInputs slug=\"raeume\" title=\"Räume\" />\r\n        <ColorThemeInputs slug=\"about\" title=\"Über uns\" />\r\n        <ColorThemeInputs slug=\"partner\" title=\"Partner\" />\r\n        <ColorThemeInputs slug=\"angebote\" title=\"Angebote\" />\r\n    </>);\r\n}\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch, useRouteMatch, useHistory} from 'react-router-dom';\r\nimport DashboardPage from \"../../pages/admin/dashboard/DashboardPage\";\r\nimport {IRouterProps} from \"../Routes\";\r\nimport Error from \"../../error/Error\";\r\nimport ErrorType from \"../../../util/errors/ErrorType\";\r\nimport StatisticsPage from \"../../pages/admin/statistics/StatisticsPage\";\r\nimport EditMarkdownPage from \"../../md_page/edit/EditMarkdownPage\";\r\nimport AdminSubPagePartsRouter from \"./AdminSubPagePartsRouter\";\r\nimport ColorsPage from \"../../pages/admin/colors/ColorsPage\";\r\n\r\nconst AdminRouter = (props: IRouterProps) => {\r\n    const {path, } = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n    if (props.user == null || !props.user.isAdmin) {\r\n        return <Redirect to=\"/auth/logout\" />\r\n    }\r\n\r\n    return (<Switch>\r\n        <Route exact path={`${path}/`}>\r\n            <DashboardPage />\r\n        </Route>\r\n        <Route path={`${path}/team`}>\r\n            <AdminSubPagePartsRouter slug=\"team\" {...props} />\r\n        </Route>\r\n        <Route path={`${path}/raeume`}>\r\n            <AdminSubPagePartsRouter slug=\"raeume\" {...props} />\r\n        </Route>\r\n        <Route path={`${path}/about`}>\r\n            <AdminSubPagePartsRouter slug=\"about\" {...props} />\r\n        </Route>\r\n        <Route exact path={`${path}/kontakt`}>\r\n            <EditMarkdownPage slug=\"kontakt\" title=\"Kontakt\" onSave={(error => history.push('/-/kontakt'))} />\r\n        </Route>\r\n        <Route path={`${path}/partner`}>\r\n            <AdminSubPagePartsRouter slug=\"partner\" {...props} />\r\n        </Route>\r\n        <Route path={`${path}/angebote`}>\r\n            <AdminSubPagePartsRouter slug=\"angebote\" {...props} />\r\n        </Route>\r\n        <Route exact path={`${path}/impressum`}>\r\n            <EditMarkdownPage slug=\"impressum\" title=\"Impressum\" onSave={(error => history.push('/-/impressum'))} />\r\n        </Route>\r\n        <Route exact path={`${path}/colors`}>\r\n            <ColorsPage />\r\n        </Route>\r\n        <Route exact path={`${path}/statistics`}>\r\n            <StatisticsPage />\r\n        </Route>\r\n        <Route path=\"*\">\r\n            <Error errorType={ErrorType.NOT_FOUND}/>\r\n        </Route>\r\n    </Switch>);\r\n};\r\n\r\nexport default AdminRouter;\r\n","import React, {useState} from \"react\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {Theme} from \"../../../../util/themes/themes\";\r\nimport './Nav.scss';\r\n\r\ninterface IProps {\r\n    theme: Theme,\r\n}\r\n\r\nconst Nav: React.FC<IProps> = ({theme}) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return <nav\r\n        className=\"nav\"\r\n        style={{\r\n            backgroundColor: theme.nav.bg,\r\n            color: theme.nav.font,\r\n        }}\r\n        data-visible={isOpen ? 'yes' : 'no'}\r\n    >\r\n        <h1>\r\n            <button className=\"open-sidebar-btn\" onClick={() => setIsOpen(!isOpen)}><span /></button>\r\n            <Link to=\"/\">Kinderstube Sethweg e.V.</Link>\r\n        </h1>\r\n        <ul>\r\n            <button className=\"close-btn\" onClick={() => setIsOpen(!isOpen)}>\r\n            </button>\r\n            {[\r\n                {target: '/-/team', title: 'Team'},\r\n                {target: '/-/raeume', title: 'Räume'},\r\n                {target: '/-/about', title: 'Über uns'},\r\n                {target: '/-/kontakt', title: 'Kontakt'},\r\n                {target: '/-/partner', title: 'Partner'},\r\n                {target: '/-/angebote', title: 'Angebote'},\r\n                {target: '/-/impressum', title: 'Impressum'},\r\n            ].map(l => <li key={l.target}>\r\n                <NavLink\r\n                    to={l.target}\r\n                    activeClassName='active'\r\n                    onClick={() => setIsOpen(false)}\r\n                >{l.title}</NavLink>\r\n            </li>)}\r\n        </ul>\r\n    </nav>\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport './Page.scss';\r\nimport Nav from \"./nav/Nav\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {themeSelector} from \"../../../selectors/selectors\";\r\nimport {IRouterProps} from \"../../routes/Routes\";\r\n\r\nconst Page: React.FC<IRouterProps> = ({children, user}) => {\r\n    const theme = useSelector(themeSelector);\r\n\r\n    return <div className=\"page\">\r\n        <Nav theme={theme} />\r\n        <div className=\"content\">\r\n            <main>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport {Theme} from \"../../../../util/themes/themes\";\r\nimport {Link} from \"react-router-dom\";\r\nimport User from \"../../../../util/models/User\";\r\nimport './Footer.scss';\r\n\r\ninterface IProps {\r\n    theme: Theme,\r\n    user: User|null,\r\n}\r\n\r\nconst Footer: React.FC<IProps> = ({theme, user}) => {\r\n    return <footer\r\n        className=\"footer\"\r\n        style={{\r\n            backgroundColor: theme.footer.bg,\r\n            color: theme.footer.font,\r\n        }}\r\n    >\r\n        <p className=\"copyright\">Copyright {(new Date()).getFullYear()}: Kinderstube Sethweg e.V.</p>\r\n        <div className=\"user-actions\">\r\n            {user == null\r\n                ? <Link to=\"/auth/login\">Login</Link>\r\n                : <>\r\n                    <p>{user?.email}</p>\r\n                    <div><Link to=\"/auth/logout\">Logout</Link></div>\r\n                    {user?.isAdmin && <div><Link to=\"/admin\">Dashboard</Link></div>}\r\n                </>}\r\n        </div>\r\n        <div className=\"jasper-lichte\">\r\n            Developed with Love by <a href=\"http://jasper.lichte.info\">Jasper Lichte</a>\r\n        </div>\r\n    </footer>\r\n};\r\n\r\nexport default Footer;\r\n","import React, {useEffect} from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport './PageContent.scss';\r\nimport {defaultTheme, Theme} from \"../../../../util/themes/themes\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ActionType from \"../../../../actions/ActionType\";\r\nimport {IRouterProps} from \"../../../routes/Routes\";\r\nimport Footer from \"../footer/Footer\";\r\n\r\nconst pageVariants = {\r\n    initial: {\r\n        opacity: 0,\r\n        x: '-100vw',\r\n        scale: 0.8,\r\n    },\r\n    in: {\r\n        opacity: 1,\r\n        x: 0,\r\n        scale: 1,\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        x: '100vw',\r\n        scale: 1.2,\r\n    },\r\n};\r\n\r\nconst pageTransition = {\r\n    duration: 1,\r\n    type: 'tween',\r\n    ease: 'anticipate',\r\n};\r\n\r\ninterface IProps extends IRouterProps {\r\n    theme?: Theme,\r\n}\r\n\r\nconst PageContent: React.FC<IProps> = ({children, theme, user}) => {\r\n    const dispatch = useDispatch();\r\n    if (!theme) {\r\n        theme = defaultTheme;\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: ActionType.SET_THEME,\r\n            theme: theme,\r\n        });\r\n    }, [theme, dispatch]);\r\n\r\n    return <motion.div\r\n        className=\"page-content\"\r\n        initial=\"initial\"\r\n        animate=\"in\"\r\n        exit=\"out\"\r\n        variants={pageVariants}\r\n        transition={pageTransition}\r\n    >\r\n        {children}\r\n        <Footer theme={theme} user={user}/>\r\n    </motion.div>\r\n};\r\n\r\nexport default PageContent;\r\n","import React from \"react\";\r\nimport PageContent from \"../../page/content/PageContent\";\r\nimport {IRouterProps} from \"../../../routes/Routes\";\r\nimport MarkDownToJsx from \"../../../md_page/MarkDownToJsx\";\r\nimport useMarkdownPageGroup from \"../../../../hooks/useMarkdownPageGroup\";\r\nimport LoadingSpinner from \"../../../placeholder/loading/LoadingSpinner\";\r\nimport './PartsPage.scss';\r\nimport {useSelector} from \"react-redux\";\r\nimport State from \"../../../../util/models/State\";\r\nimport useColorTheme from \"../../../../hooks/useColorTheme\";\r\n\r\ninterface IProps extends IRouterProps {\r\n    slug: string,\r\n}\r\n\r\nexport default function PartsPage({slug, ...props}: IProps) {\r\n    const allowMultiRequests = useSelector((state: State) => state.allowMultiRequests);\r\n    const {pages, isLoading: pagesAreLoading} = useMarkdownPageGroup(slug, allowMultiRequests);\r\n    const {theme, isLoading: themeIsLoading} = useColorTheme(slug);\r\n\r\n    return (\r\n        <PageContent theme={theme} {...props}>\r\n            <div className=\"parts-page\">\r\n                <LoadingSpinner color={theme.nav.bg} loading={pagesAreLoading || themeIsLoading} fullScreen={true} />\r\n                {pages.map((p, i) => {\r\n                    let _theme = theme.sections.colors[i % theme.sections.colors.length];\r\n                    if (!_theme) {\r\n                        _theme = {bg: '#ffffff', font: '#222222'};\r\n                    }\r\n                    return (p != null && (\r\n                        <section\r\n                            key={p?.slug}\r\n                            style={{\r\n                                backgroundColor: _theme.bg,\r\n                                color: _theme.font,\r\n                                zIndex: 999 - i,\r\n                            }}\r\n                        >\r\n                            <MarkDownToJsx md={p.markdown?.content || ''} />\r\n                        </section>)\r\n                    )\r\n                })}\r\n            </div>\r\n        </PageContent>\r\n    );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport MarkDownToJsx from \"./MarkDownToJsx\";\r\nimport LoadingSpinner from \"../placeholder/loading/LoadingSpinner\";\r\nimport Error from \"../error/Error\";\r\nimport useMarkdownPage from \"../../hooks/useMarkdownPage\";\r\n\r\ninterface IProps {\r\n    slug: string,\r\n}\r\n\r\nexport default function MarkdownPage({slug}: IProps) {\r\n    const {page, loading, error} = useMarkdownPage(slug);\r\n\r\n    useEffect(() => {\r\n        if (page != null) {\r\n            document.title = page.title;\r\n        }\r\n    }, [page]);\r\n\r\n    return (\r\n    <section>\r\n        <LoadingSpinner\r\n            loading={loading}\r\n            color={'#0a0'}\r\n            delayMs={500}\r\n            fullScreen={false}\r\n        />\r\n        { page == null\r\n            ? (error == null ? '' : <Error errorType={error}/>)\r\n            : <MarkDownToJsx md={page?.markdown?.content || ''}/>\r\n        }\r\n    </section>);\r\n}\r\n","import React from 'react'\r\nimport {Route, Switch, useLocation, useRouteMatch} from 'react-router-dom';\r\nimport {AnimatePresence} from \"framer-motion\";\r\nimport Error from \"../error/Error\";\r\nimport ErrorType from \"../../util/errors/ErrorType\";\r\nimport Page from \"../pages/page/Page\";\r\nimport {IRouterProps} from \"./Routes\";\r\nimport PageContent from \"../pages/page/content/PageContent\";\r\nimport PartsPage from \"../pages/page/parts_page/PartsPage\";\r\nimport MarkdownPage from \"../md_page/MarkdownPage\";\r\n\r\nconst PagesRouter = (props: IRouterProps) => {\r\n    const {path, } = useRouteMatch();\r\n    const location = useLocation();\r\n\r\n    return (<Page {...props}>\r\n        <AnimatePresence exitBeforeEnter={false}>\r\n            <Switch location={location} key={location.pathname}>\r\n                <Route path={`${path}/team`}>\r\n                    <PartsPage slug=\"team\" {...props} />\r\n                </Route>\r\n                <Route path={`${path}/raeume`}>\r\n                    <PartsPage slug=\"raeume\" {...props} />\r\n                </Route>\r\n                <Route path={`${path}/about`}>\r\n                    <PartsPage slug=\"about\" {...props} />\r\n                </Route>\r\n                <Route path={`${path}/kontakt`}>\r\n                    <PageContent {...props}>\r\n                        <MarkdownPage slug=\"kontakt\"  />\r\n                    </PageContent>\r\n                </Route>\r\n                <Route path={`${path}/partner`}>\r\n                    <PartsPage slug=\"partner\" {...props} />\r\n                </Route>\r\n                <Route path={`${path}/angebote`}>\r\n                    <PartsPage slug=\"angebote\" {...props} />\r\n                </Route>\r\n                <Route path={`${path}/impressum`}>\r\n                    <PageContent {...props}>\r\n                        <MarkdownPage slug=\"impressum\"  />\r\n                    </PageContent>\r\n                </Route>\r\n                <Route path={`${path}/*`}>\r\n                    <PageContent {...props}>\r\n                        <Error errorType={ErrorType.NOT_FOUND} message=\"Seite nicht gefunden\" />\r\n                    </PageContent>\r\n                </Route>\r\n            </Switch>\r\n        </AnimatePresence>\r\n    </Page>);\r\n};\r\n\r\nexport default PagesRouter;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './AdminPage.scss';\r\n\r\ninterface IProps {\r\n    className?: string,\r\n}\r\n\r\nconst AdminPage: React.FC<IProps> = ({children, className}) => {\r\n    return (<div className=\"admin-page\">\r\n        <nav>\r\n            <ul>\r\n                <li><Link to=\"/\">Start</Link></li>\r\n                <li><Link to=\"/admin\">Dashboard</Link></li>\r\n            </ul>\r\n        </nav>\r\n        <main>\r\n            {children}\r\n        </main>\r\n    </div>);\r\n};\r\n\r\nexport default AdminPage;\r\n","import React from \"react\";\r\nimport {Route, Switch,} from \"react-router-dom\";\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport HomePage from \"../pages/home/HomePage\";\r\nimport Error from \"../error/Error\";\r\nimport ErrorType from \"../../util/errors/ErrorType\";\r\nimport AdminRouter from \"./admin/AdminRouter\";\r\nimport User from \"../../util/models/User\";\r\nimport PagesRouter from \"./PagesRouter\";\r\nimport AdminPage from \"../pages/admin/AdminPage\";\r\n\r\nexport interface IRouterProps {\r\n    user: User|null,\r\n}\r\n\r\nexport default function Routes(props: IRouterProps) {\r\n    return (<Switch>\r\n        <Route path=\"/auth\">\r\n            <AuthRouter {...props} />\r\n        </Route>\r\n        <Route path=\"/admin\">\r\n            <AdminPage>\r\n                <AdminRouter {...props} />\r\n            </AdminPage>\r\n        </Route>\r\n        <Route path=\"/-\">\r\n            <PagesRouter {...props} />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n            <HomePage />\r\n        </Route>\r\n        <Route path=\"*\">\r\n            <Error errorType={ErrorType.NOT_FOUND} />\r\n        </Route>\r\n    </Switch>);\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport RequestFactory from \"../../util/api/RequestFactory\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ActionType from \"../../actions/ActionType\";\r\nimport {errorSelector, settingsSelector, userSelector} from \"../../selectors/selectors\";\r\nimport SettingsApplyer from \"../settings/SettingsApplyer\";\r\nimport ApiResponse from \"../../util/api/ApiResponse\";\r\nimport PreflightResponse from \"../../util/api/responses/PreflightResponse\";\r\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../../util/errors/ErrorType\";\r\nimport Error from \"../error/Error\";\r\nimport Api from \"../../util/api/Api\";\r\nimport Routes from \"../routes/Routes\";\r\nimport './App.scss';\r\nimport LoadingSpinner from \"../placeholder/loading/LoadingSpinner\";\r\nimport {HashRouter as Router} from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n  license: string,\r\n}\r\n\r\nexport default function App({license}: IProps) {\r\n  const dispatch = useDispatch();\r\n  const settings = useSelector(settingsSelector);\r\n  const error = useSelector(errorSelector);\r\n  const user = useSelector(userSelector);\r\n  const [ loading, setLoading ] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!license) {\r\n      dispatch({\r\n        type: ActionType.SET_ERROR,\r\n        error: ErrorType.INVALID_LICENSE,\r\n      });\r\n      return;\r\n    }\r\n    RequestFactory.getConfig().then(res => {\r\n      if (res.status !== 200) {\r\n        dispatch({\r\n          type: ActionType.SET_ERROR,\r\n          error: errorTypeByHttpStatusCode(res.status)\r\n        });\r\n      } else {\r\n        Api.baseUrl = res.data.baseApiUrl;\r\n        RequestFactory.preflight(license).then(handlePreflightResponse(dispatch));\r\n      }\r\n    });\r\n  }, [dispatch, license]);\r\n\r\n  useEffect(() => {\r\n    if (settings != null) {\r\n      setLoading(false);\r\n    }\r\n  }, [settings]);\r\n\r\n  if (error != null) {\r\n    return <Error errorType={error} />;\r\n  }\r\n\r\n  return (<Router>\r\n    {settings != null && <SettingsApplyer settings={settings} />}\r\n    <LoadingSpinner color=\"#0a0\" loading={loading} fullScreen={true} />\r\n    {!loading && <Routes user={user} />}\r\n  </Router>);\r\n}\r\n\r\nfunction handlePreflightResponse(dispatch: Function) {\r\n  return (res: ApiResponse<PreflightResponse>) => {\r\n    if (res.status === 200) {\r\n      dispatch({\r\n        type: ActionType.SET_SETTINGS,\r\n        settings: res.data.settings\r\n      });\r\n      dispatch({\r\n        type: ActionType.SET_USER,\r\n        user: res.data.user\r\n      });\r\n      dispatch({\r\n          type: ActionType.SET_ALLOW_MULTIREQUESTS,\r\n          allowMultiRequests: res.data.allowMultiRequests,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ActionType.SET_ERROR,\r\n        error: (res.status === 401 ? ErrorType.INVALID_LICENSE : errorTypeByHttpStatusCode(res.status))\r\n      });\r\n    }\r\n  }\r\n}\r\n","import Setting from \"./Setting\";\r\nimport ErrorType from \"../errors/ErrorType\";\r\nimport User from \"./User\";\r\nimport {defaultTheme, Theme} from \"../themes/themes\";\r\n\r\nclass State {\r\n\r\n    user: User|null = null;\r\n    settings: Setting[]|null = null;\r\n    error: ErrorType|null = null;\r\n    theme: Theme = defaultTheme;\r\n    allowMultiRequests: boolean = false;\r\n}\r\n\r\nexport default State;\r\n","import State from '../util/models/State';\r\nimport ActionType from \"../actions/ActionType\";\r\nimport SetSettingsAction from \"../actions/settings/SetSettingsAction\";\r\nimport SetErrorAction from \"../actions/errors/SetErrorAction\";\r\nimport SetUserAction from \"../actions/user/SetUserAction\";\r\nimport SetThemeAction from \"../actions/themes/SetThemeAction\";\r\nimport SetAllowMultiRequestsAction from \"../actions/settings/SetAllowMultiRequestsAction\";\r\n\r\nconst rootReducer = (\r\n    state: State = new State(),\r\n    action: SetSettingsAction\r\n        | SetErrorAction\r\n        | SetUserAction\r\n        | SetThemeAction\r\n        | SetAllowMultiRequestsAction\r\n): State => {\r\n    switch(action.type) {\r\n        case ActionType.SET_USER:\r\n            return {...state, user: action.user};\r\n        case ActionType.SET_SETTINGS:\r\n            return {...state, settings: action.settings};\r\n        case ActionType.SET_ERROR:\r\n            return {...state, error: action.error};\r\n        case ActionType.SET_THEME:\r\n            return {...state, theme: action.theme};\r\n        case ActionType.SET_ALLOW_MULTIREQUESTS:\r\n            return {...state, allowMultiRequests: action.allowMultiRequests};\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport {Provider} from \"react-redux\";\r\nimport rootReducer from \"./reducers/reducer\";\r\nimport { createStore } from 'redux';\r\nimport license from \"./license\";\r\nimport './index.scss';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App license={license} />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","export default '2738362523';"],"sourceRoot":""}
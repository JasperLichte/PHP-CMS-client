{"version":3,"sources":["util/api/ApiResponse.ts","config.ts","util/api/Api.ts","util/models/Setting.ts","util/models/User.ts","util/api/responses/PreflightResponse.ts","util/models/Markdown.ts","util/models/Page.ts","util/api/responses/GetPageResponse.ts","util/api/responses/GetConfigResponse.ts","util/api/responses/auth/LoginResponse.ts","util/api/responses/NoDataResponse.ts","util/api/responses/auth/RegisterResponse.ts","util/models/Statistics.ts","util/api/responses/admin/GetStatisticsResponse.ts","util/api/RequestFactory.ts","actions/ActionType.ts","util/errors/ErrorType.ts","selectors/selectors.ts","components/settings/SettingsApplyer.tsx","components/error/Error.tsx","components/pages/auth/login/LoginForm.tsx","util/UserServices.ts","components/pages/auth/login/LoginPage.tsx","components/pages/auth/logout/LogoutPage.tsx","components/pages/auth/register/RegisterForm.tsx","components/pages/auth/register/RegisterPage.tsx","components/routes/AuthRouter.tsx","components/pages/home/svg_scene/grass/Blade.tsx","components/pages/home/svg_scene/grass/Grass.tsx","components/pages/home/svg_scene/sun/SunShine.tsx","components/pages/home/svg_scene/sun/Sun.tsx","components/pages/home/svg_scene/cloud/Cloud.tsx","components/pages/home/svg_scene/SvgScene.tsx","components/pages/home/HomePage.tsx","components/pages/admin/dashboard/DashboardPage.tsx","components/placeholder/loading/LoadingSpinner.tsx","components/pages/admin/statistics/StatisticsPage.tsx","components/pages/admin/AdminPage.tsx","components/routes/AdminRouter.tsx","components/pages/page/nav/Nav.tsx","components/pages/page/Page.tsx","components/md_page/MarkDownToJsx.tsx","components/md_page/MarkdownPage.tsx","components/pages/impressum/ImpressumPage.tsx","util/themes/themes.ts","components/routes/Routes.tsx","components/app/App.tsx","util/models/State.ts","reducers/reducer.ts","index.tsx","license.ts"],"names":["ApiResponse","data","status","success","message","this","input","parseInt","Api","path","license","Promise","resolve","a","url","URL","baseUrl","searchParams","delete","append","fetch","href","headers","credentials","res","json","deserialize","body","method","JSON","stringify","obj","get","RequestFactory","then","post","config","Setting","key","value","defaultValue","cssProperty","User","id","email","isAdmin","PreflightResponse","settings","user","map","s","Markdown","content","htmlContent","description","Page","slug","title","markdown","GetPageResponse","page","GetConfigResponse","baseApiUrl","LoginResponse","NoDataResponse","RegisterResponse","Statistics","totalRequests","requestsByPath","Object","keys","forEach","p","GetStatisticsResponse","statistics","makeGetRequest","password","makePostRequest","ActionType","ErrorType","userSelector","state","settingsSelector","errorSelector","error","SettingsApplyer","css","filter","join","document","find","errorTypeByHttpStatusCode","statusCode","NOT_FOUND","SERVER_ERROR","Error","component","errorType","INVALID_LICENSE","LoginForm","onSubmit","useState","setEmail","setPassword","className","type","onChange","e","target","onClick","UserServices","doLogin","register","doLogout","LoginPage","setUser","dispatch","useDispatch","history","useHistory","useEffect","SET_USER","login","push","to","LogoutPage","loading","setLoading","logout","RegisterForm","RegisterPage","AuthRouter","props","useRouteMatch","Blade","x","width","height","points","y","animationDuration","Math","floor","random","darkness","fill","style","animationDelay","Grass","i","window","innerWidth","round","SunShine","p1","p2","rest","x1","y1","x2","y2","Sun","radius","shines","shineLengthLong","shineLengthShort","numberOfShines","setNumberOfShines","slice","PI","shineProps","r","angle","cos","sin","onAnimationEnd","cx","cy","l","Cloud","text","pos","scale","color","setScale","baseAnimationDuration","calculateRandomAnimationDuration","transform","onMouseEnter","onMouseLeave","dominantBaseline","textAnchor","min","max","ceil","SvgScene","links","innerHeight","calculateScaleByWindowSize","calculateCloudXPos","HomePage","classList","add","DashboardPage","LoadingSpinner","delayMs","fullScreen","isLoading","setIsLoading","setTimeout","undefined","data-active","size","StatisticsPage","setStatistics","getStatistics","AdminPage","children","AdminRouter","exact","Nav","theme","backgroundColor","navBarBg","navBarFont","MarkDownToJsx","md","rootRef","useRef","ref","options","MarkdownPage","setPage","setError","useSelector","getPage","ImpressumPage","defaultTheme","Routes","App","getConfig","SET_ERROR","preflight","SET_SETTINGS","handlePreflightResponse","State","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a2368932.chunk.js","sourcesContent":["import Serializable from \"../interfaces/Serializable\";\n\nclass ApiResponse<T> implements Serializable {\n\n    public status = 200;\n    public success = false;\n    public data: T;\n    public message = '';\n\n    constructor(data: T) {\n        // @ts-ignore\n        this.data = data;\n    }\n\n    deserialize(input: {}): ApiResponse<T> {\n        // @ts-ignore\n        this.status = parseInt(input['status']);\n\n        // @ts-ignore\n        this.success = !!input['success'];\n\n        // @ts-ignore\n        input['message'] && (this.message = `${input['message']}`);\n\n        return this;\n    }\n\n}\n\nexport default ApiResponse;\n","export default {\n    PRODUCTION: true,\n    BASE_PROD_API_URL: 'https://jaspress.lichte.info/api',\n    BASE_DEV_API_URL: 'http://localhost:8073/Projects/jaspress-api/api',\n};\n","import ApiResponse from \"./ApiResponse\";\nimport RequestFactory from \"./RequestFactory\";\nimport config from \"../../config\";\n\nclass Api {\n\n    public static baseUrl = (config.PRODUCTION ? config.BASE_PROD_API_URL : config.BASE_DEV_API_URL);\n\n    private static headers = () => ({\n\n    });\n\n    private static get(path: string, license: string): Promise<ApiResponse<any>> {\n        return new Promise(async resolve => {\n            const url = new URL(`${Api.baseUrl}${path}`);\n            url.searchParams.delete('license');\n            url.searchParams.append('license', license);\n\n            const res = await fetch(url.href, {\n                headers: Api.headers(),\n                credentials: 'include',\n            });\n            const json = await res.json();\n            resolve((new ApiResponse(json)).deserialize(json));\n        });\n    }\n\n    private static post(path: string, license: string) {\n        return (body: {}) => {\n            return new Promise(async (resolve) => {\n                const json = await (await fetch(\n                    `${Api.baseUrl}${path}`,\n                    {\n                        method: 'POST',\n                        body: JSON.stringify({...body, license}),\n                        headers: Api.headers(),\n                        credentials: 'include',\n                    }\n                )).json();\n                resolve((new ApiResponse(json)).deserialize(json));\n            });\n        }\n    }\n\n    public static async makeGetRequest<T>(obj: T, url: string): Promise<ApiResponse<T>> {\n        return new Promise<ApiResponse<T>>(resolve => {\n            Api.get(url, RequestFactory.license).then(res => {\n                // @ts-ignore\n                resolve((new ApiResponse(obj.deserialize(res.data.data))).deserialize(res));\n            });\n        });\n    }\n\n    public static async makePostRequest<T>(obj: T, url: string, body: {}): Promise<ApiResponse<T>> {\n        return new Promise<ApiResponse<T>>((resolve) => {\n            Api.post(url, RequestFactory.license)(body).then(res => {\n                // @ts-ignore\n                resolve((new ApiResponse(obj.deserialize(res.data.data))).deserialize(res));\n            });\n        });\n    }\n\n}\n\nexport default Api;\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class Setting implements Serializable {\n\n    key: string = '';\n    value: string = '';\n    defaultValue: string = '';\n    cssProperty: string|null = null;\n\n    deserialize(input: {}): Setting {\n        // @ts-ignore\n        this.key = input['key'];\n        // @ts-ignore\n        this.value = input['value'];\n        // @ts-ignore\n        this.defaultValue = input['defaultValue'];\n        // @ts-ignore\n        input['cssProperty'] && (this.cssProperty = input['cssProperty']);\n\n        return this;\n    }\n\n}\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class User implements Serializable {\n\n    id: number = 0;\n    email: string = '';\n    isAdmin: boolean = false;\n\n    deserialize(input: {}): User {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['id'] && (this.id = parseInt(input['id']));\n        // @ts-ignore\n        input['email'] && (this.email = `${input['email']}`);\n        // @ts-ignore\n        input['isAdmin'] && (this.isAdmin = !!input['isAdmin']);\n\n        return this;\n    }\n\n}\n","import ResponseData from \"./ResponseData\";\nimport Setting from \"../../models/Setting\";\nimport User from \"../../models/User\";\n\nclass PreflightResponse implements ResponseData{\n\n    public settings: Setting[] = [];\n    public user: User|null = null;\n\n    deserialize(input: {}): PreflightResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['settings'] && (this.settings = input['settings'].map(s => (new Setting()).deserialize(s)));\n        // @ts-ignore\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\n\n        return this;\n    }\n\n}\n\nexport default PreflightResponse;\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class Markdown implements Serializable {\n\n    content = '';\n    htmlContent = '';\n    description = '';\n\n    deserialize(input: {}): Markdown {\n        // @ts-ignore\n        input['content'] && (this.content = input['content']);\n        // @ts-ignore\n        input['htmlContent'] && (this.htmlContent = input['htmlContent']);\n        // @ts-ignore\n        input['description'] && (this.description = input['description']);\n\n        return this;\n    }\n\n}\n","import Serializable from \"../interfaces/Serializable\";\nimport Markdown from \"./Markdown\";\n\nexport default class Page implements Serializable {\n\n    slug: string = '';\n    title: string = '';\n    markdown: Markdown|null = null;\n    \n    deserialize(input: {}): Page {\n        // @ts-ignore\n        this.slug = input['slug'];\n        // @ts-ignore\n        this.title = input['title'];\n\n        // @ts-ignore\n        this.markdown = (new Markdown()).deserialize(input['markdown']);\n\n        return this;\n    }\n\n}\n","import ResponseData from \"./ResponseData\";\nimport Page from \"../../models/Page\";\n\nexport default class GetPageResponse implements ResponseData {\n\n    page: Page|null = null;\n\n    deserialize(input: {}): GetPageResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['page'] && (this.page = (new Page()).deserialize(input['page']));\n\n        return this;\n    }\n\n}\n","import ResponseData from \"./ResponseData\";\n\nclass GetConfigResponse implements ResponseData {\n\n    public baseApiUrl: string = '';\n\n    deserialize(input: {}): GetConfigResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        this.baseApiUrl = `${input['base_api_url']}`;\n\n        return this;\n    }\n\n}\n\nexport default GetConfigResponse;\n","import ResponseData from \"../ResponseData\";\nimport User from \"../../../models/User\";\n\nclass LoginResponse implements ResponseData {\n\n    public user: User|null = null;\n\n    deserialize(input: {}): LoginResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\n\n        return this;\n    }\n\n}\n\nexport default LoginResponse;\n","import ResponseData from \"./ResponseData\";\n\nclass NoDataResponse implements ResponseData {\n\n    deserialize(input: {}): NoDataResponse {\n        return this;\n    }\n\n}\n\nexport default NoDataResponse;\n","import ResponseData from \"../ResponseData\";\nimport User from \"../../../models/User\";\n\nclass RegisterResponse implements ResponseData {\n\n    public user: User|null = null;\n\n    deserialize(input: {}): RegisterResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\n\n        return this;\n    }\n\n}\n\nexport default RegisterResponse;\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class Statistics implements Serializable {\n\n    totalRequests: number = 0;\n    requestsByPath: {[key: string]: number} = {};\n\n    deserialize(input: {}): Statistics {\n        if (!input) return this;\n\n        // @ts-ignore\n        this.totalRequests = parseInt(input['totalRequests']);\n\n        // @ts-ignore\n        Object.keys(input['requestsByPath']).forEach(p => this.requestsByPath[p] = parseInt(input['requestsByPath'][p]));\n\n        return this;\n    }\n}\n","import ResponseData from \"../ResponseData\";\nimport Statistics from \"../../../models/Statistics\";\n\nclass GetStatisticsResponse implements ResponseData {\n\n    statistics: Statistics = new Statistics();\n\n    deserialize(input: {}): GetStatisticsResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        this.statistics = (new Statistics()).deserialize(input['statistics']);\n\n        return this;\n    }\n\n}\n\nexport default GetStatisticsResponse;\n","import Api from \"./Api\";\nimport PreflightResponse from \"./responses/PreflightResponse\";\nimport GetPageResponse from \"./responses/GetPageResponse\";\nimport GetConfigResponse from \"./responses/GetConfigResponse\";\nimport LoginResponse from \"./responses/auth/LoginResponse\";\nimport NoDataResponse from \"./responses/NoDataResponse\";\nimport RegisterResponse from \"./responses/auth/RegisterResponse\";\nimport GetStatisticsResponse from \"./responses/admin/GetStatisticsResponse\";\n\nexport default class RequestFactory {\n\n    public static license: string = '';\n\n    public static async getConfig() {\n        return Api.makeGetRequest<GetConfigResponse>(\n            new GetConfigResponse(),\n            `/config/get.php`\n        );\n    }\n\n    public static async preflight(license: string) {\n        RequestFactory.license = license;\n        return Api.makeGetRequest<PreflightResponse>(\n            new PreflightResponse(),\n            `/preflight.php`\n        );\n    }\n\n    public static async getPage(slug: string) {\n        return Api.makeGetRequest<GetPageResponse>(\n            new GetPageResponse(),\n            `/page/get.php?p=${slug}`\n        );\n    }\n\n    public static async doLogin(email: string, password: string) {\n        return Api.makePostRequest<LoginResponse>(\n            new LoginResponse(),\n            `/auth/login.php`,\n            {email, password}\n        );\n    }\n\n    public static async register(email: string, password: string) {\n        return Api.makePostRequest<RegisterResponse>(\n            new RegisterResponse(),\n            `/auth/register.php`,\n            {email, password}\n        );\n    }\n\n    public static async doLogout() {\n        return Api.makeGetRequest<NoDataResponse>(\n            new NoDataResponse(),\n            `/auth/logout.php`,\n        );\n    }\n\n    public static async getStatistics() {\n        return Api.makeGetRequest<GetStatisticsResponse>(\n            new GetStatisticsResponse(),\n            '/admin/statistics/get.php'\n        );\n    }\n\n}\n","enum ActionType {\n    SET_USER = 0,\n    SET_SETTINGS = 1,\n    SET_ERROR = 2,\n}\n\nexport default ActionType;\n","enum ErrorType {\n    INVALID_LICENSE = 0,\n    SERVER_ERROR = 1,\n    NOT_FOUND = 2,\n}\n\nexport default ErrorType;\nexport function errorTypeByHttpStatusCode(statusCode: number): ErrorType|null {\n    switch (statusCode) {\n        case 200: return null;\n        case 404: return ErrorType.NOT_FOUND;\n        case 500: return ErrorType.SERVER_ERROR;\n    }\n    return ErrorType.SERVER_ERROR;\n}\n","import State from \"../util/models/State\";\nimport Setting from \"../util/models/Setting\";\nimport ErrorType from \"../util/errors/ErrorType\";\nimport User from \"../util/models/User\";\n\ntype Selector<T> = (state: State) => T;\n\nexport const stateSelector: Selector<State> = state => state;\nexport const userSelector: Selector<User|null> = state => state.user;\nexport const settingsSelector: Selector<Setting[]|null> = state => state.settings;\nexport const errorSelector: Selector<ErrorType|null> = state => state.error;\n","import React from \"react\";\nimport Setting from \"../../util/models/Setting\";\n\ninterface IProps {\n    settings: Setting[],\n}\n\nexport default function SettingsApplyer({settings}: IProps) {\n    const css = `html {\n        ${\n            settings\n            .filter(s => s.cssProperty != null)\n            .map(s => `${s.cssProperty}: ${s.value};`)\n            .join('')\n        }\n    }`;\n\n    document.title = settings.find(s => s.key === 'APP_NAME')?.value || '';\n\n    return (\n        <style>{css}</style>\n    );\n}\n","import React from \"react\";\nimport ErrorType from \"../../util/errors/ErrorType\";\n\ninterface IProps {\n    errorType: ErrorType,\n}\n\nexport default function Error({errorType}: IProps) {\n    const component = ((errorType: ErrorType) => {\n        switch (errorType) {\n            case ErrorType.INVALID_LICENSE:\n                return (<p>Invalid License!</p>);\n            case ErrorType.SERVER_ERROR:\n                return (<p>Unexpected Server error</p>);\n            case ErrorType.NOT_FOUND:\n                return (<p>Not found</p>);\n        }\n        return <p>An error occurred</p>;\n    })(errorType);\n\n    return (<section>{component}</section>);\n}\n","import React, {useState} from \"react\";\n\ninterface IProps {\n    onSubmit: (email: string, password: string) => any,\n}\n\nexport default function LoginForm({onSubmit}: IProps) {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n\n    return (<div className=\"login-form\">\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button onClick={() => onSubmit(email, password)}>Login</button>\n    </div>);\n}\n","import User from \"./models/User\";\nimport RequestFactory from \"./api/RequestFactory\";\n\nexport default class UserServices {\n\n    public static async login(email: string, password: string): Promise<User|null> {\n        const res = await RequestFactory.doLogin(email, password);\n        return res.data.user;\n    }\n\n    public static async register(email: string, password: string): Promise<User|null> {\n        const res = await RequestFactory.register(email, password);\n        return res.data.user;\n    }\n\n    public static async logout(): Promise<boolean> {\n        const res = await RequestFactory.doLogout();\n        return (res.status === 200);\n    }\n\n}\n","import React, {useEffect, useState} from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport User from \"../../../../util/models/User\";\nimport UserServices from \"../../../../util/UserServices\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {Link, useHistory} from 'react-router-dom';\n\nexport default function LoginPage() {\n    const [user, setUser] = useState<User|null>(null);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch({\n            type: ActionType.SET_USER,\n            user: user,\n        });\n    }, [user, dispatch]);\n\n    return (<div className=\"login-page\">\n        <LoginForm onSubmit={(email, password) => {\n            UserServices.login(email, password).then(user => {\n                setUser(user);\n                if (user?.isAdmin) {\n                    history.push('/admin');\n                } else {\n                    history.push('/');\n                }\n            });\n        }} />\n        <Link to=\"/auth/register\">Sign up instead</Link>\n    </div>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport UserServices from \"../../../../util/UserServices\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {Redirect} from 'react-router-dom';\n\nexport default function LogoutPage() {\n    const [loading, setLoading] = useState(true);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        UserServices.logout().then(success => {\n            if (success) {\n                dispatch({\n                    type: ActionType.SET_USER,\n                    user: null,\n                });\n            }\n            setLoading(false);\n        });\n    }, [dispatch]);\n\n    if (loading) {\n        return <></>;\n    }\n    return <Redirect to=\"/auth/login\" />\n}\n","import React, {useState} from \"react\";\n\ninterface IProps {\n    onSubmit: (email: string, password: string) => any,\n}\n\nexport default function RegisterForm({onSubmit}: IProps) {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n\n    return (<div className=\"login-form\">\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button onClick={() => onSubmit(email, password)}>Login</button>\n    </div>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport RegisterForm from \"./RegisterForm\";\nimport User from \"../../../../util/models/User\";\nimport UserServices from \"../../../../util/UserServices\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {Link, useHistory} from 'react-router-dom';\n\nexport default function RegisterPage() {\n    const [user, setUser] = useState<User|null>(null);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch({\n            type: ActionType.SET_USER,\n            user: user,\n        });\n    }, [user, dispatch]);\n\n    return (<div className=\"register-page\">\n        <RegisterForm onSubmit={(email, password) => {\n            UserServices.register(email, password).then(user => {\n                setUser(user);\n                history.push('/');\n            });\n        }} />\n        <Link to=\"/auth/login\">Log in instead</Link>\n    </div>);\n}\n","import React from 'react'\nimport {Route, Switch, useRouteMatch} from 'react-router-dom';\nimport LoginPage from \"../pages/auth/login/LoginPage\";\nimport Error from \"../error/Error\";\nimport ErrorType from \"../../util/errors/ErrorType\";\nimport LogoutPage from \"../pages/auth/logout/LogoutPage\";\nimport RegisterPage from \"../pages/auth/register/RegisterPage\";\nimport {IRouterProps} from \"./Routes\";\n\nconst AuthRouter = (props: IRouterProps) => {\n    const {path, } = useRouteMatch();\n\n    return (<Switch>\n        <Route path={`${path}/login`}>\n            <LoginPage/>\n        </Route>\n        <Route path={`${path}/register`}>\n            <RegisterPage/>\n        </Route>\n        <Route path={`${path}/logout`}>\n            <LogoutPage/>\n        </Route>\n        <Route path={`${path}/*`}>\n            <Error errorType={ErrorType.NOT_FOUND}/>\n        </Route>\n    </Switch>);\n};\n\nexport default AuthRouter;\n","import React from \"react\";\n\nexport interface IBladeProps {\n    x: number,\n    width: number,\n    height: number,\n}\n\nexport default function Blade({x, width, height}: IBladeProps) {\n    const points = [\n        {x: x + (width / 2), y: 0},\n        {x: x, y: height},\n        {x: x + width, y: height},\n    ];\n\n    const animationDuration = (Math.floor(Math.random() * 3000 - 500)) + 500;\n    const darkness = Math.floor(Math.random() * (101)) + 15;\n    return <polygon\n        className=\"blade\"\n        points={points.map(p => ({...p, y: p.y + (120 - height)})).map(p => `${p.x} ${p.y}`).join(', ')}\n        fill={`rgb(${darkness}, 140, ${darkness})`}\n        style={{\n            animationDuration: `${animationDuration}ms, 2s`,\n            animationDelay: `0s, ${animationDuration}ms`\n        }}\n    />;\n}\n","import React from \"react\";\nimport Blade, {IBladeProps} from \"./Blade\";\n\nexport default function Grass() {\n    const props: IBladeProps[] = [];\n    for (let i = 0; i < (window.innerWidth / 8); i++) {\n        const height = Math.floor(Math.random() * (101)) + 60;\n        props.push({\n            x: i * 8,\n            width: Math.round(height / 12),\n            height: height,\n        });\n    }\n\n    return (\n<g className=\"grass\">\n    {props.map(p => <Blade {...p} key={p.x} />)}\n</g>);\n}\n","import React from \"react\";\n\nexport interface ISunshineProps {\n    p1: {x: number, y: number},\n    p2: {x: number, y: number},\n}\n\nconst SunShine: React.FC<ISunshineProps> = ({\n    p1,\n    p2,\n    ...rest\n}: ISunshineProps) => {\n    return <line\n        className=\"sun-shine\"\n        {...rest}\n        x1={p1.x}\n        y1={p1.y}\n        x2={p2.x}\n        y2={p2.y}\n    />;\n};\n\nexport default SunShine;\n","import React, {useState} from \"react\";\nimport SunShine, {ISunshineProps} from \"./SunShine\";\n\ninterface IProps {\n    radius: number,\n    shines: number,\n    shineLengthLong: number,\n    shineLengthShort: number\n}\n\nexport default function Sun({radius, shines, shineLengthLong, shineLengthShort}: IProps) {\n    const [numberOfShines, setNumberOfShines] = useState(0);\n\n    const cx = -140;\n    const cy = 300;\n\n    const slice = 2 * Math.PI / numberOfShines;\n    const shineProps: ISunshineProps[] = [];\n    for (let i = 0; i < numberOfShines; i++) {\n        const r = radius + (i % 2 === 0 ? shineLengthLong : shineLengthShort);\n        const angle = slice * i;\n        shineProps.push({\n            p1: {\n                x: cx + (radius + 10) * Math.cos(angle),\n                y: cy + (radius + 10) * Math.sin(angle),\n            },\n            p2: {\n                x: cx + r * Math.cos(angle),\n                y: cy + r * Math.sin(angle),\n            },\n        });\n    }\n\n    return (<g className=\"sun\" onAnimationEnd={() => setNumberOfShines(shines)}>\n        <circle cx={cx} cy={cy} r={radius} />\n        {shineProps.map((l, i) => (\n            <SunShine\n                key={`${l.p1.x},${l.p1.y}`}\n                {...l}\n            />\n        ))}\n    </g>);\n}\n","import React, {useState} from \"react\";\n\ninterface IProps {\n    onClick: () => any,\n    text: string,\n    pos: {x: number, y: number,}\n    scale: number,\n    animationDelay: number,\n    color: string,\n}\n\nconst Cloud: React.FC<IProps> = ({onClick, text, pos, scale, animationDelay, color}) => {\n    const [s, setScale] = useState(scale);\n    const baseAnimationDuration = calculateRandomAnimationDuration();\n\n    return <g className=\"cloud\" style={{animationDelay: `${animationDelay}ms`}}>\n        <g\n            transform={`translate(${pos.x}, ${pos.y})`}\n            onClick={onClick}\n            onMouseEnter={() => setScale(scale)}\n            onMouseLeave={() => setScale(scale)}\n        >\n            <circle cx={0} cy={0} r={30 * s} fill={color} className=\"base\" style={{animationDuration: `${baseAnimationDuration}ms`}} />\n            <circle cx={120 * s} cy={0} r={30 * s} fill={color} className=\"base\" style={{animationDuration: `${baseAnimationDuration}ms`}} />\n            <rect width={120 * s} height={60 * s} x={0} y={-30 * s} fill={color} className=\"base\" style={{animationDuration: `${baseAnimationDuration}ms`}} />\n            <circle cx={80 * s} cy={-30 * s} r={50 * s} fill={color} className=\"big\" style={{animationDuration: `${calculateRandomAnimationDuration()}ms`}} />\n            <circle cx={25 * s} cy={-30 * s} r={30 * s} fill={color} className=\"small\" style={{animationDuration: `${calculateRandomAnimationDuration()}ms`}} />\n            <text x={60 * s} y={-5 * s} dominantBaseline=\"middle\" textAnchor=\"middle\" style={{animationDuration: `${calculateRandomAnimationDuration()}ms`}}>{text}</text>\n        </g>\n    </g>\n};\n\nexport default Cloud;\n\nfunction calculateRandomAnimationDuration(): number {\n    return getRandomInt(2000, 5000);\n}\n\nfunction getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","import React from \"react\";\nimport './SvgScene.scss';\nimport Grass from \"./grass/Grass\";\nimport Sun from \"./sun/Sun\";\nimport Cloud from \"./cloud/Cloud\";\nimport {useHistory} from \"react-router-dom\";\n\ninterface IProps {\n    links: {target: string, title: string}[]\n}\nexport default function SvgScene({links}: IProps) {\n    const history = useHistory();\n    const scale = calculateScaleByWindowSize();\n\n    return (<div className=\"svg-scene\">\n        <svg>\n            <Sun radius={80} shineLengthLong={70} shineLengthShort={50} shines={16} />\n            <Grass/>\n            {links.map((l, i) => (<Cloud\n                key={l.target}\n                text={l.title}\n                onClick={() => history.push(l.target)}\n                pos={{x: calculateCloudXPos(), y: (i + 2) * 120 * scale}}\n                scale={scale}\n                animationDelay={3000 + (600 * i)}\n                color={'#fff'}\n            />))}\n        </svg>\n        <div className=\"ground\" />\n    </div>);\n}\n\nfunction calculateCloudXPos(): number {\n    const max = window.innerWidth - 160;\n    const min = (window.innerWidth <= 600 ? 80 : 40);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction calculateScaleByWindowSize(): number {\n    if (window.innerHeight < 600) {\n        return 0.7;\n    }\n    if (window.innerHeight < 700) {\n        return 0.75;\n    }\n    if (window.innerHeight < 800) {\n        return 0.85;\n    }\n    return 1;\n}\n","import React, {useEffect} from \"react\";\nimport './HomePage.scss';\nimport SvgScene from \"./svg_scene/SvgScene\";\n\nexport default function HomePage() {\n    useEffect(() => {\n        document.body.classList.add('home');\n    }, []);\n\n    return (<div className=\"home-page\">\n        <SvgScene links={[\n            {target: '/about', title: 'Über uns'},\n            {target: '/team', title: 'Team'},\n            {target: '/einrichtung', title: 'Einrichtung'},\n            {target: '/impressum', title: 'Impressum'},\n        ]}/>\n        <h1>Kinderstube Sethweg e.V.</h1>\n    </div>);\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default function DashboardPage() {\n    return (<>\n        <h1>Dashboard</h1>\n        <ul>\n           <li><Link to=\"/admin/statistics\">Statistics</Link></li>\n            <li><Link to=\"/admin/pages\">Pages</Link></li>\n            <li><Link to=\"/admin/files\">Files</Link></li>\n        </ul>\n    </>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport Loader from \"react-spinners/PropagateLoader\";\nimport './LoadingSpinner.scss';\n\ninterface IProps {\n    color: string,\n    loading: boolean,\n    delayMs?: number,\n    fullScreen?: boolean,\n}\n\nexport default function LoadingSpinner({color, loading, delayMs, fullScreen}: IProps) {\n    const [ isLoading, setIsLoading ] = useState(loading);\n    useEffect(() => {\n        if (!loading) {\n            setTimeout(() => setIsLoading(false), delayMs || 0);\n        }\n    }, [loading, delayMs]);\n\n    if (fullScreen === undefined) {\n        fullScreen = false;\n    }\n\n    return (<div className={`loading ${fullScreen && ' loading-fs'}`} data-active={(isLoading ? 'yes' : 'no')}>\n        <Loader\n            color={color}\n            loading={true}\n            size={25}\n        />\n    </div>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport Statistics from \"../../../../util/models/Statistics\";\nimport RequestFactory from \"../../../../util/api/RequestFactory\";\nimport LoadingSpinner from \"../../../placeholder/loading/LoadingSpinner\";\n\nexport default function StatisticsPage() {\n    const [statistics, setStatistics] = useState<Statistics|null>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        RequestFactory.getStatistics().then(res => {\n            if (res.status === 200) {\n                setStatistics(res.data.statistics);\n            }\n            setLoading(false);\n        });\n    }, [setStatistics]);\n\n    return (<>\n        <LoadingSpinner color=\"#0a0\" loading={loading} />\n        {statistics != null && <>\n            <h1>{statistics?.totalRequests}</h1>\n        </>}\n    </>);\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\ninterface IProps {\n    className?: string,\n}\n\nconst AdminPage: React.FC<IProps> = ({children, className}) => {\n    return (<div className={`admin-page ${className && className}`}>\n        <nav>\n            <ul>\n                <li><Link to=\"/\">Start</Link></li>\n                <li><Link to=\"/admin\">Dashboard</Link></li>\n            </ul>\n            <hr/>\n        </nav>\n        <main>\n            {children}\n        </main>\n    </div>);\n};\n\nexport default AdminPage;\n","import React from 'react'\nimport {Redirect, Route, Switch, useRouteMatch} from 'react-router-dom';\nimport DashboardPage from \"../pages/admin/dashboard/DashboardPage\";\nimport {IRouterProps} from \"./Routes\";\nimport Error from \"../error/Error\";\nimport ErrorType from \"../../util/errors/ErrorType\";\nimport StatisticsPage from \"../pages/admin/statistics/StatisticsPage\";\nimport AdminPage from \"../pages/admin/AdminPage\";\n\nconst AdminRouter = ({user}: IRouterProps) => {\n    const {path, } = useRouteMatch();\n\n    if (user == null || !user.isAdmin) {\n        return <Redirect to=\"/auth/logout\" />\n    }\n\n    return (<Switch>\n        <Route exact path={`${path}/`}>\n            <AdminPage>\n                <DashboardPage />\n            </AdminPage>\n        </Route>\n        <Route exact path={`${path}/statistics`}>\n            <AdminPage>\n                <StatisticsPage />\n            </AdminPage>\n        </Route>\n        <Route path=\"*\">\n            <Error errorType={ErrorType.NOT_FOUND}/>\n        </Route>\n    </Switch>);\n};\n\nexport default AdminRouter;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Theme} from \"../../../../util/themes/themes\";\n\ninterface IProps {\n    theme: Theme,\n}\n\nconst Nav: React.FC<IProps> = ({theme}) => {\n    return <nav\n        style={{\n            backgroundColor: theme.navBarBg,\n            color: theme.navBarFont,\n        }}\n    >\n        <h1>\n            <Link to=\"/\">Start</Link>\n        </h1>\n        <ul>\n            {[\n                {target: '/about', title: 'Über uns'},\n                {target: '/team', title: 'Team'},\n                {target: '/einrichtung', title: 'Einrichtung'},\n                {target: '/impressum', title: 'Impressum'}\n            ].map(l => <li key={l.target}><Link to={l.target}>{l.title}</Link></li>)}\n        </ul>\n    </nav>\n};\n\nexport default Nav;\n","import React from \"react\";\nimport './Page.scss';\nimport Nav from \"./nav/Nav\";\nimport {Theme} from \"../../../util/themes/themes\";\n\ninterface IProps {\n    theme: Theme,\n}\n\nconst Page: React.FC<IProps> = ({children, theme, }) => {\n    return <div className=\"page\">\n        <Nav theme={theme} />\n        <main>\n            {children}\n        </main>\n    </div>\n};\n\nexport default Page;\n","import React, { useRef } from 'react'\nimport Markdown from 'markdown-to-jsx'\nimport './Markdown.scss';\n\ninterface Props {\n    md: string;\n}\n\nconst MarkDownToJsx = ({md, }: Props) => {\n    const rootRef = useRef() as React.MutableRefObject<HTMLDivElement>;\n\n    return (\n        <div className=\"markdown\" ref={rootRef}>\n            <Markdown\n                options={{}}\n            >{md}</Markdown>\n        </div>);\n}\n\nexport default MarkDownToJsx\n","import React, {useEffect, useState} from \"react\";\nimport Page from \"../../util/models/Page\";\nimport RequestFactory from \"../../util/api/RequestFactory\";\nimport MarkDownToJsx from \"./MarkDownToJsx\";\nimport LoadingSpinner from \"../placeholder/loading/LoadingSpinner\";\nimport {useSelector} from \"react-redux\";\nimport {settingsSelector} from \"../../selectors/selectors\";\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../../util/errors/ErrorType\";\nimport Error from \"../error/Error\";\n\ninterface IProps {\n    slug: string\n}\n\nexport default function MarkdownPage({slug}: IProps) {\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState<Page|null>(null);\n    const [error, setError] = useState<ErrorType|null>(null);\n    const settings = useSelector(settingsSelector);\n\n    useEffect(() => {\n        RequestFactory.getPage(slug).then(res => {\n            setLoading(false);\n            if (res.status === 200) {\n                setPage(res.data.page);\n            } else {\n                setError(errorTypeByHttpStatusCode(res.status));\n            }\n        });\n    }, [slug]);\n\n    useEffect(() => {\n        if (page != null) {\n            document.title = page.title;\n        }\n    }, [page]);\n\n    return (\n    <section>\n        <LoadingSpinner\n            loading={loading}\n            color={settings?.find(s => s.key === 'ACCENT_COLOR')?.value || ''}\n            delayMs={500}\n            fullScreen={false}\n        />\n        { page == null\n            ? (error == null ? '' : <Error errorType={error}/>)\n            : <MarkDownToJsx md={page?.markdown?.content || ''}/>\n        }\n    </section>);\n}\n","import React from \"react\";\nimport MarkdownPage from \"../../md_page/MarkdownPage\";\n\nexport default function ImpressumPage() {\n    return (\n        <>\n            <MarkdownPage slug=\"impressum\" />\n        </>\n    );\n}\n","export type Theme = {\n    navBarBg: string,\n    navBarFont: string,\n};\n\nexport const defaultTheme: Theme = {\n    navBarBg: '#222',\n    navBarFont: '#fff',\n};\n","import React, {useEffect} from \"react\";\nimport {HashRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport AuthRouter from \"./AuthRouter\";\nimport HomePage from \"../pages/home/HomePage\";\nimport Error from \"../error/Error\";\nimport ErrorType from \"../../util/errors/ErrorType\";\nimport AdminRouter from \"./AdminRouter\";\nimport User from \"../../util/models/User\";\nimport Page from \"../pages/page/Page\";\nimport ImpressumPage from \"../pages/impressum/ImpressumPage\";\nimport {defaultTheme} from \"../../util/themes/themes\";\n\nexport interface IRouterProps {\n    user: User|null,\n}\n\nexport default function Routes(props: IRouterProps) {\n    useEffect(() => {\n        document.body.className = '';\n    }, []);\n    return (<Router>\n        <Switch>\n            <Route path=\"/auth\">\n                <AuthRouter {...props} />\n            </Route>\n            <Route path=\"/admin\">\n                <AdminRouter {...props} />\n            </Route>\n            <Route exact path=\"/\">\n                <HomePage />\n            </Route>\n            <Route path=\"/impressum\">\n                <Page\n                    theme={{...defaultTheme, navBarBg: 'purple',}}\n                >\n                    <ImpressumPage/>\n                </Page>\n            </Route>\n            <Route path=\"*\">\n                <Page theme={defaultTheme}>\n                    <Error errorType={ErrorType.NOT_FOUND} />\n                </Page>\n            </Route>\n        </Switch>\n    </Router>);\n}\n","import React, {useEffect, useState} from 'react';\nimport RequestFactory from \"../../util/api/RequestFactory\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ActionType from \"../../actions/ActionType\";\nimport {errorSelector, settingsSelector, userSelector} from \"../../selectors/selectors\";\nimport SettingsApplyer from \"../settings/SettingsApplyer\";\nimport ApiResponse from \"../../util/api/ApiResponse\";\nimport PreflightResponse from \"../../util/api/responses/PreflightResponse\";\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../../util/errors/ErrorType\";\nimport Error from \"../error/Error\";\nimport Api from \"../../util/api/Api\";\nimport Routes from \"../routes/Routes\";\nimport './App.scss';\nimport LoadingSpinner from \"../placeholder/loading/LoadingSpinner\";\n\ninterface IProps {\n  license: string,\n}\n\nexport default function App({license}: IProps) {\n  const dispatch = useDispatch();\n  const settings = useSelector(settingsSelector);\n  const error = useSelector(errorSelector);\n  const user = useSelector(userSelector);\n  const [ loading, setLoading ] = useState(true);\n\n  useEffect(() => {\n    if (!license) {\n      dispatch({\n        type: ActionType.SET_ERROR,\n        error: ErrorType.INVALID_LICENSE,\n      });\n      return;\n    }\n    RequestFactory.getConfig().then(res => {\n      if (res.status !== 200) {\n        dispatch({\n          type: ActionType.SET_ERROR,\n          error: errorTypeByHttpStatusCode(res.status)\n        });\n      } else {\n        Api.baseUrl = res.data.baseApiUrl;\n        RequestFactory.preflight(license).then(handlePreflightResponse(dispatch));\n      }\n    });\n  }, [dispatch, license]);\n\n  useEffect(() => {\n    if (settings != null) {\n      setLoading(false);\n    }\n  }, [settings]);\n\n  if (error != null) {\n    return <Error errorType={error} />;\n  }\n\n  return (<>\n    {settings != null && <SettingsApplyer settings={settings} />}\n    <LoadingSpinner color=\"#0a0\" loading={loading} fullScreen={true} />\n    {!loading && <Routes user={user} />}\n  </>);\n}\n\nfunction handlePreflightResponse(dispatch: Function) {\n  return (res: ApiResponse<PreflightResponse>) => {\n    if (res.status === 200) {\n      dispatch({\n        type: ActionType.SET_SETTINGS,\n        settings: res.data.settings\n      });\n      dispatch({\n        type: ActionType.SET_USER,\n        user: res.data.user\n      });\n    } else {\n      dispatch({\n        type: ActionType.SET_ERROR,\n        error: (res.status === 401 ? ErrorType.INVALID_LICENSE : errorTypeByHttpStatusCode(res.status))\n      });\n    }\n  }\n}\n","import Setting from \"./Setting\";\nimport ErrorType from \"../errors/ErrorType\";\nimport User from \"./User\";\n\nclass State {\n\n    user: User|null = null;\n    settings: Setting[]|null = null;\n    error: ErrorType|null = null;\n\n}\n\nexport default State;\n","import State from '../util/models/State';\nimport ActionType from \"../actions/ActionType\";\nimport SetSettingsAction from \"../actions/settings/SetSettingsAction\";\nimport SetErrorAction from \"../actions/errors/SetErrorAction\";\nimport SetUserAction from \"../actions/user/SetUserAction\";\n\nconst rootReducer = (\n    state: State = new State(),\n    action: SetSettingsAction | SetErrorAction | SetUserAction\n): State => {\n    switch(action.type) {\n        case ActionType.SET_USER:\n            return {...state, user: action.user};\n        case ActionType.SET_SETTINGS:\n            return {...state, settings: action.settings};\n        case ActionType.SET_ERROR:\n            return {...state, error: action.error};\n    }\n\n    return state;\n};\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport {Provider} from \"react-redux\";\nimport rootReducer from \"./reducers/reducer\";\nimport { createStore } from 'redux';\nimport license from \"./license\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App license={license} />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default '123';"],"sourceRoot":""}
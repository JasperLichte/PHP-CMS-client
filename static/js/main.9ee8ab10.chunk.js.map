{"version":3,"sources":["util/api/ApiResponse.ts","config.ts","util/api/Api.ts","util/models/Setting.ts","util/models/User.ts","util/api/responses/PreflightResponse.ts","util/models/Markdown.ts","util/models/Page.ts","util/api/responses/pages/GetPageResponse.ts","util/api/responses/GetConfigResponse.ts","util/api/responses/auth/LoginResponse.ts","util/api/responses/NoDataResponse.ts","util/api/responses/auth/RegisterResponse.ts","util/models/Statistics.ts","util/api/responses/admin/GetStatisticsResponse.ts","util/models/PageGroup.tsx","util/api/responses/pages/GetPageGroupResponse.ts","util/api/responses/GetJsonFromStoreResponse.ts","util/api/RequestFactory.ts","actions/ActionType.ts","util/errors/ErrorType.ts","selectors/selectors.ts","components/settings/SettingsApplyer.tsx","components/error/Error.tsx","components/pages/auth/login/LoginForm.tsx","util/UserServices.ts","components/pages/auth/AuthPage.tsx","components/pages/auth/login/LoginPage.tsx","components/pages/auth/logout/LogoutPage.tsx","components/pages/auth/register/RegisterForm.tsx","components/pages/auth/register/RegisterPage.tsx","components/routes/AuthRouter.tsx","components/pages/home/svg_scene/grass/Blade.tsx","components/pages/home/svg_scene/grass/Grass.tsx","components/pages/home/svg_scene/sun/SunShine.tsx","components/pages/home/svg_scene/sun/Sun.tsx","components/pages/home/svg_scene/cloud/Cloud.tsx","components/pages/home/svg_scene/SvgScene.tsx","components/pages/home/HomePage.tsx","util/themes/themes.ts","components/pages/admin/dashboard/DashboardPage.tsx","components/placeholder/loading/LoadingSpinner.tsx","components/pages/admin/statistics/StatisticsPage.tsx","hooks/useMarkdownPage.tsx","components/md_page/MarkDownToJsx.tsx","components/md_page/edit/EditMarkdownPage.tsx","hooks/useMarkdownPageGroup.tsx","components/pages/admin/page_parts/EditSubPagePartsPage.tsx","components/pages/admin/page_parts/EditPagePartPage.tsx","components/routes/admin/AdminSubPagePartsRouter.tsx","hooks/useColorTheme.ts","components/pages/admin/colors/inputs/ColorThemeInputs.tsx","components/pages/admin/colors/ColorsPage.tsx","components/routes/admin/AdminRouter.tsx","components/pages/page/nav/Nav.tsx","components/pages/page/Page.tsx","components/pages/page/footer/Footer.tsx","components/pages/page/content/PageContent.tsx","components/pages/page/parts_page/PartsPage.tsx","components/md_page/MarkdownPage.tsx","components/routes/PagesRouter.tsx","components/pages/admin/AdminPage.tsx","components/routes/Routes.tsx","components/app/App.tsx","util/models/State.ts","reducers/reducer.ts","index.tsx","license.ts"],"names":["ApiResponse","data","status","success","message","this","input","parseInt","Api","path","license","Promise","resolve","a","url","URL","baseUrl","searchParams","delete","append","fetch","href","headers","credentials","res","json","deserialize","body","method","JSON","stringify","obj","get","RequestFactory","then","post","config","Setting","key","value","defaultValue","cssProperty","User","id","email","isAdmin","PreflightResponse","settings","user","allowMultiRequests","map","s","Markdown","content","htmlContent","description","Page","slug","title","markdown","GetPageResponse","page","GetConfigResponse","baseApiUrl","LoginResponse","NoDataResponse","RegisterResponse","Statistics","totalRequests","requestsByPath","Object","keys","forEach","p","GetStatisticsResponse","statistics","Pagegroup","pages","filter","GetPageGroupResponse","group","PageGroup","GetJsonFromStoreResponse","makeGetRequest","makePostRequest","password","ActionType","ErrorType","userSelector","state","settingsSelector","errorSelector","error","themeSelector","theme","SettingsApplyer","css","join","errorTypeByHttpStatusCode","statusCode","NOT_FOUND","SERVER_ERROR","Error","errorType","component","INVALID_LICENSE","LoginForm","onSubmit","useState","setEmail","setPassword","className","type","onChange","e","target","onClick","UserServices","doLogin","register","doLogout","AuthPage","children","LoginPage","setUser","dispatch","useDispatch","history","useHistory","useEffect","SET_USER","login","push","to","LogoutPage","loading","setLoading","logout","RegisterForm","RegisterPage","AuthRouter","props","useRouteMatch","Blade","x","width","height","points","y","animationDuration","Math","floor","random","darkness","fill","style","animationDelay","Grass","i","window","innerWidth","round","SunShine","p1","p2","rest","x1","y1","x2","y2","Sun","radius","shines","shineLengthLong","shineLengthShort","numberOfShines","setNumberOfShines","setFilter","slice","PI","shineProps","r","angle","cos","sin","onAnimationEnd","operator","in","result","stdDeviation","floodColor","in2","cx","cy","l","Cloud","text","pos","scale","setScale","baseAnimationDuration","min","max","ceil","calculateRandomAnimationDuration","colorShiftDuration","transform","onMouseEnter","onMouseLeave","animationDurationString","dominantBaseline","textAnchor","duration","d2","SvgScene","links","innerHeight","calculateScaleByWindowSize","calculateCloudXPos","HomePage","document","classList","add","remove","defaultTheme","nav","bg","font","footer","sections","colors","DashboardPage","backgroundColor","color","LoadingSpinner","delayMs","fullScreen","isLoading","setIsLoading","timeOut","setTimeout","clearTimeout","undefined","data-active","size","StatisticsPage","setStatistics","getStatistics","useMarkdownPage","setPage","setError","getPage","MarkDownToJsx","md","rootRef","useRef","ref","EditMarkdownPage","onSave","_title","groupId","setMd","setTitle","createPage","editPage","placeholder","create","edit","disabled","useMarkdownPageGroup","setPages","getPageGroup","all","responses","EditSubPagePartsPage","useSelector","length","deletePage","location","reload","EditPagePartPage","useParams","AdminSubPagePartsRouter","exact","Date","now","useColorTheme","setTheme","getJsonFromStore","object","parse","ColorThemeInputs","oldTheme","setSections","newSections","splice","_theme","saveJsonInStore","ColorsPage","AdminRouter","Nav","isOpen","setIsOpen","data-visible","activeClassName","Footer","getFullYear","pageVariants","initial","opacity","out","pageTransition","ease","PageContent","SET_THEME","div","animate","exit","variants","transition","PartsPage","pagesAreLoading","themeIsLoading","zIndex","MarkdownPage","PagesRouter","useLocation","exitBeforeEnter","pathname","AdminPage","Routes","App","getConfig","SET_ERROR","preflight","SET_SETTINGS","SET_ALLOW_MULTIREQUESTS","handlePreflightResponse","State","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"onBA6BeA,E,WApBX,WAAYC,GAAU,yBALfC,OAAS,IAKK,KAJdC,SAAU,EAII,KAHdF,UAGc,OAFdG,QAAU,GAIbC,KAAKJ,KAAOA,E,wDAGJK,GAUR,OARAD,KAAKH,OAASK,SAASD,EAAK,QAG5BD,KAAKF,UAAYG,EAAK,QAGtBA,EAAK,UAAgBD,KAAKD,QAAL,UAAkBE,EAAK,UAErCD,S,KCxBA,GACC,EADD,EAEQ,mCAFR,EAGO,kDCEhBG,E,iGAQiBC,EAAcC,GAC7B,OAAO,IAAIC,QAAJ,uCAAY,WAAMC,GAAN,mBAAAC,EAAA,6DACTC,EAAM,IAAIC,IAAJ,UAAWP,EAAIQ,SAAf,OAAyBP,KACjCQ,aAAaC,OAAO,WACxBJ,EAAIG,aAAaE,OAAO,UAAWT,GAHpB,SAKGU,MAAMN,EAAIO,KAAM,CAC9BC,QAASd,EAAIc,UACbC,YAAa,YAPF,cAKTC,EALS,gBASIA,EAAIC,OATR,OASTA,EATS,OAUfb,EAAS,IAAIZ,EAAYyB,GAAOC,YAAYD,IAV7B,4CAAZ,yD,2BAcShB,EAAcC,GAC9B,OAAO,SAACiB,GACJ,OAAO,IAAIhB,QAAJ,uCAAY,WAAOC,GAAP,eAAAC,EAAA,sEACWO,MAAM,GAAD,OACxBZ,EAAIQ,SADoB,OACVP,GACjB,CACImB,OAAQ,OACRD,KAAME,KAAKC,UAAL,eAAmBH,EAAnB,CAAyBjB,aAC/BY,QAASd,EAAIc,UACbC,YAAa,YAPN,8BASZE,OATY,OACTA,EADS,OAUfb,EAAS,IAAIZ,EAAYyB,GAAOC,YAAYD,IAV7B,2CAAZ,0D,8EAeuBM,EAAQjB,G,0FACnC,IAAIH,SAAwB,SAAAC,GAC/BJ,EAAIwB,IAAIlB,EAAKmB,EAAevB,SAASwB,MAAK,SAAAV,GAEtCZ,EAAS,IAAIZ,EAAY+B,EAAIL,YAAYF,EAAIvB,KAAKA,OAAQyB,YAAYF,W,mLAK3CO,EAAQjB,EAAaa,G,0FACjD,IAAIhB,SAAwB,SAACC,GAChCJ,EAAI2B,KAAKrB,EAAKmB,EAAevB,QAA7BF,CAAsCmB,GAAMO,MAAK,SAAAV,GAE7CZ,EAAS,IAAIZ,EAAY+B,EAAIL,YAAYF,EAAIvB,KAAKA,OAAQyB,YAAYF,W,6GArDhFhB,EAEYQ,QAAWoB,EAAoBA,EAA2BA,EAFtE5B,EAIac,QAAU,iBAAO,IAwDrBd,QC/DM6B,E,iDAEjBC,IAAc,G,KACdC,MAAgB,G,KAChBC,aAAuB,G,KACvBC,YAA2B,K,wDAEfnC,GAUR,OARAD,KAAKiC,IAAMhC,EAAK,IAEhBD,KAAKkC,MAAQjC,EAAK,MAElBD,KAAKmC,aAAelC,EAAK,aAEzBA,EAAK,cAAoBD,KAAKoC,YAAcnC,EAAK,aAE1CD,S,KCjBMqC,E,iDAEjBC,GAAa,E,KACbC,MAAgB,G,KAChBC,SAAmB,E,wDAEPvC,GACR,OAAKA,GAKLA,EAAK,KAAWD,KAAKsC,GAAKpC,SAASD,EAAK,KAExCA,EAAK,QAAcD,KAAKuC,MAAL,UAAgBtC,EAAK,QAExCA,EAAK,UAAgBD,KAAKwC,UAAYvC,EAAK,SAEpCD,MAVIA,S,KCkBJyC,E,iDAtBJC,SAAsB,G,KACtBC,KAAkB,K,KAClBC,oBAA8B,E,wDAEzB3C,GACR,OAAKA,GAKLA,EAAK,WAAiBD,KAAK0C,SAAWzC,EAAK,SAAa4C,KAAI,SAAAC,GAAC,OAAK,IAAId,GAAWX,YAAYyB,OAE7F7C,EAAK,OAAaD,KAAK2C,MAAQ,IAAIN,GAAQhB,YAAYpB,EAAK,OAE3DD,KAAK4C,qBAAuB3C,EAAK,mBAG3BD,MAXIA,S,KCVE+C,E,iDAEjBC,QAAU,G,KACVC,YAAc,G,KACdC,YAAc,G,wDAEFjD,GAQR,OANAA,EAAK,UAAgBD,KAAKgD,QAAU/C,EAAK,SAEzCA,EAAK,cAAoBD,KAAKiD,YAAchD,EAAK,aAEjDA,EAAK,cAAoBD,KAAKkD,YAAcjD,EAAK,aAE1CD,S,KCbMmD,E,iDAEjBC,KAAe,G,KACfC,MAAgB,G,KAChBC,SAA0B,K,wDAEdrD,GASR,OAPAD,KAAKoD,KAAOnD,EAAK,KAEjBD,KAAKqD,MAAQpD,EAAK,MAGlBD,KAAKsD,UAAY,IAAIP,GAAY1B,YAAYpB,EAAK,UAE3CD,S,KCfMuD,E,iDAEjBC,KAAkB,K,wDAENvD,GACR,OAAKA,GAKLA,EAAK,OAAaD,KAAKwD,MAAQ,IAAIL,GAAQ9B,YAAYpB,EAAK,OAErDD,MANIA,S,KCUJyD,E,iDAfJC,WAAqB,G,wDAEhBzD,GACR,OAAKA,GAKLD,KAAK0D,WAAL,UAAqBzD,EAAK,cAEnBD,MANIA,S,KCYJ2D,E,iDAfJhB,KAAkB,K,wDAEb1C,GACR,OAAKA,GAKLA,EAAK,OAAaD,KAAK2C,MAAQ,IAAIN,GAAQhB,YAAYpB,EAAK,OAErDD,MANIA,S,KCCJ4D,E,oGANC3D,GACR,OAAOD,S,KCeA6D,E,iDAfJlB,KAAkB,K,wDAEb1C,GACR,OAAKA,GAKLA,EAAK,OAAaD,KAAK2C,MAAQ,IAAIN,GAAQhB,YAAYpB,EAAK,OAErDD,MANIA,S,KCPE8D,E,iDAEjBC,cAAwB,E,KACxBC,eAA0C,G,wDAE9B/D,GAAwB,IAAD,OAC/B,OAAKA,GAGLD,KAAK+D,cAAgB7D,SAASD,EAAK,eAGnCgE,OAAOC,KAAKjE,EAAK,gBAAoBkE,SAAQ,SAAAC,GAAC,OAAI,EAAKJ,eAAeI,GAAKlE,SAASD,EAAK,eAAmBmE,OAErGpE,MARYA,S,KCYZqE,E,iDAfXC,WAAyB,IAAIR,E,wDAEjB7D,GACR,OAAKA,GAKLD,KAAKsE,YAAc,IAAIR,GAAczC,YAAYpB,EAAK,YAE/CD,MANIA,S,KCPEuE,E,iDAEjBnB,KAAe,G,KACfoB,MAAkB,G,wDAENvE,GAER,OAAKA,GAKLA,EAAK,OAAaD,KAAKoD,KAAL,UAAenD,EAAK,OAGtCA,EAAK,QAAcD,KAAKwE,MAAQvE,EAAK,MAAUwE,QAAO,SAAAL,GAAC,QAAMA,KAAGvB,KAAI,SAAAuB,GAAC,gBAAOA,OAErEpE,MATIA,S,KCPE0E,E,iDAEjBC,MAAmB,IAAIC,E,wDAEX3E,GACR,OAAKA,GAKLA,EAAK,QAAcD,KAAK2E,OAAS,IAAIC,GAAavD,YAAYpB,EAAK,QAE5DD,MANIA,S,KCUJ6E,E,iDAfJzD,KAAe,G,wDAEVnB,GACR,OAAKA,GAKLA,EAAK,OAAaD,KAAKoB,KAAOnB,EAAK,MAE5BD,MANIA,S,KCKE4B,E,4OAKNzB,EAAI2E,eACP,IAAIrB,EADD,oB,0KAMmBpD,G,wEAC1BuB,EAAevB,QAAUA,E,kBAClBF,EAAI2E,eACP,IAAIrC,EADD,mB,yKAMiBW,G,0FACjBjD,EAAI2E,eACP,IAAIvB,EADD,0BAEgBH,K,4KAII9B,G,0FACpBnB,EAAI4E,gBACP,IAAInB,EADD,sBAGHtC,I,0KAIqBA,G,0FAClBnB,EAAI4E,gBACP,IAAInB,EADD,uBAGHtC,I,4KAIuB8B,G,0FACpBjD,EAAI2E,eACP,IAAIlB,EADD,mCAEyBR,K,8KAIHA,G,0FACtBjD,EAAI2E,eACP,IAAIJ,EADD,oCAE0BtB,K,yKAITb,EAAeyC,G,0FAChC7E,EAAI4E,gBACP,IAAIpB,EADD,kBAGH,CAACpB,QAAOyC,c,4KAIazC,EAAeyC,G,0FACjC7E,EAAI4E,gBACP,IAAIlB,EADD,qBAGH,CAACtB,QAAOyC,c,wQAKL7E,EAAI2E,eACP,IAAIlB,EADD,qB,0QAOAzD,EAAI2E,eACP,IAAIT,EACJ,8B,iLAI6B/B,G,0FAC1BnC,EAAI2E,eACP,IAAID,EADD,4BAEkBvC,K,iLAIOA,EAAYlB,G,0FACrCjB,EAAI4E,gBACP,IAAInB,EADD,mCAEyBtB,GAC5B,CAAClB,U,2GAjGQQ,EAEHvB,QAAkB,G,ICf/B4E,E,iBAAAA,O,uBAAAA,I,+BAAAA,I,yBAAAA,I,yBAAAA,I,sDAAAA,M,KAQUA,ICRVC,EDQUD,IECFE,EAAoC,SAAAC,GAAK,OAAIA,EAAMzC,MACnD0C,EAA6C,SAAAD,GAAK,OAAIA,EAAM1C,UAC5D4C,EAA0C,SAAAF,GAAK,OAAIA,EAAMG,OACzDC,EAAiC,SAAAJ,GAAK,OAAIA,EAAMK,OCL9C,SAASC,EAAT,GAA8C,IAApBhD,EAAmB,EAAnBA,SAC/BiD,EAAG,0BAEDjD,EACC+B,QAAO,SAAA3B,GAAC,OAAqB,MAAjBA,EAAEV,eACdS,KAAI,SAAAC,GAAC,gBAAOA,EAAEV,YAAT,aAAyBU,EAAEZ,MAA3B,QACL0D,KAAK,IALL,WAST,OACI,+BAAQD,I,SFlBXT,O,qCAAAA,I,+BAAAA,I,0BAAAA,M,KAMUA,QACR,SAASW,EAA0BC,GACtC,OAAQA,GACJ,KAAK,IAAK,OAAO,KACjB,KAAK,IAAK,OAAOZ,EAAUa,UAC3B,KAAK,IAAK,OAAOb,EAAUc,aAE/B,OAAOd,EAAUc,aGLN,SAASC,EAAT,GAA8C,IAA9BC,EAA6B,EAA7BA,UAAWnG,EAAkB,EAAlBA,QAChCoG,EAAa,SAACD,GAChB,OAAQA,GACJ,KAAKhB,EAAUkB,gBACX,OAAQ,2BAAIrG,GAAW,oBAC3B,KAAKmF,EAAUc,aACX,OAAQ,2BAAIjG,GAAW,2BAC3B,KAAKmF,EAAUa,UACX,OAAQ,2BAAIhG,GAAW,aAE/B,OAAO,gDATQ,CAUhBmG,GAEH,OAAQ,iCAAUC,G,YCfP,SAASE,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,SAAmB,EACtBC,mBAAS,IADa,mBAC1ChE,EAD0C,KACnCiE,EADmC,OAEhBD,mBAAS,IAFO,mBAE1CvB,EAF0C,KAEhCyB,EAFgC,KAIlD,OAAQ,yBAAKC,UAAU,aACnB,sCACA,2BAAOC,KAAK,QAAQzE,MAAOK,EAAOqE,SAAU,SAACC,GAAD,OAAOL,EAASK,EAAEC,OAAO5E,UACrE,wCACA,2BAAOyE,KAAK,WAAWzE,MAAO8C,EAAU4B,SAAU,SAACC,GAAD,OAAOJ,EAAYI,EAAEC,OAAO5E,UAC9E,4BAAQ6E,QAAS,kBAAMT,EAAS/D,EAAOyC,KAAvC,a,ICZagC,E,4IAESzE,EAAeyC,G,uFACnBpD,EAAeqF,QAAQ1E,EAAOyC,G,cAA1C7D,E,yBACCA,EAAIvB,KAAK+C,M,4KAGSJ,EAAeyC,G,uFACtBpD,EAAesF,SAAS3E,EAAOyC,G,cAA3C7D,E,yBACCA,EAAIvB,KAAK+C,M,mQAIEf,EAAeuF,W,cAA3BhG,E,yBACiB,MAAfA,EAAItB,Q,+GCJLuH,G,MAVY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACzB,OACI,yBAAKX,UAAU,aACX,yBAAKA,UAAU,WACVW,MCEF,SAASC,IAAa,IAAD,EACRf,mBAAoB,MADZ,mBACzB5D,EADyB,KACnB4E,EADmB,KAE1BC,EAAWC,cACXC,EAAUC,cAShB,OAPAC,qBAAU,WACNJ,EAAS,CACLb,KAAM1B,EAAW4C,SACjBlF,KAAMA,MAEX,CAACA,EAAM6E,IAEF,kBAAC,EAAD,KACJ,wCACA,kBAACnB,EAAD,CAAWC,SAAU,SAAC/D,EAAOyC,GACpBzC,GAAUyC,GAIfgC,EAAac,MAAMvF,EAAOyC,GAAUnD,MAAK,SAAAc,GACrC4E,EAAQ5E,IACR,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAMH,SACNkF,EAAQK,KAAK,UAEbL,EAAQK,KAAK,WAIzB,kBAAC,IAAD,CAAMC,GAAG,kBAAT,4BC/BO,SAASC,KAAc,IAAD,EACH1B,oBAAS,GADN,mBAC1B2B,EAD0B,KACjBC,EADiB,KAE3BX,EAAWC,cAcjB,OAZAG,qBAAU,WACNZ,EAAaoB,SAASvG,MAAK,SAAA/B,GACnBA,GACA0H,EAAS,CACLb,KAAM1B,EAAW4C,SACjBlF,KAAM,OAGdwF,GAAW,QAEhB,CAACX,IAEAU,EACO,qCAEJ,kBAAC,IAAD,CAAUF,GAAG,MCnBT,SAASK,GAAT,GAA2C,IAApB/B,EAAmB,EAAnBA,SAAmB,EACzBC,mBAAS,IADgB,mBAC7ChE,EAD6C,KACtCiE,EADsC,OAEnBD,mBAAS,IAFU,mBAE7CvB,EAF6C,KAEnCyB,EAFmC,KAIrD,OAAQ,yBAAKC,UAAU,aACnB,sCACA,2BAAOC,KAAK,QAAQzE,MAAOK,EAAOqE,SAAU,SAACC,GAAD,OAAOL,EAASK,EAAEC,OAAO5E,UACrE,wCACA,2BAAOyE,KAAK,WAAWzE,MAAO8C,EAAU4B,SAAU,SAACC,GAAD,OAAOJ,EAAYI,EAAEC,OAAO5E,UAC9E,4BAAQ6E,QAAS,kBAAMT,EAAS/D,EAAOyC,KAAvC,cCNO,SAASsD,KAAgB,IAAD,EACX/B,mBAAoB,MADT,mBAC5B5D,EAD4B,KACtB4E,EADsB,KAE7BC,EAAWC,cACXC,EAAUC,cAShB,OAPAC,qBAAU,WACNJ,EAAS,CACLb,KAAM1B,EAAW4C,SACjBlF,KAAMA,MAEX,CAACA,EAAM6E,IAEF,kBAAC,EAAD,KACJ,4CACA,kBAACa,GAAD,CAAc/B,SAAU,SAAC/D,EAAOyC,GAC5BgC,EAAaE,SAAS3E,EAAOyC,GAAUnD,MAAK,SAAAc,GACpCJ,GAASyC,IACTuC,EAAQ5E,GACR+E,EAAQK,KAAK,YAIzB,kBAAC,IAAD,CAAMC,GAAG,eAAT,qCCtBR,IAmBeO,GAnBI,SAACC,GAAyB,IAClCpI,EAAUqI,cAAVrI,KAEP,OAAQ,kBAAC,IAAD,KACJ,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,WACP,kBAACkH,EAAD,OAEJ,kBAAC,IAAD,CAAOlH,KAAI,UAAKA,EAAL,cACP,kBAACkI,GAAD,OAEJ,kBAAC,IAAD,CAAOlI,KAAI,UAAKA,EAAL,YACP,kBAAC6H,GAAD,OAEJ,kBAAC,IAAD,CAAO7H,KAAI,UAAKA,EAAL,OACP,kBAAC6F,EAAD,CAAOC,UAAWhB,EAAUa,e,YCfzB,SAAS2C,GAAT,GAAiD,IAAjCC,EAAgC,EAAhCA,EAAGC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,OAC/BC,EAAS,CACX,CAACH,EAAGA,EAAKC,EAAQ,EAAIG,EAAG,GACxB,CAACJ,EAAGA,EAAGI,EAAGF,GACV,CAACF,EAAGA,EAAIC,EAAOG,EAAGF,IAGhBG,EAAqBC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAkB,KAAQ,IAC/DC,EAAWH,KAAKC,MAAuB,IAAjBD,KAAKE,UAAoB,GACrD,OAAO,6BACHzC,UAAU,QACVoC,OAAQA,EAAOjG,KAAI,SAAAuB,GAAC,sBAASA,EAAT,CAAY2E,EAAG3E,EAAE2E,GAAK,IAAMF,QAAWhG,KAAI,SAAAuB,GAAC,gBAAOA,EAAEuE,EAAT,YAAcvE,EAAE2E,MAAKnD,KAAK,MAC1FyD,KAAI,cAASD,EAAT,kBAA2BA,EAA3B,KACJE,MAAO,CACHN,kBAAkB,GAAD,OAAKA,EAAL,UACjBO,eAAe,OAAD,OAASP,EAAT,SCpBX,SAASQ,KAEpB,IADA,IAAMhB,EAAuB,GACpBiB,EAAI,EAAGA,EAAKC,OAAOC,WAAa,EAAIF,IAAK,CAC9C,IAAMZ,EAASI,KAAKC,MAAuB,IAAjBD,KAAKE,UAAoB,GACnDX,EAAMT,KAAK,CACPY,EAAO,EAAJc,EACHb,MAAOK,KAAKW,MAAMf,EAAS,IAC3BA,OAAQA,IAIhB,OACJ,uBAAGnC,UAAU,SACR8B,EAAM3F,KAAI,SAAAuB,GAAC,OAAI,kBAACsE,GAAD,iBAAWtE,EAAX,CAAcnC,IAAKmC,EAAEuE,S,aCS1BkB,GAjB4B,SAAC,GAKrB,IAJnBC,EAIkB,EAJlBA,GACAC,EAGkB,EAHlBA,GACAtF,EAEkB,EAFlBA,OACGuF,EACe,qCAClB,OAAO,wCACHtD,UAAU,YACVjC,OAAQA,GACJuF,EAHD,CAIHC,GAAIH,EAAGnB,EACPuB,GAAIJ,EAAGf,EACPoB,GAAIJ,EAAGpB,EACPyB,GAAIL,EAAGhB,MCXA,SAASsB,GAAT,GASX,IATsF,IAA7DC,EAA4D,EAA5DA,OAAQC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,gBAAiBC,EAA2B,EAA3BA,iBAA2B,EACzClE,mBAAS,GADgC,mBAC9EmE,EAD8E,KAC9DC,EAD8D,OAEzDpE,mBAAS,IAFgD,mBAE9E9B,EAF8E,KAEtEmG,EAFsE,KAO/EC,EAAQ,EAAI5B,KAAK6B,GAAKJ,EACtBK,EAA+B,GAC5BtB,EAAI,EAAGA,EAAIiB,EAAgBjB,IAAK,CACrC,IAAMuB,EAAIV,GAAUb,EAAI,IAAM,EAAIe,EAAkBC,GAC9CQ,EAAQJ,EAAQpB,EACtBsB,EAAWhD,KAAK,CACZ+B,GAAI,CACAnB,GAAS2B,EAAS,IAAMrB,KAAKiC,IAAID,GAVlC,IAWClC,EAVD,KAUUuB,EAAS,IAAMrB,KAAKkC,IAAIF,IAErClB,GAAI,CACApB,EAAQqC,EAAI/B,KAAKiC,IAAID,GAdtB,IAeClC,EAdD,IAcSiC,EAAI/B,KAAKkC,IAAIF,IAEzBxG,OAAQ,KAIhB,OACA,uBAAGiC,UAAU,MAAM0E,eAAgB,WAC/BT,EAAkBJ,GAClBK,EAAU,oBAEV,8BACI,4BAAQtI,GAAG,WAAWuG,OAAO,OAAOD,MAAM,OAAOD,EAAE,OAAOI,EAAE,QACxD,kCAAcsC,SAAS,SAASf,OAAO,IAAIgB,GAAG,cAAcC,OAAO,YACnE,oCAAgBD,GAAG,UAAUE,aAAa,KAAKD,OAAO,YACtD,6BAASE,WAAW,UAAUF,OAAO,cACrC,iCAAaD,GAAG,YAAYI,IAAI,UAAUL,SAAS,KAAKE,OAAO,qBAC/D,iCACI,iCAAaD,GAAG,qBAChB,iCAAaA,GAAG,qBAI5B,4BAAQK,IAtCD,IAsCSC,GArCT,IAqCiBZ,EAAGV,EAAQ7F,OAAQA,IAC1CsG,EAAWlI,KAAI,SAACgJ,EAAGpC,GAAJ,OACZ,kBAAC,GAAD,eACIxH,IAAG,UAAK4J,EAAE/B,GAAGnB,EAAV,YAAekD,EAAE/B,GAAGf,IACnB8C,QC9CpB,IAmCeC,GAnCiB,SAAC,GAAiD,IAAhD/E,EAA+C,EAA/CA,QAASgF,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,MAAO1C,EAAoB,EAApBA,eAAoB,EACvDhD,mBAAS0F,GAD8C,mBACtEnJ,EADsE,KACnEoJ,EADmE,KAEvEC,EAqCV,WACI,OAGkBC,EAHE,IAGWC,EAHL,IAI1BD,EAAMnD,KAAKqD,KAAKF,GAChBC,EAAMpD,KAAKC,MAAMmD,GACVpD,KAAKC,MAAMD,KAAKE,UAAYkD,EAAMD,EAAM,IAAMA,EAHzD,IAAsBA,EAAaC,EAzCDE,GAExBC,EAAqBvD,KAAKC,MAAM,MAAAD,KAAKE,UAAiC,IAE5E,OAAO,uBAAGzC,UAAU,QAAQ4C,MAAO,CAACC,eAAe,GAAD,OAAKA,EAAL,aAC9C,uBACIkD,UAAS,oBAAeT,EAAIrD,EAAnB,aAAyBqD,EAAIjD,EAA7B,KACThC,QAASA,EACT2F,aAAc,kBAAMR,EAASD,IAC7BU,aAAc,kBAAMT,EAASD,KAE7B,4BAAQN,GAAI,EAAGC,GAAI,EAAGZ,EAAG,GAAKlI,EAAG4D,UAAU,OAAO4C,MAAO,CACrDN,kBAAmB4D,GAAwBT,EAAuBK,MAEtE,4BAAQb,GAAI,IAAM7I,EAAG8I,GAAI,EAAGZ,EAAG,GAAKlI,EAAG4D,UAAU,OAAO4C,MAAO,CAC3DN,kBAAmB4D,GAAwBT,EAAuBK,MAEtE,0BAAM5D,MAAO,IAAM9F,EAAG+F,OAAQ,GAAK/F,EAAG6F,EAAG,EAAGI,GAAI,GAAKjG,EAAG4D,UAAU,OAAO4C,MAAO,CAC5EN,kBAAmB4D,GAAwBT,EAAuBK,MAEtE,4BAAQb,GAAI,GAAK7I,EAAG8I,IAAK,GAAK9I,EAAGkI,EAAG,GAAKlI,EAAG4D,UAAU,MAAM4C,MAAO,CAC/DN,kBAAmB4D,GAAwBT,EAAuBK,MAEtE,4BAAQb,GAAI,GAAK7I,EAAG8I,IAAK,GAAK9I,EAAGkI,EAAG,GAAKlI,EAAG4D,UAAU,QAAQ4C,MAAO,CACjEN,kBAAmB4D,GAAwBT,EAAuBK,MAEtE,0BAAM7D,EAAG,GAAK7F,EAAGiG,GAAI,EAAIjG,EAAG+J,iBAAiB,SAASC,WAAW,SAASxD,MAAO,CAC7EN,kBAAmB4D,GAAwBT,EAAuBK,KAClET,MAOVa,GAA0B,SAACG,EAAkBC,GAAnB,gBAAqCD,EAArC,eAAoDC,EAApD,OCrCjB,SAASC,GAAT,GAAoC,IAAjBC,EAAgB,EAAhBA,MACxBxF,EAAUC,cACVsE,EA+BV,WACI,GAAIvC,OAAOyD,YAAc,IACrB,MAAO,GAEX,GAAIzD,OAAOyD,YAAc,IACrB,MAAO,IAEX,GAAIzD,OAAOyD,YAAc,IACrB,MAAO,IAEX,OAAO,EAzCOC,GAEd,OAAQ,yBAAK1G,UAAU,aACnB,6BACI,kBAAC2D,GAAD,CAAKC,OAAQ,GAAIE,gBAAiB,GAAIC,iBAAkB,GAAIF,OAAQ,KACpE,kBAACf,GAAD,MACC0D,EAAMrK,KAAI,SAACgJ,EAAGpC,GAAJ,OAAW,kBAAC,GAAD,CAClBxH,IAAK4J,EAAE/E,OACPiF,KAAMF,EAAExI,MACR0D,QAAS,kBAAMW,EAAQK,KAAK8D,EAAE/E,SAC9BkF,IAAK,CAACrD,EAAG0E,KAAsBtE,EAAa,KAATU,EAAI,GAAWwC,GAClDA,MAAOA,EACP1C,eAAgB,IAAQ,IAAME,QAGtC,yBAAK/C,UAAU,YAIvB,SAAS2G,KACL,IAAIjB,EAAO1C,OAAOC,YAAc,IAAM,IAAM,GACxC0C,EAAM3C,OAAOC,WAAa,IAO9B,OALID,OAAOC,WAAa,OACpByC,GAAQ1C,OAAOC,WAAa,KAAQ,EACpC0C,EAAM3C,OAAOC,YAAeD,OAAOC,WAAa,KAAQ,GAGrDV,KAAKC,MAAMD,KAAKE,UAAYkD,EAAMD,EAAM,IAAMA,ECpC1C,SAASkB,KAOpB,OANA1F,qBAAU,WAGN,OAFA2F,SAASjM,KAAKkM,UAAUC,IAAI,QAErB,kBAAMF,SAASjM,KAAKkM,UAAUE,OAAO,WAC7C,IAEK,yBAAKhH,UAAU,aACnB,kBAAC,GAAD,CAAUwG,MAAO,CACb,CAACpG,OAAQ,WAAYzD,MAAO,eAC5B,CAACyD,OAAQ,UAAWzD,MAAO,QAC3B,CAACyD,OAAQ,qBAAsBzD,MAAO,eACtC,CAACyD,OAAQ,eAAgBzD,MAAO,gBAEpC,0CAAe,gD,UCEVsK,GAAsB,CAC/BC,IAAK,CACDC,GAAI,UACJC,KAAM,WAEVC,OAAQ,CACJF,GAAI,UACJC,KAAM,WAEVE,SAAU,CACNC,OAAQ,CACJ,CAACJ,GAAI,UAAWC,KAAM,WACtB,CAACD,GAAI,UAAWC,KAAM,WACtB,CAACD,GAAI,UAAWC,KAAM,WACtB,CAACD,GAAI,UAAWC,KAAM,WACtB,CAACD,GAAI,UAAWC,KAAM,cC9BnB,SAASI,KAwCpB,OAAQ,yBAAKxH,UAAU,kBACnB,4BAxCU,CACV,CACII,OAAQ,cACRzD,MAAO,YAEX,CACIyD,OAAQ,eACRzD,MAAO,eAEX,CACIyD,OAAQ,yBACRzD,MAAO,uBAEX,CACIyD,OAAQ,aACRzD,MAAO,8BAEX,CACIyD,OAAQ,iBACRzD,MAAO,WAEX,CACIyD,OAAQ,mBACRzD,MAAO,aAEX,CACIyD,OAAQ,gBACRzD,MAAO,UAEX,CACIyD,OAAQ,oBACRzD,MAAO,eAEX,CACIyD,OAAQ,eACRzD,MAAO,aAOGR,KAAI,SAAAgJ,GAAC,OAAI,kBAAC,IAAD,CAAM7D,GAAI6D,EAAE/E,OAAQ7E,IAAK4J,EAAE/E,QACtC,wBACIwC,MAAO,CACH6E,gBAAiBR,GAAaC,IAAIC,GAClCO,MAAOT,GAAaC,IAAIE,OAE9BjC,EAAExI,a,8BC3CT,SAASgL,GAAT,GAAwE,IAA/CD,EAA8C,EAA9CA,MAAOlG,EAAuC,EAAvCA,QAASoG,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,WAAqB,EAC9ChI,mBAAS2B,GADqC,mBAC1EsG,EAD0E,KAC/DC,EAD+D,KAclF,OAZA7G,qBAAU,WACN,IAAKM,EAAS,CACV,IAAMwG,EAAUC,YAAW,kBAAMF,GAAa,KAAQH,GAAW,GAEjE,OAAO,kBAAMM,aAAaF,OAE/B,CAACxG,EAASoG,SAEMO,IAAfN,IACAA,GAAa,GAGT,yBAAK7H,UAAS,kBAAa6H,GAAc,eAAiBO,cAAcN,EAAY,MAAQ,MAChG,kBAAC,KAAD,CACIJ,MAAOA,EACPlG,SAAS,EACT6G,KAAM,M,MCvBH,SAASC,KAAkB,IAAD,EACDzI,mBAA0B,MADzB,mBAC9BjC,EAD8B,KAClB2K,EADkB,OAEP1I,oBAAkB,GAFX,mBAE9B2B,EAF8B,KAErBC,EAFqB,KAarC,OATAP,qBAAU,WACNhG,EAAesN,gBAAgBrN,MAAK,SAAAV,GACb,MAAfA,EAAItB,QACJoP,EAAc9N,EAAIvB,KAAK0E,YAE3B6D,GAAW,QAEhB,CAAC8G,IAEI,oCACJ,kBAAC,GAAD,CAAgBb,MAAM,OAAOlG,QAASA,IACvB,MAAd5D,GAAsB,yBAAKoC,UAAU,mBAClC,4BAAI,qCAAOpC,QAAP,IAAOA,OAAP,EAAOA,EAAYP,eAAvB,mBACA,+BACI,+BACI,4BAAI,mCAAY,yCAEpB,+BAEQE,OAAOC,KAAP,OAAYI,QAAZ,IAAYA,OAAZ,EAAYA,EAAYN,gBAAgBnB,KAAI,SAAAuB,GAAC,OAAI,wBAAInC,IAAKmC,GACtD,4BAAKA,GAAO,mCAAKE,QAAL,IAAKA,OAAL,EAAKA,EAAYN,eAAeI,YCzBzD,SAAS+K,GAAgB/L,GAAe,IAAD,EACpBmD,oBAAS,GADW,mBAC3C2B,EAD2C,KAClCC,EADkC,OAE1B5B,mBAAoB,MAFM,mBAE3C/C,EAF2C,KAErC4L,EAFqC,OAGxB7I,mBAAyB,MAHD,mBAG3ChB,EAH2C,KAGpC8J,EAHoC,KAgBlD,OAXAzH,qBAAU,WACNhG,EAAe0N,QAAQlM,GAAMvB,MAAK,SAAAV,GAC9BgH,GAAW,GACQ,MAAfhH,EAAItB,OACJuP,EAAQjO,EAAIvB,KAAK4D,MAEjB6L,EAASxJ,EAA0B1E,EAAItB,cAGhD,CAACuD,IAEG,CAACI,OAAM0E,UAAS3C,S,aCJZgK,I,MATO,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,GACdC,EAAUC,mBAEhB,OACI,yBAAKhJ,UAAU,kBAAkBiJ,IAAKF,GAClC,kBAAC,KAAD,KAAWD,M,MCGR,SAASI,GAAT,GAA2E,IAAhDxM,EAA+C,EAA/CA,KAAMyM,EAAyC,EAAzCA,OAAeC,EAA0B,EAAjCzM,MAAe0M,EAAkB,EAAlBA,QAAkB,EACtDZ,GAAgB/L,GAAxCI,EAD8E,EAC9EA,KAAM+B,EADwE,EACxEA,MAAO2C,EADiE,EACjEA,QADiE,EAEjE3B,mBAAS,IAFwD,mBAE9EiJ,EAF8E,KAE1EQ,EAF0E,OAG3DzJ,mBAASuJ,GAAU,IAHwC,mBAG9EzM,EAH8E,KAGvE4M,EAHuE,iDAYrF,4BAAAzP,EAAA,sEACsBoB,EAAesO,WAAW,CACxC9L,EAAGhB,EACHJ,QAASwM,EACTnM,MAAOA,EACPsB,MAAOoL,GAAW,KAL1B,cACU5O,EADV,yBAOW0E,EAA0B1E,EAAItB,SAPzC,4CAZqF,kEAsBrF,4BAAAW,EAAA,sEACsBoB,EAAeuO,SAAS,CACtC/L,EAAGhB,EACHJ,QAASwM,EACTnM,MAAOA,EACPsB,MAAOoL,GAAW,KAL1B,cACU5O,EADV,yBAOW0E,EAA0B1E,EAAItB,SAPzC,4CAtBqF,sBAgCrF,OA3BA+H,qBAAU,WACa,IAAD,EAAN,MAARpE,IACAwM,GAAU,OAAJxM,QAAI,IAAJA,GAAA,UAAAA,EAAMF,gBAAN,eAAgBN,UAAW,IACjCiN,GAAa,OAAJzM,QAAI,IAAJA,OAAA,EAAAA,EAAMH,QAAS,OAE7B,CAACG,IAsBI,yBAAKkD,UAAU,sBACnB,kBAAC,GAAD,CAAgB0H,MAAM,OAAOlG,QAASA,IACrC3C,GAASA,IAAUL,EAAUa,WAAa,kBAACE,EAAD,CAAOC,UAAWX,KAC3D2C,GAAY,oCACV,yBAAKxB,UAAU,QACVnB,IAAUL,EAAUa,YAAc+J,GAC/B,2BACI5N,MAAOmB,EACPuD,SAAU,SAAAC,GAAC,OAAIoJ,EAASpJ,EAAEC,OAAO5E,QACjCkO,YAAY,UAGpB,8BACIlO,MAAOsN,EACP5I,SAAU,SAACC,GAAD,OAAOmJ,EAAMnJ,EAAEC,OAAO5E,QAChCkO,YAAY,cAGpB,kBAAC,GAAD,CAAeZ,GAAIA,IACnB,4BACI9I,UAAU,WACVK,QAAS,WACDxB,IAAUL,EAAUa,UAtD6C,0CAuDjEsK,GAASxO,KAAKgO,GAvDmD,0CAyDjES,GAAOzO,KAAKgO,IAGpBU,SAAmB,KAATnN,GAAsB,KAAPoM,GAAuB,KAAVnM,GAT1C,e,aC7DG,SAASmN,GAAqBpN,GAAoD,IAAtCR,EAAqC,0DAClE2D,mBAAwB,IAD0C,mBACrF/B,EADqF,KAC9EiM,EAD8E,OAE1DlK,oBAAS,GAFiD,mBAErFiI,EAFqF,KAE1EC,EAF0E,KAyB5F,OArBA7G,qBAAU,WACFhF,EACAhB,EAAe8O,aAAatN,GAC3BvB,MAAK,SAAAV,GAAG,OAAIb,QAAQqQ,IAAIxP,EAAIvB,KAAK+E,MAAMH,MAAM3B,KAAI,SAAAO,GAAI,OAAIxB,EAAe0N,QAAQlM,UAChFvB,MAAK,SAACV,GACHsP,EAAStP,EAAI0B,KAAI,SAAAmI,GAAC,OAAIA,EAAEpL,KAAK4D,QAAMiB,QAAO,SAAAL,GAAC,OAAS,MAALA,MAC/CqK,GAAa,MAGjB7M,EAAe8O,aAAatN,GAC3BvB,KADD,uCACM,WAAMV,GAAN,qBAAAX,EAAA,sDACIoQ,EAA4C,GADhD,eAEiBzP,EAAIvB,KAAK+E,MAAMH,OAFhC,gEAESpB,EAFT,aAGEwN,EAHF,SAGuBhP,EAAe0N,QAAQlM,GAH9C,wBAGY2E,KAHZ,+JAKF0I,EAASG,EAAU/N,KAAI,SAAAmI,GAAC,OAAIA,EAAEpL,KAAK4D,QAAMiB,QAAO,SAAAL,GAAC,OAAS,MAALA,MACrDqK,GAAa,GANX,gEADN,yDAUL,CAACrL,EAAMR,IAEH,CACH4B,QACAgK,a,MCpBO,SAASqC,GAAT,GAA+C,IAAhBzN,EAAe,EAAfA,KACpCR,EAAqBkO,aAAY,SAAC1L,GAAD,OAAkBA,EAAMxC,sBADN,EAE9B4N,GAAqBpN,EAAMR,GAA/C4B,EAFkD,EAElDA,MAAOgK,EAF2C,EAE3CA,UAEd,OAAQ,yBAAK9H,UAAU,oBACnB,kBAAC,GAAD,CAAgB0H,MAAM,OAAOlG,QAASsG,IACtC,kBAAC,IAAD,CAAMxG,GAAE,aAAQ5E,IAAhB,aACA,0CACA,gCACOoL,GAAc,+BACZhK,EAAMuM,OAAS,EACVvM,EAAM3B,KAAI,SAAAuB,GAAC,OAAS,MAALA,GACb,wBAAInC,IAAG,OAAEmC,QAAF,IAAEA,OAAF,EAAEA,EAAGhB,MACR,mCAAKgB,QAAL,IAAKA,OAAL,EAAKA,EAAGf,OACR,4BAAI,kBAAC,IAAD,CAAM2E,GAAE,iBAAY5E,EAAZ,wBAAyBgB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAGhB,OAApC,eACJ,4BAAI,4BACI2D,QAAS,kBAAMnF,EAAeoP,WAAf,OAA0B5M,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAGhB,MAAMvB,MAAK,kBAAM6H,OAAOuH,SAASC,cADjF,mBAKV,4BAAI,2DAIlB,kBAAC,IAAD,CAAMlJ,GAAE,iBAAY5E,EAAZ,QAAwBsD,UAAU,eAA1C,QC7BO,SAASyK,GAAT,GAA4C,IAAjBxM,EAAgB,EAAhBA,MAChC+C,EAAUC,cACRvE,EAASgO,cAAThO,KAER,OAAKA,EAIE,kBAAC,GAAD,CAAkBA,KAAMA,EAAM2M,QAASpL,EAAOkL,OAAQ,kBAAMnI,EAAQK,KAAR,iBAAuBpD,OAH/E,qCCFf,IAqBe0M,GArBiB,SAAC,GAAoB,IAAnBjO,EAAkB,EAAlBA,KACvBhD,EAAUqI,cAAVrI,KACDsH,EAAUC,cAEhB,OAAQ,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO2J,OAAK,EAAClR,KAAI,UAAKA,EAAL,SACb,kBAAC,GAAD,CACIgD,KAAI,UAAKA,EAAL,YAAamO,KAAKC,OACtBzB,QAAS3M,EACTyM,OAAQ,kBAAMnI,EAAQK,KAAR,iBAAuB3E,QAG7C,kBAAC,IAAD,CAAOkO,OAAK,EAAClR,KAAI,UAAKA,EAAL,gBACb,kBAAC+Q,GAAD,CAAkBxM,MAAOvB,KAE7B,kBAAC,IAAD,CAAOkO,OAAK,EAAClR,KAAI,UAAKA,EAAL,MACb,kBAAC,GAAD,CAAsBgD,KAAMA,O,SCvB7B,SAASqO,GAAerO,GAAmD,IAAD,EAC3DmD,mBAASoH,IADkD,mBAC9ElI,EAD8E,KACvEiM,EADuE,OAEvDnL,oBAAS,GAF8C,mBAE9E2B,EAF8E,KAErEC,EAFqE,KAgBrF,OAZAP,qBAAU,WACNhG,EAAe+P,iBAAf,sBAA+CvO,IAAQvB,MAAK,SAAAV,GACxD,GAAmB,MAAfA,EAAItB,QAAkBsB,EAAIvB,KAAKwB,KAC/B,IACI,IAAMwQ,EAASpQ,KAAKqQ,MAAM1Q,EAAIvB,KAAKwB,MACnCsQ,EAASE,GACX,MAAM/K,IAEZsB,GAAW,QAEhB,CAAC/E,IAEG,CAACqC,QAAO+I,UAAWtG,G,MCRf,SAAS4J,GAAT,GAAkD,IAAvB1O,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAgB,EACvBoO,GAAcrO,GAArC2O,EAD8C,EACrDtM,MAAiB+I,EADoC,EACpCA,UADoC,EAElCjI,mBAASwL,GAFyB,mBAErDtM,EAFqD,KAE9CiM,EAF8C,OAG5BnL,mBAASwL,EAAS/D,SAASC,QAHC,mBAGrDD,EAHqD,KAG3CgE,EAH2C,KAU5D,OALApK,qBAAU,WACN8J,EAASK,GACTC,EAAYD,EAAS/D,SAASC,UAC/B,CAAC8D,IAEI,yBAAKrL,UAAU,sBACnB,kBAAC,GAAD,CAAgB0H,MAAM,OAAOlG,QAASsG,IACtC,4BAAKnL,GACL,yBAAKqD,UAAU,OACX,qDACA,2BACIC,KAAK,QACLzE,MAAOuD,EAAMmI,IAAIC,GACjBjH,SAAU,SAAAC,GAAC,OAAI6K,EAAS,eAAIjM,EAAL,CAAYmI,IAAI,eAAKnI,EAAMmI,IAAZ,CAAiBC,GAAIhH,EAAEC,OAAO5E,cAExE,4BACI6E,QAAS,SAAAF,GAAC,OAAI6K,EAAS,eAAIjM,EAAL,CAAYmI,IAAI,eAAKnI,EAAMmI,IAAZ,CAAiBC,GAAIF,GAAaC,IAAIC,UAD/E,oBAIJ,yBAAKnH,UAAU,OACX,iDACA,2BACIC,KAAK,QACLzE,MAAOuD,EAAMmI,IAAIE,KACjBlH,SAAU,SAAAC,GAAC,OAAI6K,EAAS,eAAIjM,EAAL,CAAYmI,IAAI,eAAKnI,EAAMmI,IAAZ,CAAiBE,KAAMjH,EAAEC,OAAO5E,cAE1E,4BACI6E,QAAS,SAAAF,GAAC,OAAI6K,EAAS,eAAIjM,EAAL,CAAYmI,IAAI,eAAKnI,EAAMmI,IAAZ,CAAiBE,KAAMH,GAAaC,IAAIE,YADjF,oBAIJ,yBAAKpH,UAAU,OACX,iDACA,2BACIC,KAAK,QACLzE,MAAOuD,EAAMsI,OAAOF,GACpBjH,SAAU,SAAAC,GAAC,OAAI6K,EAAS,eAAIjM,EAAL,CAAYsI,OAAO,eAAKtI,EAAMsI,OAAZ,CAAoBF,GAAIhH,EAAEC,OAAO5E,cAE9E,4BACI6E,QAAS,SAAAF,GAAC,OAAI6K,EAAS,eAAIjM,EAAL,CAAYsI,OAAO,eAAKtI,EAAMsI,OAAZ,CAAoBF,GAAIF,GAAaI,OAAOF,UADxF,oBAIJ,yBAAKnH,UAAU,OACX,6CACA,2BACIC,KAAK,QACLzE,MAAOuD,EAAMsI,OAAOD,KACpBlH,SAAU,SAAAC,GAAC,OAAI6K,EAAS,eAAIjM,EAAL,CAAYsI,OAAO,eAAKtI,EAAMsI,OAAZ,CAAoBD,KAAMjH,EAAEC,OAAO5E,cAEhF,4BACI6E,QAAS,SAAAF,GAAC,OAAI6K,EAAS,eAAIjM,EAAL,CAAYsI,OAAO,eAAKtI,EAAMsI,OAAZ,CAAoBD,KAAMH,GAAaI,OAAOD,YAD1F,oBAIHE,EAASnL,KAAI,SAACC,EAAG2G,GAAJ,OAAU,yBAAK/C,UAAU,cAAczE,IAAG,sBAAiBwH,IACrE,wCAAcA,EAAI,GAClB,2BACI9C,KAAK,QACLtD,MAAM,cACNnB,MAAOY,EAAE+K,GACTjH,SAAU,SAAAC,GACN,IAAMoL,EAAW,aAAOjE,GACxBiE,EAAYxI,GAAGoE,GAAKhH,EAAEC,OAAO5E,MAC7B8P,EAAYC,MAGpB,2BACItL,KAAK,QACLzE,MAAOY,EAAEgL,KACTzK,MAAM,UACNuD,SAAU,SAAAC,GACN,IAAMoL,EAAW,aAAOjE,GACxBiE,EAAYxI,GAAGqE,KAAOjH,EAAEC,OAAO5E,MAC/B8P,EAAYC,MAGpB,4BACIlL,QAAS,WACL,IAAMkL,EAAW,aAAOjE,GACxBiE,EAAYC,OAAOzI,EAAG,GACtBuI,EAAYC,KAJpB,iBAQJ,4BACIlL,QAAS,kBAAMiL,EAAY,GAAD,oBAAKhE,GAAL,CAAe,CAACH,GAAI,UAAWC,KAAM,gBADnE,uBAGA,4BACI/G,QAAS,WACL,IAAMoL,EAAM,eAAO1M,GACnB0M,EAAOnE,SAASC,OAASD,EACzBpM,EAAewQ,gBAAf,sBAA8ChP,GAAQ5B,KAAKC,UAAU0Q,IAAStQ,MAAK,SAAAV,GAC5D,MAAfA,EAAItB,QACJ6J,OAAOuH,SAASC,cANhC,cCnGO,SAASmB,KAEpB,OAAQ,oCACJ,kBAAC,GAAD,CAAkBjP,KAAK,QAAQC,MAAM,gBACrC,kBAAC,GAAD,CAAkBD,KAAK,OAAOC,MAAM,aACpC,kBAAC,GAAD,CAAkBD,KAAK,kBAAkBC,MAAM,wBAC/C,kBAAC,GAAD,CAAkBD,KAAK,MAAMC,MAAM,gCCE3C,IA0CeiP,GA1CK,SAAC9J,GAAyB,IACnCpI,EAAUqI,cAAVrI,KACDsH,EAAUC,cAEhB,OAAkB,MAAda,EAAM7F,MAAiB6F,EAAM7F,KAAKH,QAI9B,kBAAC,IAAD,KACJ,kBAAC,IAAD,CAAO8O,OAAK,EAAClR,KAAI,UAAKA,EAAL,MACb,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,WACP,kBAAC,GAAD,eAAyBgD,KAAK,SAAYoF,KAE9C,kBAAC,IAAD,CAAOpI,KAAI,UAAKA,EAAL,UACP,kBAAC,GAAD,eAAyBgD,KAAK,QAAWoF,KAE7C,kBAAC,IAAD,CAAOpI,KAAI,UAAKA,EAAL,qBACP,kBAAC,GAAD,eAAyBgD,KAAK,mBAAsBoF,KAExD,kBAAC,IAAD,CAAOpI,KAAI,UAAKA,EAAL,SACP,kBAAC,GAAD,eAAyBgD,KAAK,OAAUoF,KAE5C,kBAAC,IAAD,CAAO8I,OAAK,EAAClR,KAAI,UAAKA,EAAL,aACb,kBAAC,GAAD,CAAkBgD,KAAK,UAAUC,MAAM,UAAUwM,OAAS,SAAAtK,GAAK,OAAImC,EAAQK,KAAK,kBAEpF,kBAAC,IAAD,CAAOuJ,OAAK,EAAClR,KAAI,UAAKA,EAAL,eACb,kBAAC,GAAD,CAAkBgD,KAAK,YAAYC,MAAM,YAAYwM,OAAS,SAAAtK,GAAK,OAAImC,EAAQK,KAAK,oBAExF,kBAAC,IAAD,CAAOuJ,OAAK,EAAClR,KAAI,UAAKA,EAAL,YACb,kBAACiS,GAAD,OAEJ,kBAAC,IAAD,CAAOf,OAAK,EAAClR,KAAI,UAAKA,EAAL,gBACb,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC6F,EAAD,CAAOC,UAAWhB,EAAUa,cAhCzB,kBAAC,IAAD,CAAUiC,GAAG,kB,SC6BbuK,I,YApCe,SAAC,GAAa,IAAZ9M,EAAW,EAAXA,MAAW,EACXc,oBAAS,GADE,mBAChCiM,EADgC,KACxBC,EADwB,KAGvC,OAAO,yBACH/L,UAAU,MACV4C,MAAO,CACH6E,gBAAiB1I,EAAMmI,IAAIC,GAC3BO,MAAO3I,EAAMmI,IAAIE,MAErB4E,eAAcF,EAAS,MAAQ,MAE/B,4BACI,4BAAQ9L,UAAU,mBAAmBK,QAAS,kBAAM0L,GAAWD,KAAS,gCACxE,kBAAC,IAAD,CAAMxK,GAAG,KAAT,6BAEJ,4BACI,4BAAQtB,UAAU,YAAYK,QAAS,kBAAM0L,GAAWD,MAEvD,CACG,CAAC1L,OAAQ,WAAYzD,MAAO,eAC5B,CAACyD,OAAQ,UAAWzD,MAAO,YAC3B,CAACyD,OAAQ,qBAAsBzD,MAAO,uBACtC,CAACyD,OAAQ,SAAUzD,MAAO,8BAC1B,CAACyD,OAAQ,aAAczD,MAAO,WAC9B,CAACyD,OAAQ,eAAgBzD,MAAO,cAClCR,KAAI,SAAAgJ,GAAC,OAAI,wBAAI5J,IAAK4J,EAAE/E,QAClB,kBAAC,IAAD,CACIkB,GAAI6D,EAAE/E,OACN6L,gBAAgB,SAChB5L,QAAS,kBAAM0L,GAAU,KAC3B5G,EAAExI,eCnBLF,GAbsB,SAAC,GAAsB,IAArBkE,EAAoB,EAApBA,SAC7B5B,GADiD,EAAV9C,KAC/BmO,YAAYtL,IAE1B,OAAO,yBAAKkB,UAAU,QAClB,kBAAC,GAAD,CAAKjB,MAAOA,IACZ,yBAAKiB,UAAU,WACX,8BACKW,MCqBFuL,I,YAxBkB,SAAC,GAAmB,IAAlBnN,EAAiB,EAAjBA,MAAO9C,EAAU,EAAVA,KACtC,OAAO,4BACH+D,UAAU,SACV4C,MAAO,CACH6E,gBAAiB1I,EAAMsI,OAAOF,GAC9BO,MAAO3I,EAAMsI,OAAOD,OAGxB,uBAAGpH,UAAU,aAAb,cAAqC,IAAI6K,MAAQsB,cAAjD,8BACA,yBAAKnM,UAAU,gBACF,MAAR/D,EACK,kBAAC,IAAD,CAAMqF,GAAG,eAAT,SACA,oCACE,kCAAIrF,QAAJ,IAAIA,OAAJ,EAAIA,EAAMJ,OACV,6BAAK,kBAAC,IAAD,CAAMyF,GAAG,gBAAT,YACA,OAAJrF,QAAI,IAAJA,OAAA,EAAAA,EAAMH,UAAW,6BAAK,kBAAC,IAAD,CAAMwF,GAAG,UAAT,gBAGnC,yBAAKtB,UAAU,iBAAf,0BAC2B,uBAAG1F,KAAK,6BAAR,qBCrB7B8R,GAAe,CACjBC,QAAS,CACLC,QAAS,EACTrK,EAAG,SACHsD,MAAO,IAEXX,GAAI,CACA0H,QAAS,EACTrK,EAAG,EACHsD,MAAO,GAEXgH,IAAK,CACDD,QAAS,EACTrK,EAAG,QACHsD,MAAO,MAITiH,GAAiB,CACnBnG,SAAU,EACVpG,KAAM,QACNwM,KAAM,cAiCKC,GA1BuB,SAAC,GAA6B,IAA5B/L,EAA2B,EAA3BA,SAAU5B,EAAiB,EAAjBA,MAAO9C,EAAU,EAAVA,KAC/C6E,EAAWC,cAYjB,OAXKhC,IACDA,EAAQkI,IAGZ/F,qBAAU,WACNJ,EAAS,CACLb,KAAM1B,EAAWoO,UACjB5N,MAAOA,MAEZ,CAACA,EAAO+B,IAEJ,kBAAC,KAAO8L,IAAR,CACH5M,UAAU,eACVqM,QAAQ,UACRQ,QAAQ,KACRC,KAAK,MACLC,SAAUX,GACVY,WAAYR,IAEX7L,EACD,kBAAC,GAAD,CAAQ5B,MAAOA,EAAO9C,KAAMA,M,MC5CrB,SAASgR,GAAT,GAA8C,IAA1BvQ,EAAyB,EAAzBA,KAASoF,EAAgB,2BAEZgI,GAAqBpN,EADtC0N,aAAY,SAAC1L,GAAD,OAAkBA,EAAMxC,uBACxD4B,EAFiD,EAEjDA,MAAkBoP,EAF+B,EAE1CpF,UAF0C,EAGbiD,GAAcrO,GAAlDqC,EAHiD,EAGjDA,MAAkBoO,EAH+B,EAG1CrF,UAEd,OACI,kBAAC,GAAD,eAAa/I,MAAOA,GAAW+C,GAC3B,yBAAK9B,UAAU,cACX,kBAAC,GAAD,CAAgB0H,MAAO3I,EAAMmI,IAAIC,GAAI3F,QAAS0L,GAAmBC,EAAgBtF,YAAY,IAC5F/J,EAAM3B,KAAI,SAACuB,EAAGqF,GAAO,IAAD,EACb0I,EAAS1M,EAAMuI,SAASC,OAAOxE,EAAIhE,EAAMuI,SAASC,OAAO8C,QAI7D,OAHKoB,IACDA,EAAS,CAACtE,GAAI,UAAWC,KAAM,YAEtB,MAAL1J,GACJ,6BACInC,IAAG,OAAEmC,QAAF,IAAEA,OAAF,EAAEA,EAAGhB,KACRkG,MAAO,CACH6E,gBAAiBgE,EAAOtE,GACxBO,MAAO+D,EAAOrE,KACdgG,OAAQ,IAAMrK,IAGlB,kBAAC,GAAD,CAAe+F,IAAI,UAAApL,EAAEd,gBAAF,eAAYN,UAAW,WC5BvD,SAAS+Q,GAAT,GAAuC,IAAD,IAClB5E,GADkB,EAAf/L,MAC3BI,EAD0C,EAC1CA,KAAM0E,EADoC,EACpCA,QAAS3C,EAD2B,EAC3BA,MAQtB,OANAqC,qBAAU,WACM,MAARpE,IACA+J,SAASlK,MAAQG,EAAKH,SAE3B,CAACG,IAGJ,iCACI,kBAAC,GAAD,CACI0E,QAASA,EACTkG,MAAO,OACPE,QAAS,IACTC,YAAY,IAEN,MAAR/K,EACc,MAAT+B,EAAgB,GAAK,kBAACU,EAAD,CAAOC,UAAWX,IACxC,kBAAC,GAAD,CAAeiK,IAAQ,OAAJhM,QAAI,IAAJA,GAAA,UAAAA,EAAMF,gBAAN,eAAgBN,UAAW,MClB5D,IAuCegR,GAvCK,SAACxL,GAAyB,IACnCpI,EAAUqI,cAAVrI,KACD6Q,EAAWgD,cAEjB,OAAQ,kBAAC,GAASzL,EACd,kBAAC,KAAD,CAAiB0L,iBAAiB,GAC9B,kBAAC,IAAD,CAAQjD,SAAUA,EAAUhP,IAAKgP,EAASkD,UACtC,kBAAC,IAAD,CAAO/T,KAAI,UAAKA,EAAL,WACP,kBAAC,GAAD,eAAWgD,KAAK,SAAYoF,KAEhC,kBAAC,IAAD,CAAOpI,KAAI,UAAKA,EAAL,UACP,kBAAC,GAAD,eAAWgD,KAAK,QAAWoF,KAE/B,kBAAC,IAAD,CAAOpI,KAAI,UAAKA,EAAL,qBACP,kBAAC,GAAD,eAAWgD,KAAK,mBAAsBoF,KAE1C,kBAAC,IAAD,CAAOpI,KAAI,UAAKA,EAAL,SACP,kBAAC,GAAD,eAAWgD,KAAK,OAAUoF,KAE9B,kBAAC,IAAD,CAAOpI,KAAI,UAAKA,EAAL,aACP,kBAAC,GAAgBoI,EACb,kBAACuL,GAAD,CAAc3Q,KAAK,cAG3B,kBAAC,IAAD,CAAOhD,KAAI,UAAKA,EAAL,eACP,kBAAC,GAAgBoI,EACb,kBAACuL,GAAD,CAAc3Q,KAAK,gBAG3B,kBAAC,IAAD,CAAOhD,KAAI,UAAKA,EAAL,OACP,kBAAC,GAAgBoI,EACb,kBAACvC,EAAD,CAAOC,UAAWhB,EAAUa,UAAWhG,QAAQ,+BCpBxDqU,I,MAdqB,SAAC,GAA2B,IAA1B/M,EAAyB,EAAzBA,SAAyB,EAAfX,UAC5C,OAAQ,yBAAKA,UAAU,cACnB,6BACI,4BACI,4BAAI,kBAAC,IAAD,CAAMsB,GAAG,KAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,gBAGZ,8BACKX,MCFE,SAASgN,GAAO7L,GAC3B,OAAQ,kBAAC,IAAD,KACJ,kBAAC,IAAD,CAAOpI,KAAK,SACR,kBAAC,GAAeoI,IAEpB,kBAAC,IAAD,CAAOpI,KAAK,UACR,kBAAC,GAAD,KACI,kBAAC,GAAgBoI,KAGzB,kBAAC,IAAD,CAAOpI,KAAK,MACR,kBAAC,GAAgBoI,IAErB,kBAAC,IAAD,CAAO8I,OAAK,EAAClR,KAAK,KACd,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC6F,EAAD,CAAOC,UAAWhB,EAAUa,c,MCZzB,SAASuO,GAAT,GAAiC,IAAnBjU,EAAkB,EAAlBA,QACrBmH,EAAWC,cACX/E,EAAWoO,YAAYzL,GACvBE,EAAQuL,YAAYxL,GACpB3C,EAAOmO,YAAY3L,GAJoB,EAKboB,oBAAS,GALI,mBAKrC2B,EALqC,KAK5BC,EAL4B,KAkC7C,OA3BAP,qBAAU,WACHvH,EAOLuB,EAAe2S,YAAY1S,MAAK,SAAAV,GACX,MAAfA,EAAItB,OACN2H,EAAS,CACPb,KAAM1B,EAAWuP,UACjBjP,MAAOM,EAA0B1E,EAAItB,WAGvCM,EAAIQ,QAAUQ,EAAIvB,KAAK8D,WACvB9B,EAAe6S,UAAUpU,GAASwB,KAsB1C,SAAiC2F,GAC/B,OAAO,SAACrG,GACa,MAAfA,EAAItB,QACN2H,EAAS,CACPb,KAAM1B,EAAWyP,aACjBhS,SAAUvB,EAAIvB,KAAK8C,WAErB8E,EAAS,CACPb,KAAM1B,EAAW4C,SACjBlF,KAAMxB,EAAIvB,KAAK+C,OAEjB6E,EAAS,CACLb,KAAM1B,EAAW0P,wBACjB/R,mBAAoBzB,EAAIvB,KAAKgD,sBAGjC4E,EAAS,CACPb,KAAM1B,EAAWuP,UACjBjP,MAAuB,MAAfpE,EAAItB,OAAiBqF,EAAUkB,gBAAkBP,EAA0B1E,EAAItB,WAxChD+U,CAAwBpN,QAdjEA,EAAS,CACPb,KAAM1B,EAAWuP,UACjBjP,MAAOL,EAAUkB,oBAepB,CAACoB,EAAUnH,IAEduH,qBAAU,WACQ,MAAZlF,GACFyF,GAAW,KAEZ,CAACzF,IAES,MAAT6C,EACK,kBAACU,EAAD,CAAOC,UAAWX,IAGnB,kBAAC,IAAD,KACO,MAAZ7C,GAAoB,kBAACgD,EAAD,CAAiBhD,SAAUA,IAChD,kBAAC,GAAD,CAAgB0L,MAAM,OAAOlG,QAASA,EAASqG,YAAY,KACzDrG,GAAW,kBAACmM,GAAD,CAAQ1R,KAAMA,K,IC/ChBkS,G,sCAPXlS,KAAkB,K,KAClBD,SAA2B,K,KAC3B6C,MAAwB,K,KACxBE,MAAekI,G,KACf/K,oBAA8B,GCqBnBkS,GAxBK,WAOP,IANT1P,EAMQ,uDANO,IAAIyP,GACnBE,EAKQ,uCACR,OAAOA,EAAOpO,MACV,KAAK1B,EAAW4C,SACZ,OAAO,eAAIzC,EAAX,CAAkBzC,KAAMoS,EAAOpS,OACnC,KAAKsC,EAAWyP,aACZ,OAAO,eAAItP,EAAX,CAAkB1C,SAAUqS,EAAOrS,WACvC,KAAKuC,EAAWuP,UACZ,OAAO,eAAIpP,EAAX,CAAkBG,MAAOwP,EAAOxP,QACpC,KAAKN,EAAWoO,UACZ,OAAO,eAAIjO,EAAX,CAAkBK,MAAOsP,EAAOtP,QACpC,KAAKR,EAAW0P,wBACZ,OAAO,eAAIvP,EAAX,CAAkBxC,mBAAoBmS,EAAOnS,qBAGrD,OAAOwC,G,SCpBL4P,I,MAAQC,aAAYH,KAE1BI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,GAAD,CAAK3U,QCdA,iBDiBbkN,SAAS8H,eAAe,W","file":"static/js/main.9ee8ab10.chunk.js","sourcesContent":["import Serializable from \"../interfaces/Serializable\";\n\nclass ApiResponse<T> implements Serializable {\n\n    public status = 200;\n    public success = false;\n    public data: T;\n    public message = '';\n\n    constructor(data: T) {\n        // @ts-ignore\n        this.data = data;\n    }\n\n    deserialize(input: {}): ApiResponse<T> {\n        // @ts-ignore\n        this.status = parseInt(input['status']);\n\n        // @ts-ignore\n        this.success = !!input['success'];\n\n        // @ts-ignore\n        input['message'] && (this.message = `${input['message']}`);\n\n        return this;\n    }\n\n}\n\nexport default ApiResponse;\n","export default {\n    PRODUCTION: true,\n    BASE_PROD_API_URL: 'https://jaspress.lichte.info/api',\n    BASE_DEV_API_URL: 'http://localhost:8073/Projects/jaspress-api/api',\n};\n","import ApiResponse from \"./ApiResponse\";\nimport RequestFactory from \"./RequestFactory\";\nimport config from \"../../config\";\nimport RequestBody from \"./requests/RequestBody\";\n\nclass Api {\n\n    public static baseUrl = (config.PRODUCTION ? config.BASE_PROD_API_URL : config.BASE_DEV_API_URL);\n\n    private static headers = () => ({\n\n    });\n\n    private static get(path: string, license: string): Promise<ApiResponse<any>> {\n        return new Promise(async resolve => {\n            const url = new URL(`${Api.baseUrl}${path}`);\n            url.searchParams.delete('license');\n            url.searchParams.append('license', license);\n\n            const res = await fetch(url.href, {\n                headers: Api.headers(),\n                credentials: 'include',\n            });\n            const json = await res.json();\n            resolve((new ApiResponse(json)).deserialize(json));\n        });\n    }\n\n    private static post(path: string, license: string) {\n        return (body: RequestBody) => {\n            return new Promise(async (resolve) => {\n                const json = await (await fetch(\n                    `${Api.baseUrl}${path}`,\n                    {\n                        method: 'POST',\n                        body: JSON.stringify({...body, license}),\n                        headers: Api.headers(),\n                        credentials: 'include',\n                    }\n                )).json();\n                resolve((new ApiResponse(json)).deserialize(json));\n            });\n        }\n    }\n\n    public static async makeGetRequest<T>(obj: T, url: string): Promise<ApiResponse<T>> {\n        return new Promise<ApiResponse<T>>(resolve => {\n            Api.get(url, RequestFactory.license).then(res => {\n                // @ts-ignore\n                resolve((new ApiResponse(obj.deserialize(res.data.data))).deserialize(res));\n            });\n        });\n    }\n\n    public static async makePostRequest<T>(obj: T, url: string, body: RequestBody): Promise<ApiResponse<T>> {\n        return new Promise<ApiResponse<T>>((resolve) => {\n            Api.post(url, RequestFactory.license)(body).then(res => {\n                // @ts-ignore\n                resolve((new ApiResponse(obj.deserialize(res.data.data))).deserialize(res));\n            });\n        });\n    }\n\n}\n\nexport default Api;\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class Setting implements Serializable {\n\n    key: string = '';\n    value: string = '';\n    defaultValue: string = '';\n    cssProperty: string|null = null;\n\n    deserialize(input: {}): Setting {\n        // @ts-ignore\n        this.key = input['key'];\n        // @ts-ignore\n        this.value = input['value'];\n        // @ts-ignore\n        this.defaultValue = input['defaultValue'];\n        // @ts-ignore\n        input['cssProperty'] && (this.cssProperty = input['cssProperty']);\n\n        return this;\n    }\n\n}\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class User implements Serializable {\n\n    id: number = 0;\n    email: string = '';\n    isAdmin: boolean = false;\n\n    deserialize(input: {}): User {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['id'] && (this.id = parseInt(input['id']));\n        // @ts-ignore\n        input['email'] && (this.email = `${input['email']}`);\n        // @ts-ignore\n        input['isAdmin'] && (this.isAdmin = !!input['isAdmin']);\n\n        return this;\n    }\n\n}\n","import ResponseData from \"./ResponseData\";\nimport Setting from \"../../models/Setting\";\nimport User from \"../../models/User\";\n\nclass PreflightResponse implements ResponseData{\n\n    public settings: Setting[] = [];\n    public user: User|null = null;\n    public allowMultiRequests: boolean = false;\n\n    deserialize(input: {}): PreflightResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['settings'] && (this.settings = input['settings'].map(s => (new Setting()).deserialize(s)));\n        // @ts-ignore\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\n        // @ts-ignore\n        (this.allowMultiRequests = !!input['allowMultiRequests']);\n\n\n        return this;\n    }\n\n}\n\nexport default PreflightResponse;\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class Markdown implements Serializable {\n\n    content = '';\n    htmlContent = '';\n    description = '';\n\n    deserialize(input: {}): Markdown {\n        // @ts-ignore\n        input['content'] && (this.content = input['content']);\n        // @ts-ignore\n        input['htmlContent'] && (this.htmlContent = input['htmlContent']);\n        // @ts-ignore\n        input['description'] && (this.description = input['description']);\n\n        return this;\n    }\n\n}\n","import Serializable from \"../interfaces/Serializable\";\nimport Markdown from \"./Markdown\";\n\nexport default class Page implements Serializable {\n\n    slug: string = '';\n    title: string = '';\n    markdown: Markdown|null = null;\n    \n    deserialize(input: {}): Page {\n        // @ts-ignore\n        this.slug = input['slug'];\n        // @ts-ignore\n        this.title = input['title'];\n\n        // @ts-ignore\n        this.markdown = (new Markdown()).deserialize(input['markdown']);\n\n        return this;\n    }\n\n}\n","import ResponseData from \"../ResponseData\";\nimport Page from \"../../../models/Page\";\n\nexport default class GetPageResponse implements ResponseData {\n\n    page: Page|null = null;\n\n    deserialize(input: {}): GetPageResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['page'] && (this.page = (new Page()).deserialize(input['page']));\n\n        return this;\n    }\n\n}\n","import ResponseData from \"./ResponseData\";\n\nclass GetConfigResponse implements ResponseData {\n\n    public baseApiUrl: string = '';\n\n    deserialize(input: {}): GetConfigResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        this.baseApiUrl = `${input['base_api_url']}`;\n\n        return this;\n    }\n\n}\n\nexport default GetConfigResponse;\n","import ResponseData from \"../ResponseData\";\nimport User from \"../../../models/User\";\n\nclass LoginResponse implements ResponseData {\n\n    public user: User|null = null;\n\n    deserialize(input: {}): LoginResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\n\n        return this;\n    }\n\n}\n\nexport default LoginResponse;\n","import ResponseData from \"./ResponseData\";\n\nclass NoDataResponse implements ResponseData {\n\n    deserialize(input: {}): NoDataResponse {\n        return this;\n    }\n\n}\n\nexport default NoDataResponse;\n","import ResponseData from \"../ResponseData\";\nimport User from \"../../../models/User\";\n\nclass RegisterResponse implements ResponseData {\n\n    public user: User|null = null;\n\n    deserialize(input: {}): RegisterResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\n\n        return this;\n    }\n\n}\n\nexport default RegisterResponse;\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class Statistics implements Serializable {\n\n    totalRequests: number = 0;\n    requestsByPath: {[key: string]: number} = {};\n\n    deserialize(input: {}): Statistics {\n        if (!input) return this;\n\n        // @ts-ignore\n        this.totalRequests = parseInt(input['totalRequests']);\n\n        // @ts-ignore\n        Object.keys(input['requestsByPath']).forEach(p => this.requestsByPath[p] = parseInt(input['requestsByPath'][p]));\n\n        return this;\n    }\n}\n","import ResponseData from \"../ResponseData\";\nimport Statistics from \"../../../models/Statistics\";\n\nclass GetStatisticsResponse implements ResponseData {\n\n    statistics: Statistics = new Statistics();\n\n    deserialize(input: {}): GetStatisticsResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        this.statistics = (new Statistics()).deserialize(input['statistics']);\n\n        return this;\n    }\n\n}\n\nexport default GetStatisticsResponse;\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class Pagegroup implements Serializable {\n\n    slug: string = '';\n    pages: string[] = [];\n\n    deserialize(input: {}): Pagegroup {\n        // @ts-ignore\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['slug'] && (this.slug = `${input['slug']}`);\n\n        // @ts-ignore\n        input['pages'] && (this.pages = input['pages'].filter(p => !!p).map(p => `${p}`));\n\n        return this;\n    }\n\n}\n","import ResponseData from \"../ResponseData\";\nimport PageGroup from \"../../../models/PageGroup\";\n\nexport default class GetPageGroupResponse implements ResponseData {\n\n    group: PageGroup = new PageGroup();\n\n    deserialize(input: {}): GetPageGroupResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['group'] && (this.group = (new PageGroup()).deserialize(input['group']));\n\n        return this;\n    }\n\n}\n","import ResponseData from \"./ResponseData\";\n\nclass GetJsonFromStoreResponse implements ResponseData{\n\n    public json: string = '';\n\n    deserialize(input: {}): GetJsonFromStoreResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['json'] && (this.json = input['json']);\n\n        return this;\n    }\n\n}\n\nexport default GetJsonFromStoreResponse;\n","import Api from \"./Api\";\nimport PreflightResponse from \"./responses/PreflightResponse\";\nimport GetPageResponse from \"./responses/pages/GetPageResponse\";\nimport GetConfigResponse from \"./responses/GetConfigResponse\";\nimport LoginResponse from \"./responses/auth/LoginResponse\";\nimport NoDataResponse from \"./responses/NoDataResponse\";\nimport RegisterResponse from \"./responses/auth/RegisterResponse\";\nimport GetStatisticsResponse from \"./responses/admin/GetStatisticsResponse\";\nimport CreateMdPageRequestBody from \"./requests/CreateMdPageRequestBody\";\nimport EditMdPageRequestBody from \"./requests/EditMdPageRequestBody\";\nimport GetPageGroupResponse from \"./responses/pages/GetPageGroupResponse\";\nimport GetJsonFromStoreResponse from \"./responses/GetJsonFromStoreResponse\";\n\nexport default class RequestFactory {\n\n    public static license: string = '';\n\n    public static async getConfig() {\n        return Api.makeGetRequest<GetConfigResponse>(\n            new GetConfigResponse(),\n            `/config/get.php`\n        );\n    }\n\n    public static async preflight(license: string) {\n        RequestFactory.license = license;\n        return Api.makeGetRequest<PreflightResponse>(\n            new PreflightResponse(),\n            `/preflight.php`\n        );\n    }\n\n    public static async getPage(slug: string) {\n        return Api.makeGetRequest<GetPageResponse>(\n            new GetPageResponse(),\n            `/page/get.php?p=${slug}`\n        );\n    }\n\n    public static async createPage(body: CreateMdPageRequestBody) {\n        return Api.makePostRequest<NoDataResponse>(\n            new NoDataResponse(),\n            `/admin/page/new.php`,\n            body\n        );\n    }\n\n    public static async editPage(body: EditMdPageRequestBody) {\n        return Api.makePostRequest<NoDataResponse>(\n            new NoDataResponse(),\n            `/admin/page/edit.php`,\n            body\n        );\n    }\n\n    public static async deletePage(slug: string) {\n        return Api.makeGetRequest<NoDataResponse>(\n            new NoDataResponse(),\n            `/admin/page/delete.php?p=${slug}`,\n        );\n    }\n\n    public static async getPageGroup(slug: string) {\n        return Api.makeGetRequest<GetPageGroupResponse>(\n            new GetPageGroupResponse(),\n            `/page/group/get.php?group=${slug}`,\n        );\n    }\n\n    public static async doLogin(email: string, password: string) {\n        return Api.makePostRequest<LoginResponse>(\n            new LoginResponse(),\n            `/auth/login.php`,\n            {email, password}\n        );\n    }\n\n    public static async register(email: string, password: string) {\n        return Api.makePostRequest<RegisterResponse>(\n            new RegisterResponse(),\n            `/auth/register.php`,\n            {email, password}\n        );\n    }\n\n    public static async doLogout() {\n        return Api.makeGetRequest<NoDataResponse>(\n            new NoDataResponse(),\n            `/auth/logout.php`,\n        );\n    }\n\n    public static async getStatistics() {\n        return Api.makeGetRequest<GetStatisticsResponse>(\n            new GetStatisticsResponse(),\n            '/admin/statistics/get.php'\n        );\n    }\n\n    public static async getJsonFromStore(id: string) {\n        return Api.makeGetRequest<GetJsonFromStoreResponse>(\n            new GetJsonFromStoreResponse(),\n            `/store/get.php?id=${id}`\n        );\n    }\n\n    public static async saveJsonInStore(id: string, json: string) {\n        return Api.makePostRequest<NoDataResponse>(\n            new NoDataResponse(),\n            `/admin/store/save.php?id=${id}`,\n            {json}\n        );\n    }\n\n}\n","enum ActionType {\n    SET_USER = 0,\n    SET_SETTINGS = 1,\n    SET_ERROR = 2,\n    SET_THEME = 3,\n    SET_ALLOW_MULTIREQUESTS = 4,\n}\n\nexport default ActionType;\n","enum ErrorType {\n    INVALID_LICENSE = 1,\n    SERVER_ERROR = 2,\n    NOT_FOUND = 3,\n}\n\nexport default ErrorType;\nexport function errorTypeByHttpStatusCode(statusCode: number): ErrorType|null {\n    switch (statusCode) {\n        case 200: return null;\n        case 404: return ErrorType.NOT_FOUND;\n        case 500: return ErrorType.SERVER_ERROR;\n    }\n    return ErrorType.SERVER_ERROR;\n}\n","import State from \"../util/models/State\";\nimport Setting from \"../util/models/Setting\";\nimport ErrorType from \"../util/errors/ErrorType\";\nimport User from \"../util/models/User\";\nimport {Theme} from \"../util/themes/themes\";\n\ntype Selector<T> = (state: State) => T;\n\nexport const stateSelector: Selector<State> = state => state;\nexport const userSelector: Selector<User|null> = state => state.user;\nexport const settingsSelector: Selector<Setting[]|null> = state => state.settings;\nexport const errorSelector: Selector<ErrorType|null> = state => state.error;\nexport const themeSelector: Selector<Theme> = state => state.theme;\n","import React from \"react\";\nimport Setting from \"../../util/models/Setting\";\n\ninterface IProps {\n    settings: Setting[],\n}\n\nexport default function SettingsApplyer({settings}: IProps) {\n    const css = `html {\n        ${\n            settings\n            .filter(s => s.cssProperty != null)\n            .map(s => `${s.cssProperty}: ${s.value};`)\n            .join('')\n        }\n    }`;\n\n    return (\n        <style>{css}</style>\n    );\n}\n","import React from \"react\";\nimport ErrorType from \"../../util/errors/ErrorType\";\n\ninterface IProps {\n    errorType: ErrorType,\n    message?: string,\n}\n\nexport default function Error({errorType, message}: IProps) {\n    const component = ((errorType: ErrorType) => {\n        switch (errorType) {\n            case ErrorType.INVALID_LICENSE:\n                return (<p>{message || 'Invalid License!'}</p>);\n            case ErrorType.SERVER_ERROR:\n                return (<p>{message || 'Unexpected Server error'}</p>);\n            case ErrorType.NOT_FOUND:\n                return (<p>{message || 'Not found'}</p>);\n        }\n        return <p>An error occurred</p>;\n    })(errorType);\n\n    return (<section>{component}</section>);\n}\n","import React, {useState} from \"react\";\n\ninterface IProps {\n    onSubmit: (email: string, password: string) => any,\n}\n\nexport default function LoginForm({onSubmit}: IProps) {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n\n    return (<div className=\"auth-form\">\n        <h2>E-Mail</h2>\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <h2>Passwort</h2>\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button onClick={() => onSubmit(email, password)}>Anmelden</button>\n    </div>);\n}\n","import User from \"./models/User\";\nimport RequestFactory from \"./api/RequestFactory\";\n\nexport default class UserServices {\n\n    public static async login(email: string, password: string): Promise<User|null> {\n        const res = await RequestFactory.doLogin(email, password);\n        return res.data.user;\n    }\n\n    public static async register(email: string, password: string): Promise<User|null> {\n        const res = await RequestFactory.register(email, password);\n        return res.data.user;\n    }\n\n    public static async logout(): Promise<boolean> {\n        const res = await RequestFactory.doLogout();\n        return (res.status === 200);\n    }\n\n}\n","import React from \"react\";\nimport './AuthPage.scss';\n\nconst AuthPage: React.FC = ({children}) => {\n    return (\n        <div className=\"auth-page\">\n            <div className=\"wrapper\">\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default AuthPage;\n","import React, {useEffect, useState} from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport User from \"../../../../util/models/User\";\nimport UserServices from \"../../../../util/UserServices\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {Link, useHistory} from 'react-router-dom';\nimport AuthPage from \"../AuthPage\";\n\nexport default function LoginPage() {\n    const [user, setUser] = useState<User|null>(null);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch({\n            type: ActionType.SET_USER,\n            user: user,\n        });\n    }, [user, dispatch]);\n\n    return (<AuthPage>\n        <h1>Anmelden</h1>\n        <LoginForm onSubmit={(email, password) => {\n            if (!email || !password) {\n                return;\n            }\n\n            UserServices.login(email, password).then(user => {\n                setUser(user);\n                if (user?.isAdmin) {\n                    history.push('/admin');\n                } else {\n                    history.push('/');\n                }\n            });\n        }} />\n        <Link to=\"/auth/register\">Neuen Account erstellen</Link>\n    </AuthPage>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport UserServices from \"../../../../util/UserServices\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {Redirect} from 'react-router-dom';\n\nexport default function LogoutPage() {\n    const [loading, setLoading] = useState(true);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        UserServices.logout().then(success => {\n            if (success) {\n                dispatch({\n                    type: ActionType.SET_USER,\n                    user: null,\n                });\n            }\n            setLoading(false);\n        });\n    }, [dispatch]);\n\n    if (loading) {\n        return <></>;\n    }\n    return <Redirect to=\"/\" />\n}\n","import React, {useState} from \"react\";\n\ninterface IProps {\n    onSubmit: (email: string, password: string) => any,\n}\n\nexport default function RegisterForm({onSubmit}: IProps) {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n\n    return (<div className=\"auth-form\">\n        <h2>E-Mail</h2>\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <h2>Passwort</h2>\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button onClick={() => onSubmit(email, password)}>Erstellen</button>\n    </div>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport RegisterForm from \"./RegisterForm\";\nimport User from \"../../../../util/models/User\";\nimport UserServices from \"../../../../util/UserServices\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {Link, useHistory} from 'react-router-dom';\nimport AuthPage from \"../AuthPage\";\n\nexport default function RegisterPage() {\n    const [user, setUser] = useState<User|null>(null);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch({\n            type: ActionType.SET_USER,\n            user: user,\n        });\n    }, [user, dispatch]);\n\n    return (<AuthPage>\n        <h1>Registrieren</h1>\n        <RegisterForm onSubmit={(email, password) => {\n            UserServices.register(email, password).then(user => {\n                if (email && password) {\n                    setUser(user);\n                    history.push('/');\n                }\n            });\n        }} />\n        <Link to=\"/auth/login\">Mit bestehendem Account anmelden</Link>\n    </AuthPage>);\n}\n","import React from 'react'\nimport {Route, Switch, useRouteMatch} from 'react-router-dom';\nimport LoginPage from \"../pages/auth/login/LoginPage\";\nimport Error from \"../error/Error\";\nimport ErrorType from \"../../util/errors/ErrorType\";\nimport LogoutPage from \"../pages/auth/logout/LogoutPage\";\nimport RegisterPage from \"../pages/auth/register/RegisterPage\";\nimport {IRouterProps} from \"./Routes\";\n\nconst AuthRouter = (props: IRouterProps) => {\n    const {path, } = useRouteMatch();\n\n    return (<Switch>\n        <Route path={`${path}/login`}>\n            <LoginPage/>\n        </Route>\n        <Route path={`${path}/register`}>\n            <RegisterPage/>\n        </Route>\n        <Route path={`${path}/logout`}>\n            <LogoutPage/>\n        </Route>\n        <Route path={`${path}/*`}>\n            <Error errorType={ErrorType.NOT_FOUND}/>\n        </Route>\n    </Switch>);\n};\n\nexport default AuthRouter;\n","import React from \"react\";\n\nexport interface IBladeProps {\n    x: number,\n    width: number,\n    height: number,\n}\n\nexport default function Blade({x, width, height}: IBladeProps) {\n    const points = [\n        {x: x + (width / 2), y: 0},\n        {x: x, y: height},\n        {x: x + width, y: height},\n    ];\n\n    const animationDuration = (Math.floor(Math.random() * 3000 - 500)) + 500;\n    const darkness = Math.floor(Math.random() * (101)) + 15;\n    return <polygon\n        className=\"blade\"\n        points={points.map(p => ({...p, y: p.y + (120 - height)})).map(p => `${p.x} ${p.y}`).join(', ')}\n        fill={`rgb(${darkness}, 140, ${darkness})`}\n        style={{\n            animationDuration: `${animationDuration}ms, 2s`,\n            animationDelay: `0s, ${animationDuration}ms`\n        }}\n    />;\n}\n","import React from \"react\";\nimport Blade, {IBladeProps} from \"./Blade\";\n\nexport default function Grass() {\n    const props: IBladeProps[] = [];\n    for (let i = 0; i < (window.innerWidth / 8); i++) {\n        const height = Math.floor(Math.random() * (101)) + 60;\n        props.push({\n            x: i * 8,\n            width: Math.round(height / 12),\n            height: height,\n        });\n    }\n\n    return (\n<g className=\"grass\">\n    {props.map(p => <Blade {...p} key={p.x} />)}\n</g>);\n}\n","import React from \"react\";\n\nexport interface ISunshineProps {\n    p1: {x: number, y: number},\n    p2: {x: number, y: number},\n    filter: string,\n}\n\nconst SunShine: React.FC<ISunshineProps> = ({\n    p1,\n    p2,\n    filter,\n    ...rest\n}: ISunshineProps) => {\n    return <line\n        className=\"sun-shine\"\n        filter={filter}\n        {...rest}\n        x1={p1.x}\n        y1={p1.y}\n        x2={p2.x}\n        y2={p2.y}\n    />;\n};\n\nexport default SunShine;\n","import React, {useState} from \"react\";\nimport SunShine, {ISunshineProps} from \"./SunShine\";\n\ninterface IProps {\n    radius: number,\n    shines: number,\n    shineLengthLong: number,\n    shineLengthShort: number\n}\n\nexport default function Sun({radius, shines, shineLengthLong, shineLengthShort}: IProps) {\n    const [numberOfShines, setNumberOfShines] = useState(0);\n    const [filter, setFilter] = useState('');\n\n    const cx = -140;\n    const cy = 300;\n\n    const slice = 2 * Math.PI / numberOfShines;\n    const shineProps: ISunshineProps[] = [];\n    for (let i = 0; i < numberOfShines; i++) {\n        const r = radius + (i % 2 === 0 ? shineLengthLong : shineLengthShort);\n        const angle = slice * i;\n        shineProps.push({\n            p1: {\n                x: cx + (radius + 10) * Math.cos(angle),\n                y: cy + (radius + 10) * Math.sin(angle),\n            },\n            p2: {\n                x: cx + r * Math.cos(angle),\n                y: cy + r * Math.sin(angle),\n            },\n            filter: '',\n        });\n    }\n\n    return (\n    <g className=\"sun\" onAnimationEnd={() => {\n        setNumberOfShines(shines);\n        setFilter('url(#softGlow)');\n    }}>\n        <defs>\n            <filter id=\"softGlow\" height=\"300%\" width=\"300%\" x=\"-75%\" y=\"-75%\">\n                <feMorphology operator=\"dilate\" radius=\"4\" in=\"SourceAlpha\" result=\"thicken\" />\n                <feGaussianBlur in=\"thicken\" stdDeviation=\"40\" result=\"blurred\" />\n                <feFlood floodColor=\"#f3f35c\" result=\"glowColor\" />\n                <feComposite in=\"glowColor\" in2=\"blurred\" operator=\"in\" result=\"softGlow_colored\" />\n                <feMerge>\n                    <feMergeNode in=\"softGlow_colored\"/>\n                    <feMergeNode in=\"SourceGraphic\"/>\n                </feMerge>\n            </filter>\n        </defs>\n        <circle cx={cx} cy={cy} r={radius} filter={filter} />\n        {shineProps.map((l, i) => (\n            <SunShine\n                key={`${l.p1.x},${l.p1.y}`}\n                {...l}\n            />\n        ))}\n    </g>);\n}\n","import React, {useState} from \"react\";\n\ninterface IProps {\n    onClick: () => any,\n    text: string,\n    pos: {x: number, y: number,}\n    scale: number,\n    animationDelay: number,\n}\n\nconst Cloud: React.FC<IProps> = ({onClick, text, pos, scale, animationDelay}) => {\n    const [s, setScale] = useState(scale);\n    const baseAnimationDuration = calculateRandomAnimationDuration();\n\n    const colorShiftDuration = Math.floor(Math.random() * (18000 - 4000 + 1)) + 4000;\n\n    return <g className=\"cloud\" style={{animationDelay: `${animationDelay}ms, 0ms`}}>\n        <g\n            transform={`translate(${pos.x}, ${pos.y})`}\n            onClick={onClick}\n            onMouseEnter={() => setScale(scale)}\n            onMouseLeave={() => setScale(scale)}\n        >\n            <circle cx={0} cy={0} r={30 * s} className=\"base\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }} />\n            <circle cx={120 * s} cy={0} r={30 * s} className=\"base\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }} />\n            <rect width={120 * s} height={60 * s} x={0} y={-30 * s} className=\"base\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }} />\n            <circle cx={80 * s} cy={-30 * s} r={50 * s} className=\"big\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }} />\n            <circle cx={25 * s} cy={-30 * s} r={30 * s} className=\"small\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }} />\n            <text x={60 * s} y={-5 * s} dominantBaseline=\"middle\" textAnchor=\"middle\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }}>{text}</text>\n        </g>\n    </g>\n};\n\nexport default Cloud;\n\nconst animationDurationString = (duration: number, d2: number) => `${duration}ms, ${d2}ms`;\n\nfunction calculateRandomAnimationDuration(): number {\n    return getRandomInt(2000, 5000);\n}\n\nfunction getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","import React from \"react\";\nimport './SvgScene.scss';\nimport Grass from \"./grass/Grass\";\nimport Sun from \"./sun/Sun\";\nimport Cloud from \"./cloud/Cloud\";\nimport {useHistory} from \"react-router-dom\";\n\ninterface IProps {\n    links: {target: string, title: string}[]\n}\nexport default function SvgScene({links}: IProps) {\n    const history = useHistory();\n    const scale = calculateScaleByWindowSize();\n\n    return (<div className=\"svg-scene\">\n        <svg>\n            <Sun radius={80} shineLengthLong={70} shineLengthShort={50} shines={16} />\n            <Grass/>\n            {links.map((l, i) => (<Cloud\n                key={l.target}\n                text={l.title}\n                onClick={() => history.push(l.target)}\n                pos={{x: calculateCloudXPos(), y: (i + 2) * 140 * scale}}\n                scale={scale}\n                animationDelay={3000 + (600 * i)}\n            />))}\n        </svg>\n        <div className=\"ground\" />\n    </div>);\n}\n\nfunction calculateCloudXPos(): number {\n    let min = (window.innerWidth <= 600 ? 120 : 40);\n    let max = window.innerWidth - 160;\n\n    if (window.innerWidth > 1080) {\n        min = ((window.innerWidth - 1000) / 2);\n        max = window.innerWidth - ((window.innerWidth - 1000) / 2);\n    }\n\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction calculateScaleByWindowSize(): number {\n    if (window.innerHeight < 600) {\n        return 0.7;\n    }\n    if (window.innerHeight < 700) {\n        return 0.75;\n    }\n    if (window.innerHeight < 800) {\n        return 0.85;\n    }\n    return 1;\n}\n","import React, {useEffect} from \"react\";\nimport './HomePage.scss';\nimport SvgScene from \"./svg_scene/SvgScene\";\n\nexport default function HomePage() {\n    useEffect(() => {\n        document.body.classList.add('home');\n\n        return () => document.body.classList.remove('home')\n    }, []);\n\n    return (<div className=\"home-page\">\n        <SvgScene links={[\n            {target: '/-/about', title: 'Über uns'},\n            {target: '/-/team', title: 'Team'},\n            {target: '/-/whats-important', title: 'Unser Motto'},\n            {target: '/-/impressum', title: 'Impressum'},\n        ]}/>\n        <h1>Kinderstube<span>Sethweg e.V.</span></h1>\n    </div>);\n}\n","export type Theme = {\n    nav: NavTheme,\n    footer: FooterTheme,\n    sections: SectionsTheme,\n};\n\ntype NavTheme = {\n    bg: string,\n    font: string,\n}\n\ntype FooterTheme = {\n    bg: string,\n    font: string,\n}\n\ntype SectionsTheme = {\n    colors: {bg: string, font: string,}[],\n}\n\nexport const defaultTheme: Theme = {\n    nav: {\n        bg: '#748076',\n        font: '#ffffff',\n    },\n    footer: {\n        bg: '#748076',\n        font: '#ffffff',\n    },\n    sections: {\n        colors: [\n            {bg: '#748076', font: '#ffffff'},\n            {bg: '#F7F7F7', font: '#222222'},\n            {bg: '#D2C2B1', font: '#222222'},\n            {bg: '#E9E3DD', font: '#222222'},\n            {bg: '#F3EDE2', font: '#222222'},\n        ]\n    }\n};\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './DashboardPage.scss';\nimport {defaultTheme} from \"../../../../util/themes/themes\";\n\nexport default function DashboardPage() {\n    const links = [\n        {\n            target: '/admin/team',\n            title: 'Das Team',\n        },\n        {\n            target: '/admin/about',\n            title: 'Über uns',\n        },\n        {\n            target: '/admin/whats-important',\n            title: 'Was uns wichtig ist',\n        },\n        {\n            target: '/admin/faq',\n            title: 'Häufig gestellte Fragen',\n        },\n        {\n            target: '/admin/kontakt',\n            title: 'Kontakt',\n        },\n        {\n            target: '/admin/impressum',\n            title: 'Impressum',\n        },\n        {\n            target: '/admin/colors',\n            title: 'Farben',\n        },\n        {\n            target: '/admin/statistics',\n            title: 'Statistiken',\n        },\n        {\n            target: '/auth/logout',\n            title: 'Abmelden',\n        },\n    ];\n\n    return (<div className=\"dashboard-page\">\n        <ul>\n            {\n                links.map(l => <Link to={l.target} key={l.target}>\n                    <li\n                        style={{\n                            backgroundColor: defaultTheme.nav.bg,\n                            color: defaultTheme.nav.font,\n                        }}\n                    >{l.title}</li>\n                </Link>)\n            }\n        </ul>\n    </div>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport Loader from \"react-spinners/PropagateLoader\";\nimport './LoadingSpinner.scss';\n\ninterface IProps {\n    color: string,\n    loading: boolean,\n    delayMs?: number,\n    fullScreen?: boolean,\n}\n\nexport default function LoadingSpinner({color, loading, delayMs, fullScreen}: IProps) {\n    const [ isLoading, setIsLoading ] = useState(loading);\n    useEffect(() => {\n        if (!loading) {\n            const timeOut = setTimeout(() => setIsLoading(false), delayMs || 0);\n\n            return () => clearTimeout(timeOut);\n        }\n    }, [loading, delayMs]);\n\n    if (fullScreen === undefined) {\n        fullScreen = false;\n    }\n\n    return (<div className={`loading ${fullScreen && ' loading-fs'}`} data-active={(isLoading ? 'yes' : 'no')}>\n        <Loader\n            color={color}\n            loading={true}\n            size={25}\n        />\n    </div>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport Statistics from \"../../../../util/models/Statistics\";\nimport RequestFactory from \"../../../../util/api/RequestFactory\";\nimport LoadingSpinner from \"../../../placeholder/loading/LoadingSpinner\";\nimport './StatisticsPage.scss';\n\nexport default function StatisticsPage() {\n    const [statistics, setStatistics] = useState<Statistics|null>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        RequestFactory.getStatistics().then(res => {\n            if (res.status === 200) {\n                setStatistics(res.data.statistics);\n            }\n            setLoading(false);\n        });\n    }, [setStatistics]);\n\n    return (<>\n        <LoadingSpinner color=\"#0a0\" loading={loading} />\n        {statistics != null && <div className=\"statistics-page\">\n            <h1><span>{statistics?.totalRequests}</span> Aufrufe gesamt</h1>\n            <table>\n                <thead>\n                    <tr><th>Url</th><th>Aufrufe</th></tr>\n                </thead>\n                <tbody>\n                    {\n                        Object.keys(statistics?.requestsByPath).map(p => <tr key={p}>\n                            <td>{p}</td><td>{statistics?.requestsByPath[p]}</td>\n                        </tr>)\n                    }\n                </tbody>\n            </table>\n        </div>}\n    </>);\n}\n","import {useEffect, useState} from \"react\";\nimport Page from \"../util/models/Page\";\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../util/errors/ErrorType\";\nimport RequestFactory from \"../util/api/RequestFactory\";\n\nexport default function useMarkdownPage(slug: string) {\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState<Page|null>(null);\n    const [error, setError] = useState<ErrorType|null>(null);\n\n    useEffect(() => {\n        RequestFactory.getPage(slug).then(res => {\n            setLoading(false);\n            if (res.status === 200) {\n                setPage(res.data.page);\n            } else {\n                setError(errorTypeByHttpStatusCode(res.status));\n            }\n        });\n    }, [slug]);\n\n    return {page, loading, error};\n}\n","import React, { useRef } from 'react'\nimport Markdown from 'markdown-to-jsx'\nimport './Markdown.scss';\n\ninterface Props {\n    md: string;\n}\n\nconst MarkDownToJsx = ({md, }: Props) => {\n    const rootRef = useRef() as React.MutableRefObject<HTMLDivElement>;\n\n    return (\n        <div className=\"markdown-to-jsx\" ref={rootRef}>\n            <Markdown>{md}</Markdown>\n        </div>);\n};\n\nexport default MarkDownToJsx\n","import React, {useEffect, useState} from \"react\";\nimport useMarkdownPage from \"../../../hooks/useMarkdownPage\";\nimport LoadingSpinner from \"../../placeholder/loading/LoadingSpinner\";\nimport Error from \"../../error/Error\";\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../../../util/errors/ErrorType\";\nimport MarkDownToJsx from \"../MarkDownToJsx\";\nimport './EditMarkdownPage.scss';\nimport RequestFactory from \"../../../util/api/RequestFactory\";\n\ninterface IProps {\n    slug: string,\n    title?: string,\n    groupId?: string,\n    onSave: (error: ErrorType|null) => any,\n}\n\nexport default function EditMarkdownPage({slug, onSave, title: _title, groupId}: IProps) {\n    const {page, error, loading} = useMarkdownPage(slug);\n    const [md, setMd] = useState('');\n    const [title, setTitle] = useState(_title || '');\n\n    useEffect(() => {\n        if (page != null) {\n            setMd(page?.markdown?.content || '');\n            setTitle(page?.title || '');\n        }\n    }, [page]);\n\n    async function create(): Promise<ErrorType|null> {\n        const res = await RequestFactory.createPage({\n            p: slug,\n            content: md,\n            title: title,\n            group: groupId || '',\n        });\n        return errorTypeByHttpStatusCode(res.status);\n    }\n\n    async function edit(): Promise<ErrorType|null> {\n        const res = await RequestFactory.editPage({\n            p: slug,\n            content: md,\n            title: title,\n            group: groupId || '',\n        });\n        return errorTypeByHttpStatusCode(res.status);\n    }\n\n    return (<div className=\"edit-markdown-page\">\n        <LoadingSpinner color=\"#0a0\" loading={loading} />\n        {error && error !== ErrorType.NOT_FOUND && <Error errorType={error} />}\n        {!loading && (<>\n            <div className=\"left\">\n                {error === ErrorType.NOT_FOUND && !_title && (\n                    <input\n                        value={title}\n                        onChange={e => setTitle(e.target.value)}\n                        placeholder=\"Titel\"\n                    />)\n                }\n                <textarea\n                    value={md}\n                    onChange={(e) => setMd(e.target.value)}\n                    placeholder=\"Markdown\"\n                />\n            </div>\n            <MarkDownToJsx md={md}/>\n            <button\n                className=\"save-btn\"\n                onClick={() => {\n                    if (error === ErrorType.NOT_FOUND) {\n                        create().then(onSave);\n                    } else {\n                        edit().then(onSave);\n                    }\n                }}\n                disabled={slug === '' || md === '' || title === ''}\n            >Speichern</button>\n        </>)}\n    </div>);\n}\n","import {useEffect, useState} from \"react\";\nimport Page from \"../util/models/Page\";\nimport RequestFactory from \"../util/api/RequestFactory\";\nimport ApiResponse from \"../util/api/ApiResponse\";\nimport GetPageResponse from \"../util/api/responses/pages/GetPageResponse\";\n\nexport default function useMarkdownPageGroup(slug: string, allowMultiRequests: boolean = false) {\n    const [pages, setPages] = useState<(Page|null)[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        if (allowMultiRequests) {\n            RequestFactory.getPageGroup(slug)\n            .then(res => Promise.all(res.data.group.pages.map(slug => RequestFactory.getPage(slug))))\n            .then((res) => {\n                setPages(res.map(r => r.data.page).filter(p => p != null));\n                setIsLoading(false);\n            });\n        } else {\n            RequestFactory.getPageGroup(slug)\n            .then(async res => {\n                const responses: ApiResponse<GetPageResponse>[] = [];\n                for (const slug of res.data.group.pages) {\n                    responses.push(await RequestFactory.getPage(slug));\n                }\n                setPages(responses.map(r => r.data.page).filter(p => p != null));\n                setIsLoading(false);\n            })\n        }\n    }, [slug, allowMultiRequests]);\n\n    return {\n        pages,\n        isLoading,\n    };\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport useMarkdownPageGroup from \"../../../../hooks/useMarkdownPageGroup\";\nimport LoadingSpinner from \"../../../placeholder/loading/LoadingSpinner\";\nimport RequestFactory from \"../../../../util/api/RequestFactory\";\nimport './EditSubPagePartsPage.scss';\nimport {useSelector} from \"react-redux\";\nimport State from \"../../../../util/models/State\";\n\ninterface IProps {\n    slug: string,\n}\n\nexport default function EditSubPagePartsPage({slug}: IProps) {\n    const allowMultiRequests = useSelector((state: State) => state.allowMultiRequests);\n    const {pages, isLoading} = useMarkdownPageGroup(slug, allowMultiRequests);\n\n    return (<div className=\"about-admin-page\">\n        <LoadingSpinner color=\"#0a0\" loading={isLoading} />\n        <Link to={`/-/${slug}`}>Zur Seite</Link>\n        <h2>Textparts:</h2>\n        <table>\n            { !isLoading && (<tbody>\n                {pages.length > 0\n                    ? pages.map(p => p != null && (\n                        <tr key={p?.slug}>\n                            <td>{p?.title}</td>\n                            <td><Link to={`/admin/${slug}/edit/${p?.slug}`}>Bearbeiten</Link></td>\n                            <td><button\n                                    onClick={() => RequestFactory.deletePage(p?.slug).then(() => window.location.reload())}\n                                >Löschen</button>\n                            </td>\n                        </tr>))\n                    : <tr><td>Es gibt noch keine Parts</td></tr>\n                }\n            </tbody>)}\n        </table>\n        <Link to={`/admin/${slug}/new`} className=\"create-link\">Neu</Link>\n    </div>);\n}\n","import React from \"react\";\nimport EditMarkdownPage from \"../../../md_page/edit/EditMarkdownPage\";\nimport {useHistory, useParams} from \"react-router-dom\";\n\ninterface IProps {\n    group: string,\n}\n\nexport default function EditPagePartPage({group}: IProps) {\n    const history = useHistory();\n    const { slug } = useParams();\n\n    if (!slug) {\n        return <></>\n    }\n\n    return <EditMarkdownPage slug={slug} groupId={group} onSave={() => history.push(`/admin/${group}`)} />\n}\n","import React from 'react'\nimport {Route, Switch, useHistory, useRouteMatch} from 'react-router-dom';\nimport {IRouterProps} from \"../Routes\";\nimport EditSubPagePartsPage from \"../../pages/admin/page_parts/EditSubPagePartsPage\";\nimport EditPagePartPage from \"../../pages/admin/page_parts/EditPagePartPage\";\nimport EditMarkdownPage from \"../../md_page/edit/EditMarkdownPage\";\n\ninterface IProps extends IRouterProps {\n    slug: string,\n}\n\nconst AdminSubPagePartsRouter = ({slug}: IProps) => {\n    const {path, } = useRouteMatch();\n    const history = useHistory();\n\n    return (<Switch>\n            <Route exact path={`${path}/new`}>\n                <EditMarkdownPage\n                    slug={`${slug}_${Date.now()}`}\n                    groupId={slug}\n                    onSave={() => history.push(`/admin/${slug}`)}\n                />\n            </Route>\n            <Route exact path={`${path}/edit/:slug`}>\n                <EditPagePartPage group={slug} />\n            </Route>\n            <Route exact path={`${path}/`}>\n                <EditSubPagePartsPage slug={slug} />\n            </Route>\n    </Switch>);\n};\n\nexport default AdminSubPagePartsRouter;\n","import {defaultTheme, Theme} from \"../util/themes/themes\";\nimport RequestFactory from \"../util/api/RequestFactory\";\nimport {useEffect, useState} from \"react\";\n\nexport default function useColorTheme (slug: string): {theme: Theme, isLoading: boolean} {\n    const [theme, setTheme] = useState(defaultTheme);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        RequestFactory.getJsonFromStore(`color-theme-${slug}`).then(res => {\n            if (res.status === 200 && res.data.json) {\n                try {\n                    const object = JSON.parse(res.data.json);\n                    setTheme(object);\n                } catch(e) {}\n            }\n            setLoading(false);\n        });\n    }, [slug]);\n\n    return {theme, isLoading: loading};\n}\n","import React, {useEffect, useState} from \"react\";\nimport LoadingSpinner from \"../../../../placeholder/loading/LoadingSpinner\";\nimport useColorTheme from \"../../../../../hooks/useColorTheme\";\nimport \"./ColorThemeInputs.scss\";\nimport RequestFactory from \"../../../../../util/api/RequestFactory\";\nimport {defaultTheme} from \"../../../../../util/themes/themes\";\n\ninterface IProps {\n    slug: string,\n    title: string,\n}\n\nexport default function ColorThemeInputs({slug, title}: IProps) {\n    const {theme: oldTheme, isLoading} = useColorTheme(slug);\n    const [theme, setTheme] = useState(oldTheme);\n    const [sections, setSections] = useState(oldTheme.sections.colors);\n\n    useEffect(() => {\n        setTheme(oldTheme);\n        setSections(oldTheme.sections.colors);\n    }, [oldTheme]);\n\n    return (<div className=\"color-theme-inputs\">\n        <LoadingSpinner color=\"#0a0\" loading={isLoading} />\n        <h2>{title}</h2>\n        <div className=\"row\">\n            <p>Navigation Hintergrund</p>\n            <input\n                type=\"color\"\n                value={theme.nav.bg}\n                onChange={e => setTheme({...theme, nav: {...theme.nav, bg: e.target.value}})}\n            />\n            <button\n                onClick={e => setTheme({...theme, nav: {...theme.nav, bg: defaultTheme.nav.bg}})}\n            >Zurücksetzen</button>\n        </div>\n        <div className=\"row\">\n            <p>Navigation Schrift</p>\n            <input\n                type=\"color\"\n                value={theme.nav.font}\n                onChange={e => setTheme({...theme, nav: {...theme.nav, font: e.target.value}})}\n            />\n            <button\n                onClick={e => setTheme({...theme, nav: {...theme.nav, font: defaultTheme.nav.font}})}\n            >Zurücksetzen</button>\n        </div>\n        <div className=\"row\">\n            <p>Footer Hintergrund</p>\n            <input\n                type=\"color\"\n                value={theme.footer.bg}\n                onChange={e => setTheme({...theme, footer: {...theme.footer, bg: e.target.value}})}\n            />\n            <button\n                onClick={e => setTheme({...theme, footer: {...theme.footer, bg: defaultTheme.footer.bg}})}\n            >Zurücksetzen</button>\n        </div>\n        <div className=\"row\">\n            <p>Footer Schrift</p>\n            <input\n                type=\"color\"\n                value={theme.footer.font}\n                onChange={e => setTheme({...theme, footer: {...theme.footer, font: e.target.value}})}\n            />\n            <button\n                onClick={e => setTheme({...theme, footer: {...theme.footer, font: defaultTheme.footer.font}})}\n            >Zurücksetzen</button>\n        </div>\n        {sections.map((s, i) => <div className=\"row section\" key={`section-row-${i}`}>\n            <p>Abschnitt {i + 1}</p>\n            <input\n                type=\"color\"\n                title=\"Hintergrund\"\n                value={s.bg}\n                onChange={e => {\n                    const newSections = [...sections];\n                    newSections[i].bg = e.target.value;\n                    setSections(newSections);\n                }}\n            />\n            <input\n                type=\"color\"\n                value={s.font}\n                title=\"Schrift\"\n                onChange={e => {\n                    const newSections = [...sections];\n                    newSections[i].font = e.target.value;\n                    setSections(newSections);\n                }}\n            />\n            <button\n                onClick={() => {\n                    const newSections = [...sections];\n                    newSections.splice(i, 1);\n                    setSections(newSections);\n                }}\n            >Entfernen</button>\n        </div>)}\n        <button\n            onClick={() => setSections([...sections, {bg: '#ffffff', font: '#000000'}])}\n        >Farbe hinzufügen</button>\n        <button\n            onClick={() => {\n                const _theme = {...theme};\n                _theme.sections.colors = sections;\n                RequestFactory.saveJsonInStore(`color-theme-${slug}`, JSON.stringify(_theme)).then(res => {\n                    if (res.status === 200) {\n                        window.location.reload();\n                    }\n                });\n            }}\n        >Speichern</button>\n    </div>);\n}\n","import React from \"react\";\nimport ColorThemeInputs from \"./inputs/ColorThemeInputs\";\n\nexport default function ColorsPage() {\n\n    return (<>\n        <ColorThemeInputs slug=\"about\" title=\"Über uns\" />\n        <ColorThemeInputs slug=\"team\" title=\"Das Team\" />\n        <ColorThemeInputs slug=\"whats-important\" title=\"Was uns wichtig ist\" />\n        <ColorThemeInputs slug=\"faq\" title=\"Häufig gestellte Fragen\" />\n    </>);\n}\n","import React from 'react'\nimport {Redirect, Route, Switch, useRouteMatch, useHistory} from 'react-router-dom';\nimport DashboardPage from \"../../pages/admin/dashboard/DashboardPage\";\nimport {IRouterProps} from \"../Routes\";\nimport Error from \"../../error/Error\";\nimport ErrorType from \"../../../util/errors/ErrorType\";\nimport StatisticsPage from \"../../pages/admin/statistics/StatisticsPage\";\nimport EditMarkdownPage from \"../../md_page/edit/EditMarkdownPage\";\nimport AdminSubPagePartsRouter from \"./AdminSubPagePartsRouter\";\nimport ColorsPage from \"../../pages/admin/colors/ColorsPage\";\n\nconst AdminRouter = (props: IRouterProps) => {\n    const {path, } = useRouteMatch();\n    const history = useHistory();\n\n    if (props.user == null || !props.user.isAdmin) {\n        return <Redirect to=\"/auth/logout\" />\n    }\n\n    return (<Switch>\n        <Route exact path={`${path}/`}>\n            <DashboardPage />\n        </Route>\n        <Route path={`${path}/about`}>\n            <AdminSubPagePartsRouter slug=\"about\" {...props} />\n        </Route>\n        <Route path={`${path}/team`}>\n            <AdminSubPagePartsRouter slug=\"team\" {...props} />\n        </Route>\n        <Route path={`${path}/whats-important`}>\n            <AdminSubPagePartsRouter slug=\"whats-important\" {...props} />\n        </Route>\n        <Route path={`${path}/faq`}>\n            <AdminSubPagePartsRouter slug=\"faq\" {...props} />\n        </Route>\n        <Route exact path={`${path}/kontakt`}>\n            <EditMarkdownPage slug=\"kontakt\" title=\"Kontakt\" onSave={(error => history.push('/-/kontakt'))} />\n        </Route>\n        <Route exact path={`${path}/impressum`}>\n            <EditMarkdownPage slug=\"impressum\" title=\"Impressum\" onSave={(error => history.push('/-/impressum'))} />\n        </Route>\n        <Route exact path={`${path}/colors`}>\n            <ColorsPage />\n        </Route>\n        <Route exact path={`${path}/statistics`}>\n            <StatisticsPage />\n        </Route>\n        <Route path=\"*\">\n            <Error errorType={ErrorType.NOT_FOUND}/>\n        </Route>\n    </Switch>);\n};\n\nexport default AdminRouter;\n","import React, {useState} from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport {Theme} from \"../../../../util/themes/themes\";\nimport './Nav.scss';\n\ninterface IProps {\n    theme: Theme,\n}\n\nconst Nav: React.FC<IProps> = ({theme}) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return <nav\n        className=\"nav\"\n        style={{\n            backgroundColor: theme.nav.bg,\n            color: theme.nav.font,\n        }}\n        data-visible={isOpen ? 'yes' : 'no'}\n    >\n        <h1>\n            <button className=\"open-sidebar-btn\" onClick={() => setIsOpen(!isOpen)}><span /></button>\n            <Link to=\"/\">Kinderstube Sethweg e.V.</Link>\n        </h1>\n        <ul>\n            <button className=\"close-btn\" onClick={() => setIsOpen(!isOpen)}>\n            </button>\n            {[\n                {target: '/-/about', title: 'Über uns'},\n                {target: '/-/team', title: 'Das Team'},\n                {target: '/-/whats-important', title: 'Was uns wichtig ist'},\n                {target: '/-/faq', title: 'Häufig gestellte Fragen'},\n                {target: '/-/kontakt', title: 'Kontakt'},\n                {target: '/-/impressum', title: 'Impressum'},\n            ].map(l => <li key={l.target}>\n                <NavLink\n                    to={l.target}\n                    activeClassName='active'\n                    onClick={() => setIsOpen(false)}\n                >{l.title}</NavLink>\n            </li>)}\n        </ul>\n    </nav>\n};\n\nexport default Nav;\n","import React from \"react\";\nimport './Page.scss';\nimport Nav from \"./nav/Nav\";\nimport {useSelector} from \"react-redux\";\nimport {themeSelector} from \"../../../selectors/selectors\";\nimport {IRouterProps} from \"../../routes/Routes\";\n\nconst Page: React.FC<IRouterProps> = ({children, user}) => {\n    const theme = useSelector(themeSelector);\n\n    return <div className=\"page\">\n        <Nav theme={theme} />\n        <div className=\"content\">\n            <main>\n                {children}\n            </main>\n        </div>\n    </div>\n};\n\nexport default Page;\n","import React from \"react\";\nimport {Theme} from \"../../../../util/themes/themes\";\nimport {Link} from \"react-router-dom\";\nimport User from \"../../../../util/models/User\";\nimport './Footer.scss';\n\ninterface IProps {\n    theme: Theme,\n    user: User|null,\n}\n\nconst Footer: React.FC<IProps> = ({theme, user}) => {\n    return <footer\n        className=\"footer\"\n        style={{\n            backgroundColor: theme.footer.bg,\n            color: theme.footer.font,\n        }}\n    >\n        <p className=\"copyright\">Copyright {(new Date()).getFullYear()}: Kinderstube Sethweg e.V.</p>\n        <div className=\"user-actions\">\n            {user == null\n                ? <Link to=\"/auth/login\">Login</Link>\n                : <>\n                    <p>{user?.email}</p>\n                    <div><Link to=\"/auth/logout\">Logout</Link></div>\n                    {user?.isAdmin && <div><Link to=\"/admin\">Dashboard</Link></div>}\n                </>}\n        </div>\n        <div className=\"jasper-lichte\">\n            Developed with Love by <a href=\"http://jasper.lichte.info\">Jasper Lichte</a>\n        </div>\n    </footer>\n};\n\nexport default Footer;\n","import React, {useEffect} from \"react\";\nimport { motion } from \"framer-motion\";\nimport './PageContent.scss';\nimport {defaultTheme, Theme} from \"../../../../util/themes/themes\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {IRouterProps} from \"../../../routes/Routes\";\nimport Footer from \"../footer/Footer\";\n\nconst pageVariants = {\n    initial: {\n        opacity: 0,\n        x: '-100vw',\n        scale: 0.8,\n    },\n    in: {\n        opacity: 1,\n        x: 0,\n        scale: 1,\n    },\n    out: {\n        opacity: 0,\n        x: '100vw',\n        scale: 1.2,\n    },\n};\n\nconst pageTransition = {\n    duration: 1,\n    type: 'tween',\n    ease: 'anticipate',\n};\n\ninterface IProps extends IRouterProps {\n    theme?: Theme,\n}\n\nconst PageContent: React.FC<IProps> = ({children, theme, user}) => {\n    const dispatch = useDispatch();\n    if (!theme) {\n        theme = defaultTheme;\n    }\n\n    useEffect(() => {\n        dispatch({\n            type: ActionType.SET_THEME,\n            theme: theme,\n        });\n    }, [theme, dispatch]);\n\n    return <motion.div\n        className=\"page-content\"\n        initial=\"initial\"\n        animate=\"in\"\n        exit=\"out\"\n        variants={pageVariants}\n        transition={pageTransition}\n    >\n        {children}\n        <Footer theme={theme} user={user}/>\n    </motion.div>\n};\n\nexport default PageContent;\n","import React from \"react\";\nimport PageContent from \"../../page/content/PageContent\";\nimport {IRouterProps} from \"../../../routes/Routes\";\nimport MarkDownToJsx from \"../../../md_page/MarkDownToJsx\";\nimport useMarkdownPageGroup from \"../../../../hooks/useMarkdownPageGroup\";\nimport LoadingSpinner from \"../../../placeholder/loading/LoadingSpinner\";\nimport './PartsPage.scss';\nimport {useSelector} from \"react-redux\";\nimport State from \"../../../../util/models/State\";\nimport useColorTheme from \"../../../../hooks/useColorTheme\";\n\ninterface IProps extends IRouterProps {\n    slug: string,\n}\n\nexport default function PartsPage({slug, ...props}: IProps) {\n    const allowMultiRequests = useSelector((state: State) => state.allowMultiRequests);\n    const {pages, isLoading: pagesAreLoading} = useMarkdownPageGroup(slug, allowMultiRequests);\n    const {theme, isLoading: themeIsLoading} = useColorTheme(slug);\n\n    return (\n        <PageContent theme={theme} {...props}>\n            <div className=\"parts-page\">\n                <LoadingSpinner color={theme.nav.bg} loading={pagesAreLoading || themeIsLoading} fullScreen={true} />\n                {pages.map((p, i) => {\n                    let _theme = theme.sections.colors[i % theme.sections.colors.length];\n                    if (!_theme) {\n                        _theme = {bg: '#ffffff', font: '#222222'};\n                    }\n                    return (p != null && (\n                        <section\n                            key={p?.slug}\n                            style={{\n                                backgroundColor: _theme.bg,\n                                color: _theme.font,\n                                zIndex: 999 - i,\n                            }}\n                        >\n                            <MarkDownToJsx md={p.markdown?.content || ''} />\n                        </section>)\n                    )\n                })}\n            </div>\n        </PageContent>\n    );\n}\n","import React, {useEffect} from \"react\";\nimport MarkDownToJsx from \"./MarkDownToJsx\";\nimport LoadingSpinner from \"../placeholder/loading/LoadingSpinner\";\nimport Error from \"../error/Error\";\nimport useMarkdownPage from \"../../hooks/useMarkdownPage\";\n\ninterface IProps {\n    slug: string,\n}\n\nexport default function MarkdownPage({slug}: IProps) {\n    const {page, loading, error} = useMarkdownPage(slug);\n\n    useEffect(() => {\n        if (page != null) {\n            document.title = page.title;\n        }\n    }, [page]);\n\n    return (\n    <section>\n        <LoadingSpinner\n            loading={loading}\n            color={'#0a0'}\n            delayMs={500}\n            fullScreen={false}\n        />\n        { page == null\n            ? (error == null ? '' : <Error errorType={error}/>)\n            : <MarkDownToJsx md={page?.markdown?.content || ''}/>\n        }\n    </section>);\n}\n","import React from 'react'\nimport {Route, Switch, useLocation, useRouteMatch} from 'react-router-dom';\nimport {AnimatePresence} from \"framer-motion\";\nimport Error from \"../error/Error\";\nimport ErrorType from \"../../util/errors/ErrorType\";\nimport Page from \"../pages/page/Page\";\nimport {IRouterProps} from \"./Routes\";\nimport PageContent from \"../pages/page/content/PageContent\";\nimport PartsPage from \"../pages/page/parts_page/PartsPage\";\nimport MarkdownPage from \"../md_page/MarkdownPage\";\n\nconst PagesRouter = (props: IRouterProps) => {\n    const {path, } = useRouteMatch();\n    const location = useLocation();\n\n    return (<Page {...props}>\n        <AnimatePresence exitBeforeEnter={false}>\n            <Switch location={location} key={location.pathname}>\n                <Route path={`${path}/about`}>\n                    <PartsPage slug=\"about\" {...props} />\n                </Route>\n                <Route path={`${path}/team`}>\n                    <PartsPage slug=\"team\" {...props} />\n                </Route>\n                <Route path={`${path}/whats-important`}>\n                    <PartsPage slug=\"whats-important\" {...props} />\n                </Route>\n                <Route path={`${path}/faq`}>\n                    <PartsPage slug=\"faq\" {...props} />\n                </Route>\n                <Route path={`${path}/kontakt`}>\n                    <PageContent {...props}>\n                        <MarkdownPage slug=\"kontakt\"  />\n                    </PageContent>\n                </Route>\n                <Route path={`${path}/impressum`}>\n                    <PageContent {...props}>\n                        <MarkdownPage slug=\"impressum\"  />\n                    </PageContent>\n                </Route>\n                <Route path={`${path}/*`}>\n                    <PageContent {...props}>\n                        <Error errorType={ErrorType.NOT_FOUND} message=\"Seite nicht gefunden\" />\n                    </PageContent>\n                </Route>\n            </Switch>\n        </AnimatePresence>\n    </Page>);\n};\n\nexport default PagesRouter;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './AdminPage.scss';\n\ninterface IProps {\n    className?: string,\n}\n\nconst AdminPage: React.FC<IProps> = ({children, className}) => {\n    return (<div className=\"admin-page\">\n        <nav>\n            <ul>\n                <li><Link to=\"/\">Start</Link></li>\n                <li><Link to=\"/admin\">Dashboard</Link></li>\n            </ul>\n        </nav>\n        <main>\n            {children}\n        </main>\n    </div>);\n};\n\nexport default AdminPage;\n","import React from \"react\";\nimport {Route, Switch,} from \"react-router-dom\";\nimport AuthRouter from \"./AuthRouter\";\nimport HomePage from \"../pages/home/HomePage\";\nimport Error from \"../error/Error\";\nimport ErrorType from \"../../util/errors/ErrorType\";\nimport AdminRouter from \"./admin/AdminRouter\";\nimport User from \"../../util/models/User\";\nimport PagesRouter from \"./PagesRouter\";\nimport AdminPage from \"../pages/admin/AdminPage\";\n\nexport interface IRouterProps {\n    user: User|null,\n}\n\nexport default function Routes(props: IRouterProps) {\n    return (<Switch>\n        <Route path=\"/auth\">\n            <AuthRouter {...props} />\n        </Route>\n        <Route path=\"/admin\">\n            <AdminPage>\n                <AdminRouter {...props} />\n            </AdminPage>\n        </Route>\n        <Route path=\"/-\">\n            <PagesRouter {...props} />\n        </Route>\n        <Route exact path=\"/\">\n            <HomePage />\n        </Route>\n        <Route path=\"*\">\n            <Error errorType={ErrorType.NOT_FOUND} />\n        </Route>\n    </Switch>);\n}\n","import React, {useEffect, useState} from 'react';\nimport RequestFactory from \"../../util/api/RequestFactory\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ActionType from \"../../actions/ActionType\";\nimport {errorSelector, settingsSelector, userSelector} from \"../../selectors/selectors\";\nimport SettingsApplyer from \"../settings/SettingsApplyer\";\nimport ApiResponse from \"../../util/api/ApiResponse\";\nimport PreflightResponse from \"../../util/api/responses/PreflightResponse\";\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../../util/errors/ErrorType\";\nimport Error from \"../error/Error\";\nimport Api from \"../../util/api/Api\";\nimport Routes from \"../routes/Routes\";\nimport './App.scss';\nimport LoadingSpinner from \"../placeholder/loading/LoadingSpinner\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\ninterface IProps {\n  license: string,\n}\n\nexport default function App({license}: IProps) {\n  const dispatch = useDispatch();\n  const settings = useSelector(settingsSelector);\n  const error = useSelector(errorSelector);\n  const user = useSelector(userSelector);\n  const [ loading, setLoading ] = useState(true);\n\n  useEffect(() => {\n    if (!license) {\n      dispatch({\n        type: ActionType.SET_ERROR,\n        error: ErrorType.INVALID_LICENSE,\n      });\n      return;\n    }\n    RequestFactory.getConfig().then(res => {\n      if (res.status !== 200) {\n        dispatch({\n          type: ActionType.SET_ERROR,\n          error: errorTypeByHttpStatusCode(res.status)\n        });\n      } else {\n        Api.baseUrl = res.data.baseApiUrl;\n        RequestFactory.preflight(license).then(handlePreflightResponse(dispatch));\n      }\n    });\n  }, [dispatch, license]);\n\n  useEffect(() => {\n    if (settings != null) {\n      setLoading(false);\n    }\n  }, [settings]);\n\n  if (error != null) {\n    return <Error errorType={error} />;\n  }\n\n  return (<Router>\n    {settings != null && <SettingsApplyer settings={settings} />}\n    <LoadingSpinner color=\"#0a0\" loading={loading} fullScreen={true} />\n    {!loading && <Routes user={user} />}\n  </Router>);\n}\n\nfunction handlePreflightResponse(dispatch: Function) {\n  return (res: ApiResponse<PreflightResponse>) => {\n    if (res.status === 200) {\n      dispatch({\n        type: ActionType.SET_SETTINGS,\n        settings: res.data.settings\n      });\n      dispatch({\n        type: ActionType.SET_USER,\n        user: res.data.user\n      });\n      dispatch({\n          type: ActionType.SET_ALLOW_MULTIREQUESTS,\n          allowMultiRequests: res.data.allowMultiRequests,\n      });\n    } else {\n      dispatch({\n        type: ActionType.SET_ERROR,\n        error: (res.status === 401 ? ErrorType.INVALID_LICENSE : errorTypeByHttpStatusCode(res.status))\n      });\n    }\n  }\n}\n","import Setting from \"./Setting\";\nimport ErrorType from \"../errors/ErrorType\";\nimport User from \"./User\";\nimport {defaultTheme, Theme} from \"../themes/themes\";\n\nclass State {\n\n    user: User|null = null;\n    settings: Setting[]|null = null;\n    error: ErrorType|null = null;\n    theme: Theme = defaultTheme;\n    allowMultiRequests: boolean = false;\n}\n\nexport default State;\n","import State from '../util/models/State';\nimport ActionType from \"../actions/ActionType\";\nimport SetSettingsAction from \"../actions/settings/SetSettingsAction\";\nimport SetErrorAction from \"../actions/errors/SetErrorAction\";\nimport SetUserAction from \"../actions/user/SetUserAction\";\nimport SetThemeAction from \"../actions/themes/SetThemeAction\";\nimport SetAllowMultiRequestsAction from \"../actions/settings/SetAllowMultiRequestsAction\";\n\nconst rootReducer = (\n    state: State = new State(),\n    action: SetSettingsAction\n        | SetErrorAction\n        | SetUserAction\n        | SetThemeAction\n        | SetAllowMultiRequestsAction\n): State => {\n    switch(action.type) {\n        case ActionType.SET_USER:\n            return {...state, user: action.user};\n        case ActionType.SET_SETTINGS:\n            return {...state, settings: action.settings};\n        case ActionType.SET_ERROR:\n            return {...state, error: action.error};\n        case ActionType.SET_THEME:\n            return {...state, theme: action.theme};\n        case ActionType.SET_ALLOW_MULTIREQUESTS:\n            return {...state, allowMultiRequests: action.allowMultiRequests};\n    }\n\n    return state;\n};\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport {Provider} from \"react-redux\";\nimport rootReducer from \"./reducers/reducer\";\nimport { createStore } from 'redux';\nimport license from \"./license\";\nimport './index.scss';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App license={license} />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default '2738362523';"],"sourceRoot":""}
{"version":3,"sources":["util/api/ApiResponse.ts","config.ts","util/api/Api.ts","util/models/Setting.ts","util/models/User.ts","util/api/responses/PreflightResponse.ts","util/models/Markdown.ts","util/models/Page.ts","util/api/responses/GetPageResponse.ts","util/api/responses/GetConfigResponse.ts","util/api/responses/auth/LoginResponse.ts","util/api/responses/NoDataResponse.ts","util/api/responses/auth/RegisterResponse.ts","util/models/Statistics.ts","util/api/responses/admin/GetStatisticsResponse.ts","util/api/RequestFactory.ts","actions/ActionType.ts","util/errors/ErrorType.ts","selectors/selectors.ts","components/settings/SettingsApplyer.tsx","components/error/Error.tsx","components/pages/auth/login/LoginForm.tsx","util/UserServices.ts","components/pages/auth/AuthPage.tsx","components/pages/auth/login/LoginPage.tsx","components/pages/auth/logout/LogoutPage.tsx","components/pages/auth/register/RegisterForm.tsx","components/pages/auth/register/RegisterPage.tsx","components/routes/AuthRouter.tsx","components/pages/home/svg_scene/grass/Blade.tsx","components/pages/home/svg_scene/grass/Grass.tsx","components/pages/home/svg_scene/sun/SunShine.tsx","components/pages/home/svg_scene/sun/Sun.tsx","components/pages/home/svg_scene/cloud/Cloud.tsx","components/pages/home/svg_scene/SvgScene.tsx","components/pages/home/HomePage.tsx","components/pages/admin/dashboard/DashboardPage.tsx","components/placeholder/loading/LoadingSpinner.tsx","components/pages/admin/statistics/StatisticsPage.tsx","components/pages/admin/AdminPage.tsx","hooks/useMarkdownPage.tsx","components/md_page/MarkDownToJsx.tsx","components/md_page/edit/EditMarkdownPage.tsx","components/routes/AdminRouter.tsx","util/themes/themes.ts","components/md_page/MarkdownPage.tsx","components/pages/page/footer/Footer.tsx","components/pages/page/content/PageContent.tsx","components/pages/impressum/ImpressumPage.tsx","components/pages/page/nav/Nav.tsx","components/pages/page/Page.tsx","components/pages/kontakt/KontaktPage.tsx","components/routes/PagesRouter.tsx","components/routes/Routes.tsx","components/app/App.tsx","util/models/State.ts","reducers/reducer.ts","index.tsx","license.ts"],"names":["ApiResponse","data","status","success","message","this","input","parseInt","Api","path","license","Promise","resolve","a","url","URL","baseUrl","searchParams","delete","append","fetch","href","headers","credentials","res","json","deserialize","body","method","JSON","stringify","obj","get","RequestFactory","then","post","config","Setting","key","value","defaultValue","cssProperty","User","id","email","isAdmin","PreflightResponse","settings","user","map","s","Markdown","content","htmlContent","description","Page","slug","title","markdown","GetPageResponse","page","GetConfigResponse","baseApiUrl","LoginResponse","NoDataResponse","RegisterResponse","Statistics","totalRequests","requestsByPath","Object","keys","forEach","p","GetStatisticsResponse","statistics","makeGetRequest","makePostRequest","password","ActionType","ErrorType","userSelector","state","settingsSelector","errorSelector","error","themeSelector","theme","SettingsApplyer","css","filter","join","errorTypeByHttpStatusCode","statusCode","NOT_FOUND","SERVER_ERROR","Error","errorType","component","INVALID_LICENSE","LoginForm","onSubmit","useState","setEmail","setPassword","className","type","onChange","e","target","onClick","UserServices","doLogin","register","doLogout","AuthPage","children","LoginPage","setUser","dispatch","useDispatch","history","useHistory","useEffect","SET_USER","login","push","to","LogoutPage","loading","setLoading","logout","RegisterForm","RegisterPage","AuthRouter","props","useRouteMatch","Blade","x","width","height","points","y","animationDuration","Math","floor","random","darkness","fill","style","animationDelay","Grass","i","window","innerWidth","round","SunShine","p1","p2","rest","x1","y1","x2","y2","Sun","radius","shines","shineLengthLong","shineLengthShort","numberOfShines","setNumberOfShines","setFilter","slice","PI","shineProps","r","angle","cos","sin","onAnimationEnd","operator","in","result","stdDeviation","floodColor","in2","cx","cy","l","Cloud","text","pos","scale","setScale","baseAnimationDuration","min","max","ceil","calculateRandomAnimationDuration","colorShiftDuration","transform","onMouseEnter","onMouseLeave","animationDurationString","dominantBaseline","textAnchor","duration","d2","SvgScene","links","innerHeight","calculateScaleByWindowSize","calculateCloudXPos","HomePage","document","classList","add","remove","DashboardPage","backgroundColor","color","LoadingSpinner","delayMs","fullScreen","isLoading","setIsLoading","timeOut","setTimeout","clearTimeout","undefined","data-active","size","StatisticsPage","setStatistics","getStatistics","AdminPage","useMarkdownPage","setPage","setError","getPage","MarkDownToJsx","md","rootRef","useRef","ref","options","EditMarkdownPage","onSave","_title","setMd","setTitle","createPage","editPage","create","edit","disabled","AdminRouter","exact","defaultTheme","nav","bg","font","footer","MarkdownPage","Footer","pageVariants","initial","opacity","out","pageTransition","ease","PageContent","SET_THEME","div","animate","exit","variants","transition","ImpressumPage","Nav","isOpen","setIsOpen","data-visible","activeClassName","useSelector","KontaktPage","PagesRouter","location","useLocation","exitBeforeEnter","pathname","Routes","App","getConfig","SET_ERROR","preflight","SET_SETTINGS","handlePreflightResponse","State","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05115f79.chunk.js","sourcesContent":["import Serializable from \"../interfaces/Serializable\";\n\nclass ApiResponse<T> implements Serializable {\n\n    public status = 200;\n    public success = false;\n    public data: T;\n    public message = '';\n\n    constructor(data: T) {\n        // @ts-ignore\n        this.data = data;\n    }\n\n    deserialize(input: {}): ApiResponse<T> {\n        // @ts-ignore\n        this.status = parseInt(input['status']);\n\n        // @ts-ignore\n        this.success = !!input['success'];\n\n        // @ts-ignore\n        input['message'] && (this.message = `${input['message']}`);\n\n        return this;\n    }\n\n}\n\nexport default ApiResponse;\n","export default {\n    PRODUCTION: true,\n    BASE_PROD_API_URL: 'https://jaspress.lichte.info/api',\n    BASE_DEV_API_URL: 'http://localhost:8073/Projects/jaspress-api/api',\n};\n","import ApiResponse from \"./ApiResponse\";\nimport RequestFactory from \"./RequestFactory\";\nimport config from \"../../config\";\nimport RequestBody from \"./requests/RequestBody\";\n\nclass Api {\n\n    public static baseUrl = (config.PRODUCTION ? config.BASE_PROD_API_URL : config.BASE_DEV_API_URL);\n\n    private static headers = () => ({\n\n    });\n\n    private static get(path: string, license: string): Promise<ApiResponse<any>> {\n        return new Promise(async resolve => {\n            const url = new URL(`${Api.baseUrl}${path}`);\n            url.searchParams.delete('license');\n            url.searchParams.append('license', license);\n\n            const res = await fetch(url.href, {\n                headers: Api.headers(),\n                credentials: 'include',\n            });\n            const json = await res.json();\n            resolve((new ApiResponse(json)).deserialize(json));\n        });\n    }\n\n    private static post(path: string, license: string) {\n        return (body: RequestBody) => {\n            return new Promise(async (resolve) => {\n                const json = await (await fetch(\n                    `${Api.baseUrl}${path}`,\n                    {\n                        method: 'POST',\n                        body: JSON.stringify({...body, license}),\n                        headers: Api.headers(),\n                        credentials: 'include',\n                    }\n                )).json();\n                resolve((new ApiResponse(json)).deserialize(json));\n            });\n        }\n    }\n\n    public static async makeGetRequest<T>(obj: T, url: string): Promise<ApiResponse<T>> {\n        return new Promise<ApiResponse<T>>(resolve => {\n            Api.get(url, RequestFactory.license).then(res => {\n                // @ts-ignore\n                resolve((new ApiResponse(obj.deserialize(res.data.data))).deserialize(res));\n            });\n        });\n    }\n\n    public static async makePostRequest<T>(obj: T, url: string, body: RequestBody): Promise<ApiResponse<T>> {\n        return new Promise<ApiResponse<T>>((resolve) => {\n            Api.post(url, RequestFactory.license)(body).then(res => {\n                // @ts-ignore\n                resolve((new ApiResponse(obj.deserialize(res.data.data))).deserialize(res));\n            });\n        });\n    }\n\n}\n\nexport default Api;\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class Setting implements Serializable {\n\n    key: string = '';\n    value: string = '';\n    defaultValue: string = '';\n    cssProperty: string|null = null;\n\n    deserialize(input: {}): Setting {\n        // @ts-ignore\n        this.key = input['key'];\n        // @ts-ignore\n        this.value = input['value'];\n        // @ts-ignore\n        this.defaultValue = input['defaultValue'];\n        // @ts-ignore\n        input['cssProperty'] && (this.cssProperty = input['cssProperty']);\n\n        return this;\n    }\n\n}\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class User implements Serializable {\n\n    id: number = 0;\n    email: string = '';\n    isAdmin: boolean = false;\n\n    deserialize(input: {}): User {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['id'] && (this.id = parseInt(input['id']));\n        // @ts-ignore\n        input['email'] && (this.email = `${input['email']}`);\n        // @ts-ignore\n        input['isAdmin'] && (this.isAdmin = !!input['isAdmin']);\n\n        return this;\n    }\n\n}\n","import ResponseData from \"./ResponseData\";\nimport Setting from \"../../models/Setting\";\nimport User from \"../../models/User\";\n\nclass PreflightResponse implements ResponseData{\n\n    public settings: Setting[] = [];\n    public user: User|null = null;\n\n    deserialize(input: {}): PreflightResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['settings'] && (this.settings = input['settings'].map(s => (new Setting()).deserialize(s)));\n        // @ts-ignore\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\n\n        return this;\n    }\n\n}\n\nexport default PreflightResponse;\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class Markdown implements Serializable {\n\n    content = '';\n    htmlContent = '';\n    description = '';\n\n    deserialize(input: {}): Markdown {\n        // @ts-ignore\n        input['content'] && (this.content = input['content']);\n        // @ts-ignore\n        input['htmlContent'] && (this.htmlContent = input['htmlContent']);\n        // @ts-ignore\n        input['description'] && (this.description = input['description']);\n\n        return this;\n    }\n\n}\n","import Serializable from \"../interfaces/Serializable\";\nimport Markdown from \"./Markdown\";\n\nexport default class Page implements Serializable {\n\n    slug: string = '';\n    title: string = '';\n    markdown: Markdown|null = null;\n    \n    deserialize(input: {}): Page {\n        // @ts-ignore\n        this.slug = input['slug'];\n        // @ts-ignore\n        this.title = input['title'];\n\n        // @ts-ignore\n        this.markdown = (new Markdown()).deserialize(input['markdown']);\n\n        return this;\n    }\n\n}\n","import ResponseData from \"./ResponseData\";\nimport Page from \"../../models/Page\";\n\nexport default class GetPageResponse implements ResponseData {\n\n    page: Page|null = null;\n\n    deserialize(input: {}): GetPageResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['page'] && (this.page = (new Page()).deserialize(input['page']));\n\n        return this;\n    }\n\n}\n","import ResponseData from \"./ResponseData\";\n\nclass GetConfigResponse implements ResponseData {\n\n    public baseApiUrl: string = '';\n\n    deserialize(input: {}): GetConfigResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        this.baseApiUrl = `${input['base_api_url']}`;\n\n        return this;\n    }\n\n}\n\nexport default GetConfigResponse;\n","import ResponseData from \"../ResponseData\";\nimport User from \"../../../models/User\";\n\nclass LoginResponse implements ResponseData {\n\n    public user: User|null = null;\n\n    deserialize(input: {}): LoginResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\n\n        return this;\n    }\n\n}\n\nexport default LoginResponse;\n","import ResponseData from \"./ResponseData\";\n\nclass NoDataResponse implements ResponseData {\n\n    deserialize(input: {}): NoDataResponse {\n        return this;\n    }\n\n}\n\nexport default NoDataResponse;\n","import ResponseData from \"../ResponseData\";\nimport User from \"../../../models/User\";\n\nclass RegisterResponse implements ResponseData {\n\n    public user: User|null = null;\n\n    deserialize(input: {}): RegisterResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        input['user'] && (this.user = (new User()).deserialize(input['user']));\n\n        return this;\n    }\n\n}\n\nexport default RegisterResponse;\n","import Serializable from \"../interfaces/Serializable\";\n\nexport default class Statistics implements Serializable {\n\n    totalRequests: number = 0;\n    requestsByPath: {[key: string]: number} = {};\n\n    deserialize(input: {}): Statistics {\n        if (!input) return this;\n\n        // @ts-ignore\n        this.totalRequests = parseInt(input['totalRequests']);\n\n        // @ts-ignore\n        Object.keys(input['requestsByPath']).forEach(p => this.requestsByPath[p] = parseInt(input['requestsByPath'][p]));\n\n        return this;\n    }\n}\n","import ResponseData from \"../ResponseData\";\nimport Statistics from \"../../../models/Statistics\";\n\nclass GetStatisticsResponse implements ResponseData {\n\n    statistics: Statistics = new Statistics();\n\n    deserialize(input: {}): GetStatisticsResponse {\n        if (!input) {\n            return this;\n        }\n\n        // @ts-ignore\n        this.statistics = (new Statistics()).deserialize(input['statistics']);\n\n        return this;\n    }\n\n}\n\nexport default GetStatisticsResponse;\n","import Api from \"./Api\";\nimport PreflightResponse from \"./responses/PreflightResponse\";\nimport GetPageResponse from \"./responses/GetPageResponse\";\nimport GetConfigResponse from \"./responses/GetConfigResponse\";\nimport LoginResponse from \"./responses/auth/LoginResponse\";\nimport NoDataResponse from \"./responses/NoDataResponse\";\nimport RegisterResponse from \"./responses/auth/RegisterResponse\";\nimport GetStatisticsResponse from \"./responses/admin/GetStatisticsResponse\";\nimport CreateMdPageRequestBody from \"./requests/CreateMdPageRequestBody\";\nimport EditMdPageRequestBody from \"./requests/EditMdPageRequestBody\";\n\nexport default class RequestFactory {\n\n    public static license: string = '';\n\n    public static async getConfig() {\n        return Api.makeGetRequest<GetConfigResponse>(\n            new GetConfigResponse(),\n            `/config/get.php`\n        );\n    }\n\n    public static async preflight(license: string) {\n        RequestFactory.license = license;\n        return Api.makeGetRequest<PreflightResponse>(\n            new PreflightResponse(),\n            `/preflight.php`\n        );\n    }\n\n    public static async getPage(slug: string) {\n        return Api.makeGetRequest<GetPageResponse>(\n            new GetPageResponse(),\n            `/page/get.php?p=${slug}`\n        );\n    }\n\n    public static async createPage(body: CreateMdPageRequestBody) {\n        return Api.makePostRequest<NoDataResponse>(\n            new NoDataResponse(),\n            `/admin/page/new.php`,\n            body\n        );\n    }\n\n    public static async editPage(body: EditMdPageRequestBody) {\n        return Api.makePostRequest<NoDataResponse>(\n            new NoDataResponse(),\n            `/admin/page/edit.php`,\n            body\n        );\n    }\n\n    public static async doLogin(email: string, password: string) {\n        return Api.makePostRequest<LoginResponse>(\n            new LoginResponse(),\n            `/auth/login.php`,\n            {email, password}\n        );\n    }\n\n    public static async register(email: string, password: string) {\n        return Api.makePostRequest<RegisterResponse>(\n            new RegisterResponse(),\n            `/auth/register.php`,\n            {email, password}\n        );\n    }\n\n    public static async doLogout() {\n        return Api.makeGetRequest<NoDataResponse>(\n            new NoDataResponse(),\n            `/auth/logout.php`,\n        );\n    }\n\n    public static async getStatistics() {\n        return Api.makeGetRequest<GetStatisticsResponse>(\n            new GetStatisticsResponse(),\n            '/admin/statistics/get.php'\n        );\n    }\n\n}\n","enum ActionType {\n    SET_USER = 0,\n    SET_SETTINGS = 1,\n    SET_ERROR = 2,\n    SET_THEME = 3,\n}\n\nexport default ActionType;\n","enum ErrorType {\n    INVALID_LICENSE = 1,\n    SERVER_ERROR = 2,\n    NOT_FOUND = 3,\n}\n\nexport default ErrorType;\nexport function errorTypeByHttpStatusCode(statusCode: number): ErrorType|null {\n    switch (statusCode) {\n        case 200: return null;\n        case 404: return ErrorType.NOT_FOUND;\n        case 500: return ErrorType.SERVER_ERROR;\n    }\n    return ErrorType.SERVER_ERROR;\n}\n","import State from \"../util/models/State\";\nimport Setting from \"../util/models/Setting\";\nimport ErrorType from \"../util/errors/ErrorType\";\nimport User from \"../util/models/User\";\nimport {Theme} from \"../util/themes/themes\";\n\ntype Selector<T> = (state: State) => T;\n\nexport const stateSelector: Selector<State> = state => state;\nexport const userSelector: Selector<User|null> = state => state.user;\nexport const settingsSelector: Selector<Setting[]|null> = state => state.settings;\nexport const errorSelector: Selector<ErrorType|null> = state => state.error;\nexport const themeSelector: Selector<Theme> = state => state.theme;\n","import React from \"react\";\nimport Setting from \"../../util/models/Setting\";\n\ninterface IProps {\n    settings: Setting[],\n}\n\nexport default function SettingsApplyer({settings}: IProps) {\n    const css = `html {\n        ${\n            settings\n            .filter(s => s.cssProperty != null)\n            .map(s => `${s.cssProperty}: ${s.value};`)\n            .join('')\n        }\n    }`;\n\n    return (\n        <style>{css}</style>\n    );\n}\n","import React from \"react\";\nimport ErrorType from \"../../util/errors/ErrorType\";\n\ninterface IProps {\n    errorType: ErrorType,\n    message?: string,\n}\n\nexport default function Error({errorType, message}: IProps) {\n    const component = ((errorType: ErrorType) => {\n        switch (errorType) {\n            case ErrorType.INVALID_LICENSE:\n                return (<p>{message || 'Invalid License!'}</p>);\n            case ErrorType.SERVER_ERROR:\n                return (<p>{message || 'Unexpected Server error'}</p>);\n            case ErrorType.NOT_FOUND:\n                return (<p>{message || 'Not found'}</p>);\n        }\n        return <p>An error occurred</p>;\n    })(errorType);\n\n    return (<section>{component}</section>);\n}\n","import React, {useState} from \"react\";\n\ninterface IProps {\n    onSubmit: (email: string, password: string) => any,\n}\n\nexport default function LoginForm({onSubmit}: IProps) {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n\n    return (<div className=\"auth-form\">\n        <h2>E-Mail</h2>\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <h2>Passwort</h2>\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button onClick={() => onSubmit(email, password)}>Anmelden</button>\n    </div>);\n}\n","import User from \"./models/User\";\nimport RequestFactory from \"./api/RequestFactory\";\n\nexport default class UserServices {\n\n    public static async login(email: string, password: string): Promise<User|null> {\n        const res = await RequestFactory.doLogin(email, password);\n        return res.data.user;\n    }\n\n    public static async register(email: string, password: string): Promise<User|null> {\n        const res = await RequestFactory.register(email, password);\n        return res.data.user;\n    }\n\n    public static async logout(): Promise<boolean> {\n        const res = await RequestFactory.doLogout();\n        return (res.status === 200);\n    }\n\n}\n","import React from \"react\";\nimport './AuthPage.scss';\n\nconst AuthPage: React.FC = ({children}) => {\n    return (\n        <div className=\"auth-page\">\n            <div className=\"wrapper\">\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default AuthPage;\n","import React, {useEffect, useState} from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport User from \"../../../../util/models/User\";\nimport UserServices from \"../../../../util/UserServices\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {Link, useHistory} from 'react-router-dom';\nimport AuthPage from \"../AuthPage\";\n\nexport default function LoginPage() {\n    const [user, setUser] = useState<User|null>(null);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch({\n            type: ActionType.SET_USER,\n            user: user,\n        });\n    }, [user, dispatch]);\n\n    return (<AuthPage>\n        <h1>Anmelden</h1>\n        <LoginForm onSubmit={(email, password) => {\n            if (!email || !password) {\n                return;\n            }\n\n            UserServices.login(email, password).then(user => {\n                setUser(user);\n                if (user?.isAdmin) {\n                    history.push('/admin');\n                } else {\n                    history.push('/');\n                }\n            });\n        }} />\n        <Link to=\"/auth/register\">Neuen Account erstellen</Link>\n    </AuthPage>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport UserServices from \"../../../../util/UserServices\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {Redirect} from 'react-router-dom';\n\nexport default function LogoutPage() {\n    const [loading, setLoading] = useState(true);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        UserServices.logout().then(success => {\n            if (success) {\n                dispatch({\n                    type: ActionType.SET_USER,\n                    user: null,\n                });\n            }\n            setLoading(false);\n        });\n    }, [dispatch]);\n\n    if (loading) {\n        return <></>;\n    }\n    return <Redirect to=\"/\" />\n}\n","import React, {useState} from \"react\";\n\ninterface IProps {\n    onSubmit: (email: string, password: string) => any,\n}\n\nexport default function RegisterForm({onSubmit}: IProps) {\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n\n    return (<div className=\"auth-form\">\n        <h2>E-Mail</h2>\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <h2>Passwort</h2>\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button onClick={() => onSubmit(email, password)}>Erstellen</button>\n    </div>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport RegisterForm from \"./RegisterForm\";\nimport User from \"../../../../util/models/User\";\nimport UserServices from \"../../../../util/UserServices\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {Link, useHistory} from 'react-router-dom';\nimport AuthPage from \"../AuthPage\";\n\nexport default function RegisterPage() {\n    const [user, setUser] = useState<User|null>(null);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch({\n            type: ActionType.SET_USER,\n            user: user,\n        });\n    }, [user, dispatch]);\n\n    return (<AuthPage>\n        <h1>Registrieren</h1>\n        <RegisterForm onSubmit={(email, password) => {\n            UserServices.register(email, password).then(user => {\n                if (email && password) {\n                    setUser(user);\n                    history.push('/');\n                }\n            });\n        }} />\n        <Link to=\"/auth/login\">Mit bestehendem Account anmelden</Link>\n    </AuthPage>);\n}\n","import React from 'react'\nimport {Route, Switch, useRouteMatch} from 'react-router-dom';\nimport LoginPage from \"../pages/auth/login/LoginPage\";\nimport Error from \"../error/Error\";\nimport ErrorType from \"../../util/errors/ErrorType\";\nimport LogoutPage from \"../pages/auth/logout/LogoutPage\";\nimport RegisterPage from \"../pages/auth/register/RegisterPage\";\nimport {IRouterProps} from \"./Routes\";\n\nconst AuthRouter = (props: IRouterProps) => {\n    const {path, } = useRouteMatch();\n\n    return (<Switch>\n        <Route path={`${path}/login`}>\n            <LoginPage/>\n        </Route>\n        <Route path={`${path}/register`}>\n            <RegisterPage/>\n        </Route>\n        <Route path={`${path}/logout`}>\n            <LogoutPage/>\n        </Route>\n        <Route path={`${path}/*`}>\n            <Error errorType={ErrorType.NOT_FOUND}/>\n        </Route>\n    </Switch>);\n};\n\nexport default AuthRouter;\n","import React from \"react\";\n\nexport interface IBladeProps {\n    x: number,\n    width: number,\n    height: number,\n}\n\nexport default function Blade({x, width, height}: IBladeProps) {\n    const points = [\n        {x: x + (width / 2), y: 0},\n        {x: x, y: height},\n        {x: x + width, y: height},\n    ];\n\n    const animationDuration = (Math.floor(Math.random() * 3000 - 500)) + 500;\n    const darkness = Math.floor(Math.random() * (101)) + 15;\n    return <polygon\n        className=\"blade\"\n        points={points.map(p => ({...p, y: p.y + (120 - height)})).map(p => `${p.x} ${p.y}`).join(', ')}\n        fill={`rgb(${darkness}, 140, ${darkness})`}\n        style={{\n            animationDuration: `${animationDuration}ms, 2s`,\n            animationDelay: `0s, ${animationDuration}ms`\n        }}\n    />;\n}\n","import React from \"react\";\nimport Blade, {IBladeProps} from \"./Blade\";\n\nexport default function Grass() {\n    const props: IBladeProps[] = [];\n    for (let i = 0; i < (window.innerWidth / 8); i++) {\n        const height = Math.floor(Math.random() * (101)) + 60;\n        props.push({\n            x: i * 8,\n            width: Math.round(height / 12),\n            height: height,\n        });\n    }\n\n    return (\n<g className=\"grass\">\n    {props.map(p => <Blade {...p} key={p.x} />)}\n</g>);\n}\n","import React from \"react\";\n\nexport interface ISunshineProps {\n    p1: {x: number, y: number},\n    p2: {x: number, y: number},\n    filter: string,\n}\n\nconst SunShine: React.FC<ISunshineProps> = ({\n    p1,\n    p2,\n    filter,\n    ...rest\n}: ISunshineProps) => {\n    return <line\n        className=\"sun-shine\"\n        filter={filter}\n        {...rest}\n        x1={p1.x}\n        y1={p1.y}\n        x2={p2.x}\n        y2={p2.y}\n    />;\n};\n\nexport default SunShine;\n","import React, {useState} from \"react\";\nimport SunShine, {ISunshineProps} from \"./SunShine\";\n\ninterface IProps {\n    radius: number,\n    shines: number,\n    shineLengthLong: number,\n    shineLengthShort: number\n}\n\nexport default function Sun({radius, shines, shineLengthLong, shineLengthShort}: IProps) {\n    const [numberOfShines, setNumberOfShines] = useState(0);\n    const [filter, setFilter] = useState('');\n\n    const cx = -140;\n    const cy = 300;\n\n    const slice = 2 * Math.PI / numberOfShines;\n    const shineProps: ISunshineProps[] = [];\n    for (let i = 0; i < numberOfShines; i++) {\n        const r = radius + (i % 2 === 0 ? shineLengthLong : shineLengthShort);\n        const angle = slice * i;\n        shineProps.push({\n            p1: {\n                x: cx + (radius + 10) * Math.cos(angle),\n                y: cy + (radius + 10) * Math.sin(angle),\n            },\n            p2: {\n                x: cx + r * Math.cos(angle),\n                y: cy + r * Math.sin(angle),\n            },\n            filter: '',\n        });\n    }\n\n    return (\n    <g className=\"sun\" onAnimationEnd={() => {\n        setNumberOfShines(shines);\n        setFilter('url(#softGlow)');\n    }}>\n        <defs>\n            <filter id=\"softGlow\" height=\"300%\" width=\"300%\" x=\"-75%\" y=\"-75%\">\n                <feMorphology operator=\"dilate\" radius=\"4\" in=\"SourceAlpha\" result=\"thicken\" />\n                <feGaussianBlur in=\"thicken\" stdDeviation=\"40\" result=\"blurred\" />\n                <feFlood floodColor=\"#f3f35c\" result=\"glowColor\" />\n                <feComposite in=\"glowColor\" in2=\"blurred\" operator=\"in\" result=\"softGlow_colored\" />\n                <feMerge>\n                    <feMergeNode in=\"softGlow_colored\"/>\n                    <feMergeNode in=\"SourceGraphic\"/>\n                </feMerge>\n            </filter>\n        </defs>\n        <circle cx={cx} cy={cy} r={radius} filter={filter} />\n        {shineProps.map((l, i) => (\n            <SunShine\n                key={`${l.p1.x},${l.p1.y}`}\n                {...l}\n            />\n        ))}\n    </g>);\n}\n","import React, {useState} from \"react\";\n\ninterface IProps {\n    onClick: () => any,\n    text: string,\n    pos: {x: number, y: number,}\n    scale: number,\n    animationDelay: number,\n}\n\nconst Cloud: React.FC<IProps> = ({onClick, text, pos, scale, animationDelay}) => {\n    const [s, setScale] = useState(scale);\n    const baseAnimationDuration = calculateRandomAnimationDuration();\n\n    const colorShiftDuration = Math.floor(Math.random() * (18000 - 4000 + 1)) + 4000;\n\n    return <g className=\"cloud\" style={{animationDelay: `${animationDelay}ms, 0ms`}}>\n        <g\n            transform={`translate(${pos.x}, ${pos.y})`}\n            onClick={onClick}\n            onMouseEnter={() => setScale(scale)}\n            onMouseLeave={() => setScale(scale)}\n        >\n            <circle cx={0} cy={0} r={30 * s} className=\"base\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }} />\n            <circle cx={120 * s} cy={0} r={30 * s} className=\"base\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }} />\n            <rect width={120 * s} height={60 * s} x={0} y={-30 * s} className=\"base\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }} />\n            <circle cx={80 * s} cy={-30 * s} r={50 * s} className=\"big\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }} />\n            <circle cx={25 * s} cy={-30 * s} r={30 * s} className=\"small\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }} />\n            <text x={60 * s} y={-5 * s} dominantBaseline=\"middle\" textAnchor=\"middle\" style={{\n                animationDuration: animationDurationString(baseAnimationDuration, colorShiftDuration)\n            }}>{text}</text>\n        </g>\n    </g>\n};\n\nexport default Cloud;\n\nconst animationDurationString = (duration: number, d2: number) => `${duration}ms, ${d2}ms`;\n\nfunction calculateRandomAnimationDuration(): number {\n    return getRandomInt(2000, 5000);\n}\n\nfunction getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","import React from \"react\";\nimport './SvgScene.scss';\nimport Grass from \"./grass/Grass\";\nimport Sun from \"./sun/Sun\";\nimport Cloud from \"./cloud/Cloud\";\nimport {useHistory} from \"react-router-dom\";\n\ninterface IProps {\n    links: {target: string, title: string}[]\n}\nexport default function SvgScene({links}: IProps) {\n    const history = useHistory();\n    const scale = calculateScaleByWindowSize();\n\n    return (<div className=\"svg-scene\">\n        <svg>\n            <Sun radius={80} shineLengthLong={70} shineLengthShort={50} shines={16} />\n            <Grass/>\n            {links.map((l, i) => (<Cloud\n                key={l.target}\n                text={l.title}\n                onClick={() => history.push(l.target)}\n                pos={{x: calculateCloudXPos(), y: (i + 2) * 120 * scale}}\n                scale={scale}\n                animationDelay={3000 + (600 * i)}\n            />))}\n        </svg>\n        <div className=\"ground\" />\n    </div>);\n}\n\nfunction calculateCloudXPos(): number {\n    let min = (window.innerWidth <= 600 ? 80 : 40);\n    let max = window.innerWidth - 160;\n\n    if (window.innerWidth > 1080) {\n        min = ((window.innerWidth - 1000) / 2);\n        max = window.innerWidth - ((window.innerWidth - 1000) / 2);\n    }\n\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction calculateScaleByWindowSize(): number {\n    if (window.innerHeight < 600) {\n        return 0.7;\n    }\n    if (window.innerHeight < 700) {\n        return 0.75;\n    }\n    if (window.innerHeight < 800) {\n        return 0.85;\n    }\n    return 1;\n}\n","import React, {useEffect} from \"react\";\nimport './HomePage.scss';\nimport SvgScene from \"./svg_scene/SvgScene\";\n\nexport default function HomePage() {\n    useEffect(() => {\n        document.body.classList.add('home');\n\n        return () => document.body.classList.remove('home')\n    }, []);\n\n    return (<div className=\"home-page\">\n        <SvgScene links={[\n            {target: '/-/about', title: 'Über uns'},\n            {target: '/-/team', title: 'Team'},\n            {target: '/-/einrichtung', title: 'Einrichtung'},\n            {target: '/-/impressum', title: 'Impressum'},\n        ]}/>\n        <h1>Kinderstube Sethweg e.V.</h1>\n    </div>);\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './DashboardPage.scss';\n\nexport default function DashboardPage() {\n    return (<div className=\"dashboard-page\">\n        <ul>\n            <Link to=\"/admin/kontakt\"><li style={{backgroundColor: 'tomato'}}>\n                Kontakt\n            </li></Link>\n            <Link to=\"/admin/impressum\"><li style={{backgroundColor: 'olivedrab'}}>\n                Impressum\n            </li></Link>\n            <Link to=\"/admin/statistics\"><li style={{backgroundColor: 'darkorange'}}>\n                Statistiken\n            </li></Link>\n            <Link to=\"/auth/logout\"><li style={{backgroundColor: '#5a021e', color: '#fff'}}>\n                Logout\n            </li></Link>\n        </ul>\n    </div>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport Loader from \"react-spinners/PropagateLoader\";\nimport './LoadingSpinner.scss';\n\ninterface IProps {\n    color: string,\n    loading: boolean,\n    delayMs?: number,\n    fullScreen?: boolean,\n}\n\nexport default function LoadingSpinner({color, loading, delayMs, fullScreen}: IProps) {\n    const [ isLoading, setIsLoading ] = useState(loading);\n    useEffect(() => {\n        if (!loading) {\n            const timeOut = setTimeout(() => setIsLoading(false), delayMs || 0);\n\n            return () => clearTimeout(timeOut);\n        }\n    }, [loading, delayMs]);\n\n    if (fullScreen === undefined) {\n        fullScreen = false;\n    }\n\n    return (<div className={`loading ${fullScreen && ' loading-fs'}`} data-active={(isLoading ? 'yes' : 'no')}>\n        <Loader\n            color={color}\n            loading={true}\n            size={25}\n        />\n    </div>);\n}\n","import React, {useEffect, useState} from \"react\";\nimport Statistics from \"../../../../util/models/Statistics\";\nimport RequestFactory from \"../../../../util/api/RequestFactory\";\nimport LoadingSpinner from \"../../../placeholder/loading/LoadingSpinner\";\nimport './StatisticsPage.scss';\n\nexport default function StatisticsPage() {\n    const [statistics, setStatistics] = useState<Statistics|null>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        RequestFactory.getStatistics().then(res => {\n            if (res.status === 200) {\n                setStatistics(res.data.statistics);\n            }\n            setLoading(false);\n        });\n    }, [setStatistics]);\n\n    return (<>\n        <LoadingSpinner color=\"#0a0\" loading={loading} />\n        {statistics != null && <div className=\"statistics-page\">\n            <h1><span>{statistics?.totalRequests}</span> Aufrufe gesamt</h1>\n            <table>\n                <thead>\n                    <tr><th>Url</th><th>Aufrufe</th></tr>\n                </thead>\n                <tbody>\n                    {\n                        Object.keys(statistics?.requestsByPath).map(p => <tr key={p}>\n                            <td>{p}</td><td>{statistics?.requestsByPath[p]}</td>\n                        </tr>)\n                    }\n                </tbody>\n            </table>\n        </div>}\n    </>);\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './AdminPage.scss';\n\ninterface IProps {\n    className?: string,\n}\n\nconst AdminPage: React.FC<IProps> = ({children, className}) => {\n    return (<div className=\"admin-page\">\n        <nav>\n            <ul>\n                <li><Link to=\"/\">Start</Link></li>\n                <li><Link to=\"/admin\">Dashboard</Link></li>\n            </ul>\n        </nav>\n        <main>\n            {children}\n        </main>\n    </div>);\n};\n\nexport default AdminPage;\n","import {useEffect, useState} from \"react\";\nimport Page from \"../util/models/Page\";\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../util/errors/ErrorType\";\nimport RequestFactory from \"../util/api/RequestFactory\";\n\nexport default function useMarkdownPage(slug: string) {\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState<Page|null>(null);\n    const [error, setError] = useState<ErrorType|null>(null);\n\n    useEffect(() => {\n        RequestFactory.getPage(slug).then(res => {\n            setLoading(false);\n            if (res.status === 200) {\n                setPage(res.data.page);\n            } else {\n                setError(errorTypeByHttpStatusCode(res.status));\n            }\n        });\n    }, [slug]);\n\n    return {page, loading, error};\n}\n","import React, { useRef } from 'react'\nimport Markdown from 'markdown-to-jsx'\nimport './Markdown.scss';\n\ninterface Props {\n    md: string;\n}\n\nconst MarkDownToJsx = ({md, }: Props) => {\n    const rootRef = useRef() as React.MutableRefObject<HTMLDivElement>;\n\n    return (\n        <div className=\"markdown-to-jsx\" ref={rootRef}>\n            <Markdown\n                options={{}}\n            >{md}</Markdown>\n        </div>);\n}\n\nexport default MarkDownToJsx\n","import React, {useEffect, useState} from \"react\";\nimport useMarkdownPage from \"../../../hooks/useMarkdownPage\";\nimport LoadingSpinner from \"../../placeholder/loading/LoadingSpinner\";\nimport Error from \"../../error/Error\";\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../../../util/errors/ErrorType\";\nimport MarkDownToJsx from \"../MarkDownToJsx\";\nimport './EditMarkdownPage.scss';\nimport RequestFactory from \"../../../util/api/RequestFactory\";\n\ninterface IProps {\n    slug: string,\n    title?: string,\n    onSave: (error: ErrorType|null) => any,\n}\n\nexport default function EditMarkdownPage({slug, onSave, title: _title}: IProps) {\n    const {page, error, loading} = useMarkdownPage(slug);\n    const [md, setMd] = useState('');\n    const [title, setTitle] = useState(_title || '');\n\n    useEffect(() => {\n        if (page != null) {\n            setMd(page?.markdown?.content || '');\n            setTitle(page?.title || '');\n        }\n    }, [page]);\n\n    async function create(): Promise<ErrorType|null> {\n        const res = await RequestFactory.createPage({\n            p: slug,\n            content: md,\n            title: title,\n        });\n        return errorTypeByHttpStatusCode(res.status);\n    }\n\n    async function edit(): Promise<ErrorType|null> {\n        const res = await RequestFactory.editPage({\n            p: slug,\n            content: md,\n            title: title,\n        });\n        return errorTypeByHttpStatusCode(res.status);\n    }\n\n    return (<div className=\"edit-markdown-page\">\n        <LoadingSpinner color=\"#0a0\" loading={loading} />\n        {error && error !== ErrorType.NOT_FOUND && <Error errorType={error} />}\n        {!loading && (<>\n            <div className=\"left\">\n                {error === ErrorType.NOT_FOUND && title === '' && (\n                    <input\n                        value={title}\n                        onChange={e => setTitle(e.target.value)}\n                    />)\n                }\n                <textarea\n                    value={md}\n                    onChange={(e) => setMd(e.target.value)}\n                />\n            </div>\n            <MarkDownToJsx md={md}/>\n            <button\n                className=\"save-btn\"\n                onClick={() => {\n                    if (error === ErrorType.NOT_FOUND) {\n                        create().then(onSave);\n                    } else {\n                        edit().then(onSave);\n                    }\n                }}\n                disabled={slug === '' || md === ''}\n            >Speichern</button>\n        </>)}\n    </div>);\n}\n","import React from 'react'\nimport {Redirect, Route, Switch, useRouteMatch, useHistory} from 'react-router-dom';\nimport DashboardPage from \"../pages/admin/dashboard/DashboardPage\";\nimport {IRouterProps} from \"./Routes\";\nimport Error from \"../error/Error\";\nimport ErrorType from \"../../util/errors/ErrorType\";\nimport StatisticsPage from \"../pages/admin/statistics/StatisticsPage\";\nimport AdminPage from \"../pages/admin/AdminPage\";\nimport EditMarkdownPage from \"../md_page/edit/EditMarkdownPage\";\n\nconst AdminRouter = ({user}: IRouterProps) => {\n    const {path, } = useRouteMatch();\n    const history = useHistory();\n\n    if (user == null || !user.isAdmin) {\n        return <Redirect to=\"/auth/logout\" />\n    }\n\n    return (<Switch>\n        <Route exact path={`${path}/`}>\n            <AdminPage>\n                <DashboardPage />\n            </AdminPage>\n        </Route>\n        <Route exact path={`${path}/kontakt`}>\n            <AdminPage>\n                <EditMarkdownPage slug=\"kontakt\" title=\"Kontakt\" onSave={(error => history.push('/-/kontakt'))} />\n            </AdminPage>\n        </Route>\n        <Route exact path={`${path}/impressum`}>\n            <AdminPage>\n                <EditMarkdownPage slug=\"impressum\" title=\"Impressum\" onSave={(error => history.push('/-/impressum'))} />\n            </AdminPage>\n        </Route>\n        <Route exact path={`${path}/statistics`}>\n            <AdminPage>\n                <StatisticsPage />\n            </AdminPage>\n        </Route>\n        <Route path=\"*\">\n            <Error errorType={ErrorType.NOT_FOUND}/>\n        </Route>\n    </Switch>);\n};\n\nexport default AdminRouter;\n","export type Theme = {\n    nav: NavTheme,\n    footer: FooterTheme,\n};\n\ntype NavTheme = {\n    bg: string,\n    font: string,\n}\n\ntype FooterTheme = {\n    bg: string,\n    font: string,\n}\n\nexport const defaultTheme: Theme = {\n    nav: {\n        bg: '#222',\n        font: '#ccc',\n    },\n    footer: {\n        bg: '#222',\n        font: '#ccc',\n    }\n};\n","import React, {useEffect} from \"react\";\nimport MarkDownToJsx from \"./MarkDownToJsx\";\nimport LoadingSpinner from \"../placeholder/loading/LoadingSpinner\";\nimport Error from \"../error/Error\";\nimport useMarkdownPage from \"../../hooks/useMarkdownPage\";\n\ninterface IProps {\n    slug: string\n}\n\nexport default function MarkdownPage({slug}: IProps) {\n    const {page, loading, error} = useMarkdownPage(slug);\n\n    useEffect(() => {\n        if (page != null) {\n            document.title = page.title;\n        }\n    }, [page]);\n\n    return (\n    <section>\n        <LoadingSpinner\n            loading={loading}\n            color=\"#0a0\"\n            delayMs={500}\n            fullScreen={false}\n        />\n        { page == null\n            ? (error == null ? '' : <Error errorType={error}/>)\n            : <MarkDownToJsx md={page?.markdown?.content || ''}/>\n        }\n    </section>);\n}\n","import React from \"react\";\nimport {Theme} from \"../../../../util/themes/themes\";\nimport {Link} from \"react-router-dom\";\nimport User from \"../../../../util/models/User\";\nimport './Footer.scss';\n\ninterface IProps {\n    theme: Theme,\n    user: User|null,\n}\n\nconst Footer: React.FC<IProps> = ({theme, user}) => {\n    return <footer\n        className=\"footer\"\n        style={{\n            backgroundColor: theme.footer.bg,\n            color: theme.footer.font,\n        }}\n    >\n        <div>\n            {user == null\n                ? <Link to=\"/auth/login\">Login</Link>\n                : <>\n                    <p>{user?.email}</p>\n                    <div><Link to=\"/auth/logout\">Logout</Link></div>\n                    {user?.isAdmin && <div><Link to=\"/admin\">Dashboard</Link></div>}\n                </>}\n        </div>\n    </footer>\n};\n\nexport default Footer;\n","import React, {useEffect} from \"react\";\nimport { motion } from \"framer-motion\";\nimport './PageContent.scss';\nimport {Theme} from \"../../../../util/themes/themes\";\nimport {useDispatch} from \"react-redux\";\nimport ActionType from \"../../../../actions/ActionType\";\nimport {IRouterProps} from \"../../../routes/Routes\";\nimport Footer from \"../footer/Footer\";\n\nconst pageVariants = {\n    initial: {\n        opacity: 0,\n        x: '-100vw',\n        scale: 0.8,\n    },\n    in: {\n        opacity: 1,\n        x: 0,\n        scale: 1,\n    },\n    out: {\n        opacity: 0,\n        x: '100vw',\n        scale: 1.2,\n    },\n};\n\nconst pageTransition = {\n    duration: 1,\n    type: 'tween',\n    ease: 'anticipate',\n};\n\ninterface IProps extends IRouterProps {\n    theme: Theme,\n}\n\nconst PageContent: React.FC<IProps> = ({children, theme, user}) => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({\n            type: ActionType.SET_THEME,\n            theme: theme,\n        });\n    }, [theme, dispatch]);\n\n    return <motion.div\n        className=\"page-content\"\n        initial=\"initial\"\n        animate=\"in\"\n        exit=\"out\"\n        variants={pageVariants}\n        transition={pageTransition}\n    >\n        {children}\n        <Footer theme={theme} user={user}/>\n    </motion.div>\n};\n\nexport default PageContent;\n","import React from \"react\";\nimport MarkdownPage from \"../../md_page/MarkdownPage\";\nimport PageContent from \"../page/content/PageContent\";\nimport {defaultTheme} from \"../../../util/themes/themes\";\nimport {IRouterProps} from \"../../routes/Routes\";\n\nexport default function ImpressumPage(props: IRouterProps) {\n    return (\n        <PageContent\n            theme={{\n                ...defaultTheme,\n                nav: {...defaultTheme.nav, bg: 'purple', font: '#fff',},\n                footer: {...defaultTheme.footer, bg: 'purple', font: '#fff',},\n            }}\n            {...props}\n        >\n            <MarkdownPage slug=\"impressum\" />\n        </PageContent>\n    );\n}\n","import React, {useState} from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport {Theme} from \"../../../../util/themes/themes\";\nimport './Nav.scss';\n\ninterface IProps {\n    theme: Theme,\n}\n\nconst Nav: React.FC<IProps> = ({theme}) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return <nav\n        className=\"nav\"\n        style={{\n            backgroundColor: theme.nav.bg,\n            color: theme.nav.font,\n        }}\n        data-visible={isOpen ? 'yes' : 'no'}\n    >\n        <h1>\n            <button className=\"open-sidebar-btn\" onClick={() => setIsOpen(!isOpen)}><span /></button>\n            <Link to=\"/\">Kinderstube Sethweg e.V.</Link>\n        </h1>\n        <ul>\n            <button className=\"close-btn\" onClick={() => setIsOpen(!isOpen)}>\n            </button>\n            {[\n                {target: '/-/about', title: 'Über uns'},\n                {target: '/-/team', title: 'Team'},\n                {target: '/-/einrichtung', title: 'Einrichtung'},\n                {target: '/-/kontakt', title: 'Kontakt'},\n                {target: '/-/impressum', title: 'Impressum'},\n            ].map(l => <li key={l.target}>\n                <NavLink\n                    to={l.target}\n                    activeClassName='active'\n                    onClick={() => setIsOpen(false)}\n                >{l.title}</NavLink>\n            </li>)}\n        </ul>\n    </nav>\n};\n\nexport default Nav;\n","import React from \"react\";\nimport './Page.scss';\nimport Nav from \"./nav/Nav\";\nimport {useSelector} from \"react-redux\";\nimport {themeSelector} from \"../../../selectors/selectors\";\nimport {IRouterProps} from \"../../routes/Routes\";\n\nconst Page: React.FC<IRouterProps> = ({children, user}) => {\n    const theme = useSelector(themeSelector);\n\n    return <div className=\"page\">\n        <Nav theme={theme} />\n        <div className=\"content\">\n            <main>\n                {children}\n            </main>\n        </div>\n    </div>\n};\n\nexport default Page;\n","import React from \"react\";\nimport MarkdownPage from \"../../md_page/MarkdownPage\";\nimport PageContent from \"../page/content/PageContent\";\nimport {defaultTheme} from \"../../../util/themes/themes\";\nimport {IRouterProps} from \"../../routes/Routes\";\n\nexport default function KontaktPage(props: IRouterProps) {\n    return (\n        <PageContent\n            theme={{\n                ...defaultTheme,\n                nav: {...defaultTheme.nav, bg: 'darkorange', font: '#000',},\n                footer: {...defaultTheme.footer, bg: 'darkorange', font: '#000',},\n            }}\n            {...props}\n        >\n            <MarkdownPage slug=\"kontakt\" />\n        </PageContent>\n    );\n}\n","import React from 'react'\nimport {Route, Switch, useLocation, useRouteMatch} from 'react-router-dom';\nimport {defaultTheme} from \"../../util/themes/themes\";\nimport {AnimatePresence} from \"framer-motion\";\nimport ImpressumPage from \"../pages/impressum/ImpressumPage\";\nimport Error from \"../error/Error\";\nimport ErrorType from \"../../util/errors/ErrorType\";\nimport Page from \"../pages/page/Page\";\nimport {IRouterProps} from \"./Routes\";\nimport PageContent from \"../pages/page/content/PageContent\";\nimport KontaktPage from \"../pages/kontakt/KontaktPage\";\n\nconst PagesRouter = (props: IRouterProps) => {\n    const {path, } = useRouteMatch();\n    const location = useLocation();\n\n    return (<Page {...props}>\n        <AnimatePresence exitBeforeEnter={false}>\n            <Switch location={location} key={location.pathname}>\n                <Route path={`${path}/kontakt`}>\n                    <KontaktPage {...props} />\n                </Route>\n                <Route path={`${path}/impressum`}>\n                    <ImpressumPage {...props} />\n                </Route>\n                <Route path={`${path}/*`}>\n                    <PageContent theme={{...defaultTheme}} {...props}>\n                        <Error errorType={ErrorType.NOT_FOUND} message=\"Seite nicht gefunden\" />\n                    </PageContent>\n                </Route>\n            </Switch>\n        </AnimatePresence>\n    </Page>);\n};\n\nexport default PagesRouter;\n","import React from \"react\";\nimport {Route, Switch,} from \"react-router-dom\";\nimport AuthRouter from \"./AuthRouter\";\nimport HomePage from \"../pages/home/HomePage\";\nimport Error from \"../error/Error\";\nimport ErrorType from \"../../util/errors/ErrorType\";\nimport AdminRouter from \"./AdminRouter\";\nimport User from \"../../util/models/User\";\nimport PagesRouter from \"./PagesRouter\";\n\nexport interface IRouterProps {\n    user: User|null,\n}\n\nexport default function Routes(props: IRouterProps) {\n    return (<Switch>\n        <Route path=\"/auth\">\n            <AuthRouter {...props} />\n        </Route>\n        <Route path=\"/admin\">\n            <AdminRouter {...props} />\n        </Route>\n        <Route path=\"/-\">\n            <PagesRouter {...props} />\n        </Route>\n        <Route exact path=\"/\">\n            <HomePage />\n        </Route>\n        <Route path=\"*\">\n            <Error errorType={ErrorType.NOT_FOUND} />\n        </Route>\n    </Switch>);\n}\n","import React, {useEffect, useState} from 'react';\nimport RequestFactory from \"../../util/api/RequestFactory\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ActionType from \"../../actions/ActionType\";\nimport {errorSelector, settingsSelector, userSelector} from \"../../selectors/selectors\";\nimport SettingsApplyer from \"../settings/SettingsApplyer\";\nimport ApiResponse from \"../../util/api/ApiResponse\";\nimport PreflightResponse from \"../../util/api/responses/PreflightResponse\";\nimport ErrorType, {errorTypeByHttpStatusCode} from \"../../util/errors/ErrorType\";\nimport Error from \"../error/Error\";\nimport Api from \"../../util/api/Api\";\nimport Routes from \"../routes/Routes\";\nimport './App.scss';\nimport LoadingSpinner from \"../placeholder/loading/LoadingSpinner\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\ninterface IProps {\n  license: string,\n}\n\nexport default function App({license}: IProps) {\n  const dispatch = useDispatch();\n  const settings = useSelector(settingsSelector);\n  const error = useSelector(errorSelector);\n  const user = useSelector(userSelector);\n  const [ loading, setLoading ] = useState(true);\n\n  useEffect(() => {\n    if (!license) {\n      dispatch({\n        type: ActionType.SET_ERROR,\n        error: ErrorType.INVALID_LICENSE,\n      });\n      return;\n    }\n    RequestFactory.getConfig().then(res => {\n      if (res.status !== 200) {\n        dispatch({\n          type: ActionType.SET_ERROR,\n          error: errorTypeByHttpStatusCode(res.status)\n        });\n      } else {\n        Api.baseUrl = res.data.baseApiUrl;\n        RequestFactory.preflight(license).then(handlePreflightResponse(dispatch));\n      }\n    });\n  }, [dispatch, license]);\n\n  useEffect(() => {\n    if (settings != null) {\n      setLoading(false);\n    }\n  }, [settings]);\n\n  if (error != null) {\n    return <Error errorType={error} />;\n  }\n\n  return (<Router>\n    {settings != null && <SettingsApplyer settings={settings} />}\n    <LoadingSpinner color=\"#0a0\" loading={loading} fullScreen={true} />\n    {!loading && <Routes user={user} />}\n  </Router>);\n}\n\nfunction handlePreflightResponse(dispatch: Function) {\n  return (res: ApiResponse<PreflightResponse>) => {\n    if (res.status === 200) {\n      dispatch({\n        type: ActionType.SET_SETTINGS,\n        settings: res.data.settings\n      });\n      dispatch({\n        type: ActionType.SET_USER,\n        user: res.data.user\n      });\n    } else {\n      dispatch({\n        type: ActionType.SET_ERROR,\n        error: (res.status === 401 ? ErrorType.INVALID_LICENSE : errorTypeByHttpStatusCode(res.status))\n      });\n    }\n  }\n}\n","import Setting from \"./Setting\";\nimport ErrorType from \"../errors/ErrorType\";\nimport User from \"./User\";\nimport {defaultTheme, Theme} from \"../themes/themes\";\n\nclass State {\n\n    user: User|null = null;\n    settings: Setting[]|null = null;\n    error: ErrorType|null = null;\n    theme: Theme = defaultTheme;\n\n}\n\nexport default State;\n","import State from '../util/models/State';\nimport ActionType from \"../actions/ActionType\";\nimport SetSettingsAction from \"../actions/settings/SetSettingsAction\";\nimport SetErrorAction from \"../actions/errors/SetErrorAction\";\nimport SetUserAction from \"../actions/user/SetUserAction\";\nimport SetThemeAction from \"../actions/themes/SetThemeAction\";\n\nconst rootReducer = (\n    state: State = new State(),\n    action: SetSettingsAction | SetErrorAction | SetUserAction | SetThemeAction\n): State => {\n    switch(action.type) {\n        case ActionType.SET_USER:\n            return {...state, user: action.user};\n        case ActionType.SET_SETTINGS:\n            return {...state, settings: action.settings};\n        case ActionType.SET_ERROR:\n            return {...state, error: action.error};\n        case ActionType.SET_THEME:\n            return {...state, theme: action.theme};\n    }\n\n    return state;\n};\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport {Provider} from \"react-redux\";\nimport rootReducer from \"./reducers/reducer\";\nimport { createStore } from 'redux';\nimport license from \"./license\";\nimport './index.scss';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App license={license} />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default 'a58Gx?64';"],"sourceRoot":""}